[{"name":"file-icons","repository":{"type":"git","url":"https://github.com/file-icons/atom"},"downloads":7479448,"stargazers_count":5535,"releases":{"latest":"2.1.35"},"readme":"File Icons\n==========\n\n[![Build status: TravisCI](https://travis-ci.org/file-icons/atom.svg?branch=master)](https://travis-ci.org/file-icons/atom)\n[![Build status: AppVeyor](https://ci.appveyor.com/api/projects/status/6p3e1pj327ee7ylu?svg=true)](https://ci.appveyor.com/project/Alhadis/atom)\n[![Latest package version](https://img.shields.io/apm/v/file-icons.svg?colorB=brightgreen)](https://github.com/file-icons/atom/releases/latest)\n\nFile-specific icons in Atom for improved visual grepping.\n\n\u003cimg alt=\"Icon previews\" width=\"850\" src=\"https://raw.githubusercontent.com/file-icons/atom/6714706f268e257100e03c9eb52819cb97ad570b/preview.png\" /\u003e\n\nSupports the following core packages:\n\n* [`tree-view`](https://atom.io/packages/tree-view)\n* [`tabs`](https://atom.io/packages/tabs)\n* [`fuzzy-finder`](https://atom.io/packages/fuzzy-finder)\n* [`find-and-replace`](https://atom.io/packages/find-and-replace)\n* [`archive-view`](https://atom.io/packages/archive-view)\n\nAn API is offered for packages not listed above. See the [integration steps][13] for more info.\n\n\nInstallation\n------------\nOpen **Settings** → **Install** and search for `file-icons`.\n\nAlternatively, install through command-line:\n\n\tapm install file-icons\n\n\nCustomisation\n-------------\nEverything is handled using CSS classes. Use your [stylesheet][1] to change or tweak icons.\n\nConsult the package stylesheets to see what classes are used:\n\n* **Icons:**   [`styles/icons.less`](./styles/icons.less)\n* **Colours:** [`styles/colours.less`](./styles/colours.less)\n* **Fonts:**   [`styles/fonts.less`](./styles/fonts.less)\n\n\n#### Icon reference\n* [**File-Icons**](https://github.com/file-icons/source/blob/master/charmap.md) \n* [**FontAwesome 4.7.0**](https://fontawesome.com/v4.7.0/cheatsheet/)\n* [**Mfizz**](https://github.com/file-icons/MFixx/blob/master/charmap.md)\n* [**Devicons**](https://github.com/file-icons/DevOpicons/blob/master/charmap.md)\n\n\n### Examples ####################################################################\n\n#### Resize an icon\n~~~less\n.html5-icon:before{\n\tfont-size: 18px;\n}\n\n// Resize in tab-pane only:\n.tab \u003e .html5-icon:before{\n\tfont-size: 18px;\n\ttop: 3px;\n}\n~~~\n\n\n#### Choose your own shades of orange\n~~~css\n.dark-orange   { color: #6a1e05; }\n.medium-orange { color: #b8743d; }\n.light-orange  { color: #cf9b67; }\n~~~\n\n\n#### Bring back PHP's blue-shield icon\n~~~css\n.php-icon:before{\n\tfont-family: MFizz;\n\tcontent: \"\\f147\";\n}\n~~~\n\n\n#### Assign icons by file extension\nThe following examples use [attribute selectors][12] to target specific pathnames:\n\n~~~css\n.icon[data-name$=\".js\"]:before{\n\tfont-family: Devicons;\n\tcontent: \"\\E64E\";\n}\n~~~\n\n\n#### Assign icons to directories\n~~~less\n.directory \u003e .header \u003e .icon{\n\t\u0026[data-path$=\".atom/packages\"]:before{\n\t\tfont-family: \"Octicons Regular\";\n\t\tcontent: \"\\f0c4\";\n\t}\n}\n~~~\n\n\n\nTroubleshooting\n---------------\n\n\u003ca name=\"error-after-installing\"\u003e\u003c/a\u003e\n#### I see this error after installing:\n\u003e _\"Cannot read property 'onDidChangeIcon' of undefined\"_\n\nA restart is needed to complete installation. Reload the window, or restart Atom.\n\nIf this doesn't help, [please file an issue][7].\n\n\n\n\u003ca name=\"npm-error-when-installing\"\u003e\u003c/a\u003e\n#### Installation halts with an `npm` error:\n\u003e _npm ERR! cb() never called!_\n\nThere might be a corrupted download in your local cache.\nDelete `~/.atom/.apm`, then try again:\n\n~~~shell\nrm -rf ~/.atom/.apm\napm install --production file-icons\n~~~\n\n\n\n\u003ca name=\"an-icon-has-stopped-updating\"\u003e\u003c/a\u003e\n#### An icon has stopped updating:\nIt's probably a caching issue. Do the following:\n\n1. Open the command palette: \u003ckbd\u003eCmd/Ctrl\u003c/kbd\u003e + \u003ckbd\u003eShift\u003c/kbd\u003e + \u003ckbd\u003eP\u003c/kbd\u003e\n2. Run `file-icons:clear-cache`\n3. Reload the window, or restart Atom\n\n\n\n\u003ca name=\"ruby-files-look-weird\"\u003e\u003c/a\u003e\n#### Ruby files are showing the [wrong font][14]:\nIf [`language-ethereum`][15] is installed, remove it.\nThis is a [known issue][16] with the package, which is no longer maintained.\nFor Solidity support, use [`linter-solidity`][17] or [`language-solidity`][18] instead.\n\nIf `language-ethereum` *isn't* installed, please [follow these steps][19] and file an issue.\n\n\n\n\u003ca name=\"the-tree-views-files-are-borked\"\u003e\u003c/a\u003e\n#### The tree-view's files are borked and [look like this][6]:\nIf you haven't restarted Atom since upgrading to [File-Icons v2][v2.0], do so now.\n\nIf restarting doesn't help, your stylesheet probably needs updating. See below.\n\n\n\n\u003ca name=\"my-stylesheet-has-errors-since-updating\"\u003e\u003c/a\u003e\n#### My stylesheet has errors since updating:\nAs of [v2.0][], classes are used for displaying icons instead of mixins. Delete lines like these from your stylesheet:\n\n~~~diff\n-@import \"packages/file-icons/styles/icons\";\n-@import \"packages/file-icons/styles/items\";\n-@{pane-tab-selector},\n.icon-file-directory {\n\t\u0026[data-name=\".git\"]:before {\n-\t\t.git-icon;\n+\t\tfont-family: Devicons;\n+\t\tcontent: \"\\E602\";\n\t}\n}\n~~~\n\n\nInstead of `@pane-tab…` variables, use `.tab \u003e .icon[data-path]`:\n\n~~~diff\n-@pane-tab-selector,\n-@pane-tab-temp-selector,\n-@pane-tab-override {\n+.tab \u003e .icon {\n \t\u0026[data-path$=\".to.file\"] {\n \t\t\n \t}\n}\n~~~\n\n\nThese CSS classes are no longer used, so delete them:\n\n~~~diff\n-.file-icons-force-show-icons,\n-.file-icons-tab-pane-icon,\n-.file-icons-on-changes\n~~~\n\n\n#### It's something else.\nPlease [file an issue][7]. Include screenshots if necessary.\n\n\n\nIntegration with other packages\n-----------------------------------------------------------------------------------\nIf you're a package author, you can integrate File-Icons using Atom's services API.\n\nFirst, add this to your `package.json` file:\n\n```json\n\"consumedServices\": {\n\t\"file-icons.element-icons\": {\n\t\t\"versions\": {\n\t\t\t\"1.0.0\": \"consumeElementIcons\"\n\t\t}\n\t}\n}\n```\n\nSecondly, add a function named `consumeElementIcons` (or whatever you named it) to your package's main export:\n\n```js\nlet addIconToElement;\nmodule.exports.consumeElementIcons = function(func){\n\taddIconToElement = func;\n};\n```\n\nThen call the function it gets passed to display icons in the DOM:\n\n```js\nlet fileIcon = document.querySelector(\"li.file-entry \u003e span.icon\");\naddIconToElement(fileIcon, \"/path/to/file.txt\");\n```\n\nThe returned value is a [`Disposable`][10] which clears the icon from memory once it's no longer needed:\n\n```js\nconst disposable = addIconToElement(fileIcon, \"/path/to/file.txt\");\nfileIcon.onDestroy(() =\u003e disposable.dispose());\n```\n\n**NOTE:** Remember to remove any default icon-classes *before* calling the service handler!\n\n```diff\n let fileIcon = document.querySelector(\"li.file-entry \u003e span.icon\");\n+fileIcon.classList.remove(\"icon-file-text\");\n const disposable = addIconToElement(fileIcon, \"/path/to/file.txt\");\n```\n\n\nBackers\n------------------------------------------------------------------------------------------\nIf you enjoy these icons, help support the project by [becoming a backer][20]. Huge thanks\nto our current backers for their generous support:\n\n\u003ca title=\"Justin Ireland\" href=\"https://github.com/justinireland\"\u003e\u003cimg alt=\"Justin Ireland\" height=\"32\" src=\"https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa23264984bdeee03b97d970cd893a595%3Fdefault%3D404\"/\u003e\u003c/a\u003e\n\u003ca title=\"Tipe\" href=\"https://tipe.io/\"\u003e\u003cimg alt=\"Tipe\" height=\"32\" src=\"https://camo.githubusercontent.com/cc8c116a0174ba6f6884fda5415ccd232173d0c7/68747470733a2f2f63646e2e746970652e696f2f746970652f746970652d3130323478313032342e706e67\"/\u003e\u003c/a\u003e\n\u003ca title=\"Triplebyte\" href=\"https://github.com/triplebyte\"\u003e\u003cimg alt=\"Triplebyte\" height=\"32\" src=\"https://avatars3.githubusercontent.com/u/12144133\"/\u003e\u003c/a\u003e\n\u003ca title=\"TakeShape\" href=\"https://github.com/takeshape\"\u003e\u003cimg alt=\"TakeShape\" height=\"32\" src=\"https://avatars0.githubusercontent.com/u/20775272\"/\u003e\u003c/a\u003e\n\n\nAcknowledgements\n------------------------------------------------------------------------------------------\n`v1` was originally based on [sommerper/filetype-color][8]. `v2` was completely rewritten.\nBoth versions owe their success to innumerable [contributions][9] from the Atom community.\n\n\n[Referenced links]: ____________________________________________________\n[1]: https://flight-manual.atom.io/using-atom/sections/basic-customization/#style-tweaks\n[4]: https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n[5]: https://github.com/file-icons/DevOpicons/blob/master/charmap.md#JavaScript\n[6]: https://cloud.githubusercontent.com/assets/714197/21516010/4b79a8a8-cd39-11e6-8394-1e3ab778af92.png\n[7]: https://github.com/file-icons/atom/issues/new\n[8]: https://github.com/sommerper/filetype-color\n[9]: https://github.com/file-icons/atom/graphs/contributors\n[10]: https://atom.io/docs/api/latest/Disposable\n[11]: https://github.com/Alhadis\n[12]: https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n[13]: https://github.com/file-icons/atom#integration-with-other-packages\n[14]: https://user-images.githubusercontent.com/4875955/40267919-1829d17e-5b65-11e8-9ea4-974a6bd79c37.png\n[15]: https://atom.io/packages/language-ethereum\n[16]: https://github.com/caktux/language-ethereum/pull/13\n[17]: https://atom.io/packages/linter-solidity\n[18]: https://atom.io/packages/language-solidity\n[19]: https://github.com/file-icons/atom/issues/708#issuecomment-366959765\n[20]: https://opencollective.com/file-icons/#support\n[v2.0]: https://github.com/file-icons/atom/releases/tag/v2.0.0\n","metadata":{"name":"file-icons","main":"lib/main.js","version":"2.1.35","private":true,"description":"Assign file extension icons and colours for improved visual grepping","repository":"https://github.com/file-icons/atom","bugs":"https://github.com/file-icons/atom/issues","homepage":"https://github.com/file-icons/atom","license":"MIT","engines":{"atom":"\u003e=1.25.0"},"atomTestRunner":"atom-mocha","dependencies":{"atom-fs":"v0.1.6","lru-cache":"^5.1.1","mapped-disposable":"^1.0.3","micromatch":"^3.1.10"},"devDependencies":{"atom-mocha":"^2.2.1","coffee-script":"^1.12.7","coffeelint":"^2.1.0","eslint":"^5.16.0","get-options":"^1.2.0","rimraf":"^2.6.3","tmp":"^0.1.0","unzipper":"^0.9.15"},"scripts":{"lint":"npx eslint . \u0026\u0026 npx coffeelint -q config.cson","test":"atom -t ./test/"},"providedServices":{"file-icons.element-icons":{"versions":{"1.0.0":"provideService"}},"atom.file-icons":{"versions":{"1.0.0":"suppressFOUC"}}},"configSchema":{"coloured":{"type":"boolean","default":true,"description":"Untick this for colourless icons","order":1},"onChanges":{"type":"boolean","default":false,"title":"Only colour when changed","description":"Show different icon colours for modified files only. Requires that project be a Git repository.","order":2},"tabPaneIcon":{"type":"boolean","default":true,"title":"Show icons in file tabs","order":3},"defaultIconClass":{"type":"string","default":"default-icon","title":"Default icon class","description":"CSS class added to files that lack an icon.","order":4},"strategies":{"type":"object","title":"Match strategies","description":"Advanced settings for dynamic icon assignment.","order":5,"properties":{"grammar":{"type":"boolean","default":true,"order":1,"title":"Change on grammar override","description":"Change a file's icon when manually setting its language."},"hashbangs":{"type":"boolean","default":true,"order":2,"title":"Check hashbangs","description":"Allow lines like `#!/usr/bin/perl` to affect icons."},"modelines":{"type":"boolean","default":true,"order":3,"title":"Check modelines","description":"Allow [Vim](http://vim.wikia.com/wiki/Modeline_magic) and [Emacs](https://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html#Specifying-File-Variables) modelines to change icons."},"usertypes":{"type":"boolean","default":true,"order":4,"title":"Use custom file-types","description":"Respect the user's [custom language-type settings](http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-language-recognition)."},"linguist":{"type":"boolean","default":true,"order":5,"title":"Use .gitattributes","description":"Honour [`linguist-language`](https://github.com/github/linguist#using-gitattributes) attributes in local `.gitattributes` files."}}}}}},{"name":"linter","repository":{"type":"git","url":"https://github.com/steelbrain/linter"},"downloads":6727592,"stargazers_count":4573,"releases":{"latest":"2.3.1"},"readme":"Linter\n======\n\n[![Slack Badge](https://img.shields.io/badge/chat-atom.io%20slack-blue.svg?style=flat-square)](http://atom-slack.herokuapp.com/)\n[![Build Status](https://img.shields.io/circleci/project/steelbrain/linter.svg?style=flat-square)](https://circleci.com/gh/steelbrain/linter)\n[![Plugin installs!](https://img.shields.io/apm/dm/linter.svg?style=flat-square)](https://atom.io/packages/linter)\n[![Package version!](https://img.shields.io/apm/v/linter.svg?style=flat-square)](https://atom.io/packages/linter)\n[![Dependencies!](https://img.shields.io/david/steelbrain/Linter.svg?style=flat-square)](https://david-dm.org/steelbrain/linter)\n[![OpenCollective](https://opencollective.com/linter/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/linter/sponsors/badge.svg)](#sponsors)\n\n\nLinter is a base linter provider for the hackable [Atom Editor](http://atom.io). Additionally, you need to install a specific linter for your language. You will find a full list on [atomlinter.github.io](http://atomlinter.github.io/).\n\nIt provides a top-level API to its consumer so that they can visualize errors and other types of messages with ease.\n\n\n![Preview](https://cloud.githubusercontent.com/assets/4278113/23879933/1ab17e2a-0872-11e7-803d-3fe0ccfc6790.gif)\n\n#### How to / Installation\n\nYou can install through the CLI by doing:\n\n```\n$ apm install linter\n```\n\nOr you can install from Settings view by searching for `Base Linter`, (this package might not show up when searching for `Linter`).\n\n#### API Documentation\n\nPlease navigate to [steelbrain.me/linter](http://steelbrain.me/linter/) for Linter v2 documentation.\n\n#### Contribute\n\nStick to imposed codestyle:\n\n* `$ npm i`\n* `$ npm lint`\n* `$ npm test`\n","metadata":{"name":"linter","main":"./lib/index.js","author":"steelbrain","readme":"./README.md","version":"2.3.1","description":"A Base Linter with Cow Powers","repository":"https://github.com/steelbrain/linter","license":"MIT","keywords":["linter","base linter"],"private":true,"scripts":{"test":"apm test","lint":"(flow check) \u0026\u0026 (eslint . ) \u0026\u0026 (prettier --list-different lib/*.js)"},"engines":{"atom":"\u003e=1.14.0 \u003c2.0.0"},"consumedServices":{"linter":{"versions":{"2.0.0":"consumeLinter"}},"linter-ui":{"versions":{"1.0.0":"consumeUI"}}},"providedServices":{"linter-indie":{"versions":{"2.0.0":"provideIndie"}}},"dependencies":{"atom-package-deps":"^5.1.0","atom-select-list":"^0.7.2","lodash":"^4.17.15","minimatch":"^3.0.3"},"devDependencies":{"eslint-config-steelbrain":"^7.0.0","flow-bin":"^0.102.0","jasmine-fix":"^1.3.1"},"package-deps":["linter-ui-default"],"configSchema":{"lintPreviewTabs":{"type":"boolean","description":"Lint tabs while they are still in preview status","default":true,"order":1},"lintOnOpen":{"title":"Lint on Open","description":"Lint files automatically when they are opened","type":"boolean","default":true,"order":2},"lintOnChange":{"title":"Lint on Change","description":"Lint files while typing, without the need to save (only for supported providers)","type":"boolean","default":true,"order":3},"lintOnChangeInterval":{"title":"Lint on Change Interval","description":"Interval at which linting is done as you type (in ms)","type":"integer","default":300,"order":4},"ignoreGlob":{"title":"Ignore files matching this Glob","type":"string","default":"**/*.min.{js,css}","order":5},"disabledProviders":{"title":"Disabled providers","type":"array","items":{"type":"string"},"description":"Names of disabled linter providers","default":[],"order":6}}}},{"name":"atom-beautify","repository":{"type":"git","url":"https://github.com/Glavin001/atom-beautify"},"downloads":6657751,"stargazers_count":5202,"releases":{"latest":"0.33.4"},"readme":"# :lipstick: [atom-beautify](https://github.com/Glavin001/atom-beautify)\n[![apm](https://img.shields.io/apm/dm/atom-beautify.svg)](https://atom.io/packages/atom-beautify)\n[![GitHub stars](https://img.shields.io/github/stars/Glavin001/atom-beautify.svg?style=flat-square)](https://github.com/Glavin001/atom-beautify/stargazers)\n[![GitHub issues](https://img.shields.io/github/issues/Glavin001/atom-beautify.svg?style=flat-square)](https://github.com/Glavin001/atom-beautify/issues)\n[![Greenkeeper badge](https://badges.greenkeeper.io/Glavin001/atom-beautify.svg)](https://greenkeeper.io/)\n\n[![Slack](https://unibeautify-slack.glitch.me/badge.svg)](https://unibeautify-slack.glitch.me/)\n[![Twitter Follow](https://img.shields.io/twitter/follow/unibeautify.svg?style=social\u0026label=Follow)](https://twitter.com/unibeautify)\n[![Gitter](https://img.shields.io/gitter/room/Glavin001/atom-beautify.svg?style=flat-square)](https://gitter.im/Glavin001/atom-beautify)\n[![Bountysource](https://img.shields.io/bountysource/team/atom-beautify/activity.svg?style=flat-square)](https://www.bountysource.com/teams/atom-beautify)\n[![Paypal Donations](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations\u0026business=X2RK5DKN6YXPJ\u0026lc=CA\u0026item_name=Atom%2dBeautify\u0026item_number=atom%2dbeautify\u0026currency_code=CAD\u0026bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted)\n\n\u003c!--\n**Sign up for Unibeautify CI: [https://goo.gl/jmM4QN](https://goo.gl/jmM4QN)**\n--\u003e\n\n[:tada: **Install Unibeautify CI for GitHub** :tada:](https://github.com/apps/unibeautify-ci)\n\n**Help improve Atom-Beautify by completing the quick questionnaire: [https://goo.gl/iEHBNr](https://goo.gl/iEHBNr)**\n\n| Mac OS \u003cimg src=\"https://cloud.githubusercontent.com/assets/1885333/17059766/2530c9d8-4ffd-11e6-9529-3fa47dbff616.png\" width=\"50px\"\u003e and \u003cimg src=\"https://cloud.githubusercontent.com/assets/1885333/17059750/11c4474e-4ffd-11e6-89e1-2486ca5b3234.png\" width=\"100px\"\u003e | \u003cimg src=\"https://cloud.githubusercontent.com/assets/1885333/17059763/206a7d4a-4ffd-11e6-859e-7856902fb300.png\" width=\"100px\"\u003e |\n| --- | --- |\n| [Travis CI: ![Build Status](https://travis-ci.org/Glavin001/atom-beautify.svg?branch=master)](https://travis-ci.org/Glavin001/atom-beautify) | [AppVeyor: ![Build status](https://ci.appveyor.com/api/projects/status/himnq7tjxl2fdc8u/branch/master?svg=true)](https://ci.appveyor.com/project/Glavin001/atom-beautify/branch/master) |\n\n[![Throughput Graph](https://graphs.waffle.io/Glavin001/atom-beautify/throughput.svg)](https://waffle.io/Glavin001/atom-beautify/metrics)\n\n\u003e Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom\n\n| Before | After |\n| --- | ---- |\n| Original HTML | Beautified HTML |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/16542727/db52adc6-408a-11e6-824e-04aed06bd2f7.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542728/dcac3700-408a-11e6-8e35-9c8fc4432edc.png) |\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Beautifiers](#beautifiers)\n- [Language Support](#language-support)\n- [Usage](#usage)\n  - [Command Palette](#command-palette)\n    - [Beautify a Specific Language](#beautify-a-specific-language)\n  - [Selection of Code](#selection-of-code)\n  - [Beautify On Save](#beautify-on-save)\n  - [Keyboard Shortcut](#keyboard-shortcut)\n    - [Custom Keyboard Shortcuts](#custom-keyboard-shortcuts)\n- [Configuration](#configuration)\n  - [Simple](#simple)\n  - [Nested](#nested-recommended)\n- [Troubleshooting](#troubleshooting)\n- [Contributing](#contributing)\n\n## Installation\n\nAtom Package: https://atom.io/packages/atom-beautify\n\n```bash\napm install atom-beautify\n```\n\nOr Settings/Preferences ➔ Install ➔ Search for `atom-beautify`\n\n[:tada: **Install Unibeautify CI for GitHub** :tada:](https://github.com/apps/unibeautify-ci)\n\n### Important Notice: Analytics\n\n[Atom-Beautify respects the `core.telemetryConsent` configuration option from Atom editor.](https://github.com/Glavin001/atom-beautify/issues/1179)\nIf you do not wish to have usage data sent to Google Analytics then please set `core.telemetryConsent` to `no` or `undecided` option before using Atom-Beautify.\nSee [`Anonymous Analytics` section of docs](docs/options.md#anonymous-analytics) for details.\nThank you.\n\n| On Atom Load | Change Setting Later |\n| --- | --- |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/25234140/947b1b50-25b7-11e7-8ebc-0ae37420f13e.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/25234184/b41b4192-25b7-11e7-8185-a83829b48078.png) |\n\n\n### Next Version: [Unibeautify](https://github.com/Unibeautify/unibeautify)\n\nAtom-Beautify is going to be completely rewritten with [Unibeautify](https://github.com/Unibeautify/unibeautify) at its core!\nSee [`unibeautify` branch](../../tree/unibeautify) for work in progress and [Issue #1174](https://github.com/Glavin001/atom-beautify/issues/1174).\n\n[:tada: **Install Unibeautify CI for GitHub** :tada:](https://github.com/apps/unibeautify-ci)\n\n### Poll: Improving installation of third-party beautifiers\n\nMany users are experiencing issues when installing third party beautifiers (e.g. Uncrustify, PHP-CS-Fixer, and many more).\nA possible solution is a \"cloud\" service which provides remote access to these beautifiers. Atom-Beautify would then communicate with these services, allowing for zero-installation beautification.\n\nPlease let us know what you think!\n\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/Yes%2C%20cloud%20solution%20would%20be%20great!)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/Yes%2C%20cloud%20solution%20would%20be%20great!/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20enjoy%20manually%20installing%20beautifiers)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20enjoy%20manually%20installing%20beautifiers/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20am%20happy%20using%20Docker)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20am%20happy%20using%20Docker/vote)\n[![](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20do%20not%20want%20to%20send%20me%20code%20over%20the%20Internet)](https://m131jyck4m.execute-api.us-west-2.amazonaws.com/prod/poll/01BY57P9ACSDQASVT7KYZKZESK/No%2C%20I%20do%20not%20want%20to%20send%20me%20code%20over%20the%20Internet/vote)\n\n## Beautifiers\n\nSome of the supported beautifiers are developed for Node.js and are automatically installed when Atom-Beautify is installed. However, other beautifiers are command-line interface (CLI) applications and require you to manually install them.\n\n| Beautifier | Preinstalled | [:whale: Docker](https://www.docker.com/) | Installation |\n| --- | --- | --- |--- |\n| align-yaml | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| autopep8 | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [autopep8 (`autopep8`)](https://github.com/hhatto/autopep8) with `docker pull unibeautify/autopep8`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [autopep8 (`autopep8`)](https://github.com/hhatto/autopep8) by following https://github.com/hhatto/autopep8#installation\u003cbr/\u003e2. Install [isort (`isort`)](https://github.com/timothycrosley/isort) by following https://github.com/timothycrosley/isort#installing-isort\u003cbr/\u003e |\n| beautysh | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [beautysh (`beautysh`)](https://github.com/bemeurer/beautysh) with `docker pull unibeautify/beautysh`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [beautysh (`beautysh`)](https://github.com/bemeurer/beautysh) by following https://github.com/bemeurer/beautysh#installation\u003cbr/\u003e |\n| black | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [black (`black`)](https://github.com/ambv/black) by following https://github.com/ambv/black#installation\u003cbr/\u003e |\n| brittany | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/lspitzner/brittany and follow the instructions. |\n| clang-format | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [ClangFormat (`clang-format`)](https://clang.llvm.org/docs/ClangFormat.html) with `docker pull unibeautify/clang-format`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [ClangFormat (`clang-format`)](https://clang.llvm.org/docs/ClangFormat.html) by following https://clang.llvm.org/docs/ClangFormat.html\u003cbr/\u003e |\n| cljfmt | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Coffee Formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| coffee-fmt | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Crystal | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [Crystal (`crystal`)](http://crystal-lang.org) with `docker pull unibeautify/crystal`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Crystal (`crystal`)](http://crystal-lang.org) by following https://crystal-lang.org/docs/installation/\u003cbr/\u003e |\n| CSScomb | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| dfmt | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Dfmt (`dfmt`)](https://github.com/Hackerpilot/dfmt) by following https://github.com/dlang-community/dfmt#building\u003cbr/\u003e |\n| elm-format | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [elm-format (`elm-format`)](https://github.com/avh4/elm-format) with `docker pull unibeautify/elm-format`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [elm-format (`elm-format`)](https://github.com/avh4/elm-format) by following https://github.com/avh4/elm-format#installation-\u003cbr/\u003e |\n| Emacs Verilog Mode | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/\u003cbr/\u003e |\n| erl_tidy | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://erlang.org/doc/man/erl_tidy.html and follow the instructions. |\n| ESLint Fixer | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| formatR | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [Rscript (`rscript`)](https://github.com/yihui/formatR) with `docker pull unibeautify/rscript`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Rscript (`rscript`)](https://github.com/yihui/formatR) by following https://github.com/yihui/formatR\u003cbr/\u003e |\n| Fortran Beautifier | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/\u003cbr/\u003e |\n| Gherkin formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| GN | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [gn (`gn`)](https://chromium.googlesource.com/chromium/src/tools/gn) by following https://www.chromium.org/developers/how-tos/get-the-code\u003cbr/\u003e |\n| gofmt | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://golang.org/cmd/gofmt/ and follow the instructions. |\n| goimports | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [goimports (`goimports`)](https://godoc.org/golang.org/x/tools/cmd/goimports) with `docker pull unibeautify/goimports`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [goimports (`goimports`)](https://godoc.org/golang.org/x/tools/cmd/goimports) by following https://godoc.org/golang.org/x/tools/cmd/goimports\u003cbr/\u003e |\n| hh_format | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://hhvm.com/ and follow the instructions. |\n| hindent | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/commercialhaskell/hindent and follow the instructions. |\n| HTML Beautifier | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/threedaymonk/htmlbeautifier and follow the instructions. |\n| JS Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| JSCS Fixer | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Latex Beautify | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/cmhughes/latexindent.pl and follow the instructions. |\n| Lua beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Marko Beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Nginx Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| ocamlformat | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [ocamlformat (`ocamlformat`)](https://github.com/ocaml-ppx/ocamlformat) by following https://github.com/ocaml-ppx/ocamlformat#installation\u003cbr/\u003e |\n| ocp-indent | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [ocp-indent (`ocp-indent`)](https://www.typerex.org/ocp-indent.html) with `docker pull unibeautify/ocp-indent`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [ocp-indent (`ocp-indent`)](https://www.typerex.org/ocp-indent.html) by following https://www.typerex.org/ocp-indent.html#installation\u003cbr/\u003e |\n| Perltidy | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to http://perltidy.sourceforge.net/ and follow the instructions. |\n| PHP-CS-Fixer | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [PHP-CS-Fixer (`php-cs-fixer`)](https://github.com/FriendsOfPHP/PHP-CS-Fixer) with `docker pull unibeautify/php-cs-fixer`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [PHP (`php`)](http://php.net/) by following http://php.net/manual/en/install.php\u003cbr/\u003e2. Install [PHP-CS-Fixer (`php-cs-fixer`)](https://github.com/FriendsOfPHP/PHP-CS-Fixer) by following https://github.com/FriendsOfPHP/PHP-CS-Fixer#installation\u003cbr/\u003e |\n| PHPCBF | :warning: 2 executables | :warning: Only 1 of 2 executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [PHPCBF (`phpcbf`)](https://github.com/squizlabs/PHP_CodeSniffer) with `docker pull unibeautify/phpcbf`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [PHP (`php`)](http://php.net/) by following http://php.net/manual/en/install.php\u003cbr/\u003e2. Install [PHPCBF (`phpcbf`)](https://github.com/squizlabs/PHP_CodeSniffer) by following https://github.com/squizlabs/PHP_CodeSniffer#installation\u003cbr/\u003e |\n| Prettier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Pretty Diff | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Pug Beautify | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| puppet-lint | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [puppet-lint (`puppet-lint`)](http://puppet-lint.com/) with `docker pull unibeautify/puppet-lint`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [puppet-lint (`puppet-lint`)](http://puppet-lint.com/) by following http://puppet-lint.com/\u003cbr/\u003e |\n| pybeautifier | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/guyskk/pybeautifier and follow the instructions. |\n| Remark | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Rubocop | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Rubocop (`rubocop`)](http://rubocop.readthedocs.io/) by following http://rubocop.readthedocs.io/en/latest/installation/\u003cbr/\u003e |\n| Ruby Beautify | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/erniebrodeur/ruby-beautify and follow the instructions. |\n| rustfmt | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/rust-lang-nursery/rustfmt and follow the instructions. |\n| SassConvert | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [SassConvert (`sass-convert`)](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) with `docker pull unibeautify/sass-convert`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [SassConvert (`sass-convert`)](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) by following http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax\u003cbr/\u003e |\n| sqlformat | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/andialbrecht/sqlparse and follow the instructions. |\n| stylish-haskell | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/jaspervdj/stylish-haskell and follow the instructions. |\n| terraformfmt | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [Terraform (`terraform`)](https://www.terraform.io) with `docker pull hashicorp/terraform`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Terraform (`terraform`)](https://www.terraform.io) by following https://www.terraform.io\u003cbr/\u003e |\n| Tidy Markdown | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| TypeScript Formatter | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| Uncrustify | :warning: 1 executable | :white_check_mark: :100:% of executables | :whale: With [Docker](https://www.docker.com/):\u003cbr/\u003e1. Install [Uncrustify (`uncrustify`)](http://uncrustify.sourceforge.net/) with `docker pull unibeautify/uncrustify`\u003cbr/\u003e\u003cbr/\u003e:bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Uncrustify (`uncrustify`)](http://uncrustify.sourceforge.net/) by following https://github.com/uncrustify/uncrustify\u003cbr/\u003e |\n| VHDL Beautifier | :warning: 1 executable | :x: No Docker support | :bookmark_tabs: Manually:\u003cbr/\u003e1. Install [Emacs (`emacs`)](https://www.gnu.org/software/emacs/) by following https://www.gnu.org/software/emacs/\u003cbr/\u003e |\n| Vue Beautifier | :white_check_mark: | :ok_hand: Not necessary | :smiley: Nothing! |\n| yapf | :warning: Manual installation | :construction: Not an executable | :page_facing_up: Go to https://github.com/google/yapf and follow the instructions. |\n\n## Language Support\n\nSee [all supported options in the documentation at  `docs/options.md`](docs/options.md).\n\n| Language | Grammars | File Extensions | Supported Beautifiers |\n| --- | --- | --- | ---- |\n| Apex | `Apex` |`.cls`, `.trigger` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Arduino | `Arduino` |`.ino`, `.pde` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Bash | `Shell Script` |`.bash`, `.sh` | **[`beautysh`](https://github.com/bemeurer/beautysh)** |\n| Blade | `Blade` |`.blade.php` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)** |\n| C | `C`, `opencl` |`.h`, `.c`, `.cl` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| Coldfusion | `html` |`.cfm`, `.cfml`, `.cfc` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Clojure | `Clojure` |`.clj`, `.cljs`, `.edn` | **[`cljfmt`](https://github.com/snoe/node-cljfmt)** |\n| CoffeeScript | `CoffeeScript` |`.coffee` | **[`coffee-fmt`](https://github.com/sterpe/coffee-fmt)**, [`Coffee Formatter`](https://github.com/Glavin001/Coffee-Formatter) |\n| C++ | `C++` |`.h`, `.hh`, `.cc`, `.cpp`, `.cxx`, `.C`, `.cu`, `.c++`, `.hpp`, `.hxx`, `.h++`, `.cuh` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| Crystal | `Crystal` |`.cr` | **[`Crystal`](http://crystal-lang.org)** |\n| C# | `C#` |`.cs` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| CSS | `CSS` |`.css` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff), [`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) |\n| CSV | `CSV` |`.csv` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| D | `D` |`.d` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`dfmt`](https://github.com/Hackerpilot/dfmt) |\n| EJS | `EJS`, `JavaScript Template`, `HTML (Angular)` |`.ejs` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Elm | `Elm` |`.elm` | **[`elm-format`](https://github.com/avh4/elm-format)** |\n| ERB | `HTML (Ruby - ERB)`, `HTML (Rails)` |`.erb` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`HTML Beautifier`](https://github.com/threedaymonk/htmlbeautifier) |\n| Erlang | `Erlang` |`.erl` | **[`erl_tidy`](http://erlang.org/doc/man/erl_tidy.html)** |\n| Fortran | `Fortran - Modern` |`.f90`, `.F90`, `.f95`, `.F95`, `.f03`, `.F03`, `.f08`, `.F08` | **[`Fortran Beautifier`](https://www.gnu.org/software/emacs/)** |\n| gherkin | `Gherkin` |`.feature` | **[`Gherkin formatter`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/gherkin.coffee)** |\n| GLSL | `C`, `opencl`, `GLSL` |`.vert`, `.frag` | **[`clang-format`](https://clang.llvm.org/docs/ClangFormat.html)** |\n| GN | `gn` |`.gn`, `.gni` | **[`GN`](https://chromium.googlesource.com/chromium/src/tools/gn)** |\n| Go | `Go` |`.go` | **[`gofmt`](https://golang.org/cmd/gofmt/)**, [`goimports`](https://godoc.org/golang.org/x/tools/cmd/goimports) |\n| Golang Template | `HTML (Go)`, `Go Template` |`.gohtml` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Handlebars | `Handlebars`, `HTML (Handlebars)` |`.hbs`, `.handlebars` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Haskell | `Haskell` |`.hs` | **[`stylish-haskell`](https://github.com/jaspervdj/stylish-haskell)**, [`brittany`](https://github.com/lspitzner/brittany), [`hindent`](https://github.com/commercialhaskell/hindent) |\n| HTML | `HTML` |`.html` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Jade | `Jade`, `Pug` |`.jade`, `.pug` | **[`Pug Beautify`](https://github.com/vingorius/pug-beautify)** |\n| Java | `Java` |`.java` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| JavaScript | `JavaScript` |`.js` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`ESLint Fixer`](https://github.com/eslint/eslint), [`JSCS Fixer`](https://github.com/jscs-dev/node-jscs/), [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| JSON | `JSON` |`.json` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Prettier`](https://github.com/prettier/prettier), [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| JSX | `JSX`, `JavaScript (JSX)`, `Babel ES6 JavaScript`, `JavaScript with JSX` |`.jsx`, `.js` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`JS Beautify`](https://github.com/beautify-web/js-beautify) |\n| LaTeX | `BibTeX`, `LaTeX`, `TeX` |`.bib`, `.tex`, `.sty`, `.cls`, `.dtx`, `.ins`, `.bbx`, `.cbx` | **[`Latex Beautify`](https://github.com/cmhughes/latexindent.pl)** |\n| LESS | `LESS` |`.less` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier) |\n| Lua | `Lua` |`.lua`, `.ttslua` | **[`Lua beautifier`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/lua-beautifier/beautifier.coffee)** |\n| Markdown | `GitHub Markdown` |`.markdown`, `.md` | **[`Remark`](https://github.com/remarkjs/remark)**, [`Prettier`](https://github.com/prettier/prettier), [`Tidy Markdown`](https://github.com/slang800/tidy-markdown) |\n| Marko | `Marko` |`.marko` | **[`Marko Beautifier`](https://github.com/marko-js/marko-prettyprint)** |\n| Mustache | `HTML (Mustache)` |`.mustache` | **[`JS Beautify`](https://github.com/beautify-web/js-beautify)**, [`Pretty Diff`](https://github.com/prettydiff/prettydiff) |\n| Nginx | `nginx` |`.conf` | **[`Nginx Beautify`](https://github.com/denysvitali/nginxbeautify)** |\n| Nunjucks | `Nunjucks`, `Nunjucks Templates`, `HTML (Nunjucks Templates)` |`.njk`, `.nunjucks` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Objective-C | `Objective-C`, `Objective-C++` |`.m`, `.mm`, `.h` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)**, [`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) |\n| OCaml | `OCaml` |`.ml` | **[`ocp-indent`](https://www.typerex.org/ocp-indent.html)**, [`ocamlformat`](https://github.com/ocaml-ppx/ocamlformat) |\n| Pawn | `Pawn` | | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Perl | `Perl`, `Perl 6` |`.pl`, `.PL`, `.pm`, `.pod`, `.t` | **[`Perltidy`](http://perltidy.sourceforge.net/)** |\n| PHP | `PHP` |`.php`, `.module`, `.inc` | **[`PHP-CS-Fixer`](https://github.com/FriendsOfPHP/PHP-CS-Fixer)**, [`PHPCBF`](http://php.net/manual/en/install.php), [`hh_format`](http://hhvm.com/) |\n| Puppet | `Puppet` |`.pp` | **[`puppet-lint`](http://puppet-lint.com/)** |\n| Python | `Python`, `MagicPython` |`.py` | **[`autopep8`](https://github.com/hhatto/autopep8)**, [`black`](https://github.com/ambv/black), [`pybeautifier`](https://github.com/guyskk/pybeautifier), [`yapf`](https://github.com/google/yapf) |\n| R | `R` |`.r`, `.R` | **[`formatR`](https://github.com/yihui/formatR)** |\n| Riot.js | `Riot.js`, `HTML (Riot Tag)` |`.tag` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Ruby | `Ruby`, `Ruby on Rails` |`.rb` | **[`Rubocop`](https://github.com/bbatsov/rubocop)**, [`Ruby Beautify`](https://github.com/erniebrodeur/ruby-beautify) |\n| Rust | `Rust` |`.rs`, `.rlib` | **[`rustfmt`](https://github.com/rust-lang-nursery/rustfmt)** |\n| Sass | `Sass` |`.sass` | **[`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax)** |\n| SCSS | `SCSS` |`.scss` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`CSScomb`](https://github.com/csscomb/csscomb.js), [`Prettier`](https://github.com/prettier/prettier), [`SassConvert`](http://sass-lang.com/documentation/file.SASS_REFERENCE.html#syntax) |\n| Spacebars | `Spacebars` | | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| SQL | `SQL (Rails)`, `SQL` |`.sql` | **[`sqlformat`](https://github.com/andialbrecht/sqlparse)** |\n| SVG | `SVG` |`.svg` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Swig | `HTML (Swig)`, `SWIG` |`.swig` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Terraform | `Terraform` |`.tf` | **[`terraformfmt`](https://www.terraform.io/docs/commands/fmt.html)** |\n| TSS | `TSS` |`.tss` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| TSX | `TypeScriptReact` |`.tsx` | **[`TypeScript Formatter`](https://github.com/vvakame/typescript-formatter)** |\n| Twig | `HTML (Twig)` |`.twig` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| TypeScript | `TypeScript` |`.ts` | **[`TypeScript Formatter`](https://github.com/vvakame/typescript-formatter)**, [`Prettier`](https://github.com/prettier/prettier) |\n| UX Markup | `UX` |`.ux` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Vala | `Vala` |`.vala`, `.vapi` | **[`Uncrustify`](https://github.com/uncrustify/uncrustify)** |\n| Verilog | `Verilog` |`.svh`, `.v`, `.sv` | **[`Emacs Verilog Mode`](https://www.veripool.org/projects/verilog-mode/)** |\n| VHDL | `VHDL 2008` |`.vhd`, `.VHD` | **[`VHDL Beautifier`](https://www.gnu.org/software/emacs/)** |\n| Visualforce | `Visualforce` |`.page` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| Vue | `Vue Component` |`.vue` | **[`Vue Beautifier`](https://github.com/Glavin001/atom-beautify/blob/master/src/beautifiers/vue-beautifier.coffee)**, [`ESLint Fixer`](https://github.com/eslint/eslint), [`Prettier`](https://github.com/prettier/prettier) |\n| XML | `SLD`, `XML`, `XHTML`, `XSD`, `XSL`, `JSP`, `GSP` |`.sld`, `.xml`, `.xhtml`, `.xsd`, `.xsl`, `.jsp`, `.gsp`, `.plist`, `.recipe`, `.config` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)**, [`JS Beautify`](https://github.com/beautify-web/js-beautify) |\n| XTemplate | `XTemplate` |`.xtemplate` | **[`Pretty Diff`](https://github.com/prettydiff/prettydiff)** |\n| YAML | `YAML` |`.yml`, `.yaml` | **[`align-yaml`](https://github.com/jonschlinkert/align-yaml)** |\n\n## Usage\n\n### Command Palette\n\nOpen the [Command Palette](https://github.com/atom/command-palette), type `Beautify`, and run `Beautify Editor`.\n\n![image](https://cloud.githubusercontent.com/assets/1885333/16542583/1c8d975c-4085-11e6-8307-e35df7430a10.png)\n\n#### Beautify a Specific Language\n\nYou can use the [Command Palette](https://github.com/atom/command-palette) to beautify the editor for a specific language.\nThe commands are in the form `Atom Beautify: Beautify Language {NAME}` (i.e. `atom-beautify:beautify-language-{NAME}` for keyboard shortcuts).\nFor example, you may want to beautify `JavaScript` code within a `HTML` file.\n\n![atom-beautify-language-commands](https://cloud.githubusercontent.com/assets/1885333/25775586/f3fc7ec4-327e-11e7-8576-45e735e80032.gif)\n\n### Selection of Code\n\nIt will only beautify selected text if a selection is found -- if not, the whole file will be beautified.\n\n| Selection of Code | Beautify Selection of Code | Beautify Entire File |\n| --- | --- | --- |\n| Select code in Atom editor | Only that selection is beautified | Without a selection all code is beautified |\n| ![image](https://cloud.githubusercontent.com/assets/1885333/16542597/b3f90c84-4085-11e6-8a0e-1b8604ae385c.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542598/b5a86b10-4085-11e6-80cf-0afaf1a819c3.png) | ![image](https://cloud.githubusercontent.com/assets/1885333/16542603/b798ec24-4085-11e6-880e-8d3a2741940f.png) |\n\n### Beautify On Save\n\n`Beautify On Save` can be enabled for each language individually.\n\nFor example, for language `HTML` go into Atom-Beautify's package settings (`Atom` ➔ `Preferences` ➔ Search for `atom-beautify`), find `HTML`, and toggle the `Beautify On Save` option.\n\n![atom-beautify-setup-beautify-on-save](https://cloud.githubusercontent.com/assets/1885333/16542692/3e781e74-4089-11e6-9cf2-5a19af161093.gif)\n\n### Keyboard Shortcut\n\nYou can also type \u003ckbd\u003eCtrl\u003c/kbd\u003e-\u003ckbd\u003eAlt\u003c/kbd\u003e-\u003ckbd\u003eB\u003c/kbd\u003e as a shortcut or click `Packages \u003e Beautify` in the menu.\n\n#### Custom Keyboard Shortcuts\n\nSee [Keymaps In-Depth](https://atom.io/docs/latest/behind-atom-keymaps-in-depth) for more details.\n\nFor example:\n\n```coffeescript\n'.editor':\n  'ctrl-alt-b': 'atom-beautify:beautify-editor'\n```\n\n## Configuration\n\nEdit your `.jsbeautifyrc` file in any of the following locations:\n\n- Atom Package Settings\n  `Atom` ➔ `Preferences` ➔ Search for `atom-beautify`\n- Same directory as current file\n- Project root\n`atom-beautify` will recursively look up from the current file's directory to find `.jsbeautifyrc`.\n- Your user's home directory\n\n**Note**: *Comments are supported in `.jsbeautifyrc` thanks to [strip-json-comments](https://github.com/sindresorhus/strip-json-comments).*\n\nSee examples of both ways inside [`examples/`](examples)\n\nSee [all supported options in the documentation at  `docs/options.md`](docs/options.md).\n\n### Simple\n\nSee [examples/simple-jsbeautifyrc/.jsbeautifyrc](examples/simple-jsbeautifyrc/.jsbeautifyrc).\n\n```json\n{\n  \"indent_size\": 2,\n  \"indent_char\": \" \",\n  \"other\": \" \",\n  \"indent_level\": 0,\n  \"indent_with_tabs\": false,\n  \"preserve_newlines\": true,\n  \"max_preserve_newlines\": 2,\n  \"jslint_happy\": true,\n  \"indent_handlebars\": true\n}\n```\n\n### Nested (Recommended)\n\nSee [examples/nested-jsbeautifyrc/.jsbeautifyrc](examples/nested-jsbeautifyrc/.jsbeautifyrc).\n\n```json\n{\n  \"html\": {\n    \"brace_style\": \"collapse\",\n    \"indent_char\": \" \",\n    \"indent_scripts\": \"normal\",\n    \"indent_size\": 6,\n    \"max_preserve_newlines\": 1,\n    \"preserve_newlines\": true,\n    \"unformatted\": [\"a\", \"sub\", \"sup\", \"b\", \"i\", \"u\"],\n    \"wrap_line_length\": 0\n  },\n  \"css\": {\n    \"indent_char\": \" \",\n    \"indent_size\": 4\n  },\n  \"js\": {\n    \"indent_size\": 2,\n    \"indent_char\": \" \",\n    \"indent_level\": 0,\n    \"indent_with_tabs\": false,\n    \"preserve_newlines\": true,\n    \"max_preserve_newlines\": 2,\n    \"jslint_happy\": true\n  },\n  \"sql\": {\n    \"indent_size\": 4,\n    \"indent_char\": \" \",\n    \"indent_level\": 0,\n    \"indent_with_tabs\": false\n  }\n}\n```\n\n## Troubleshooting\n\nSee [`docs/troubleshooting.md`](docs/troubleshooting.md).\n\n## Contributing\n\nSee [`CONTRIBUTING.md`](CONTRIBUTING.md).\n\n[See all contributors on GitHub](../../graphs/contributors).\n\nPlease update the [CHANGELOG.md](CHANGELOG.md),\nadd yourself as a contributor to the [package.json](package.json),\nand submit a [Pull Request on GitHub](https://help.github.com/articles/using-pull-requests/).\n\n## License\n\n[MIT](LICENSE.md) © [Glavin Wiechert](https://github.com/Glavin001)\n","metadata":{"name":"atom-beautify","main":"./src/beautify","version":"0.33.4","private":true,"description":"Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom","repository":"https://github.com/Glavin001/atom-beautify.git","bugs":{"url":"https://github.com/Glavin001/atom-beautify/issues"},"license":"MIT","author":{"name":"Glavin Wiechert","email":"glavin.wiechert@gmail.com","url":"https://github.com/Glavin001"},"contributors":[{"name":"Donald Pipowitch","email":"pipo@senaeh.de","url":"https://github.com/donaldpipowitch"},{"name":"László Károlyi","url":"https://github.com/karolyi"},{"name":"Marco Tanzi","url":"https://github.com/mtanzi"},{"name":"gvn lazar suntop","url":"https://github.com/gvn"},{"name":"Vadim K.","url":"https://github.com/vadirn"},{"name":"Filipe Silva","url":"https://github.com/filipesilva"},{"name":"Ramón Cahenzli","url":"https://github.com/psy-q"},{"name":"Clemens Damke","url":"https://github.com/Cortys"},{"name":"Zhang YANG","url":"https://github.com/ProgramFan"},{"name":"Daniel Bayley","url":"https://github.com/danielbayley"},{"name":"Murphy Randle","url":"https://github.com/splodingsocks"},{"name":"Luis Arias","url":"https://github.com/kaaloo"},{"name":"Bati Sengul","url":"https://github.com/Focus"},{"name":"Dheepak Krishnamurthy","url":"https://github.com/kdheepak89"},{"name":"Ayoub Adib","url":"https://github.com/ayoubdev"},{"name":"Frederic Delbos","url":"https://github.com/fdelbos"},{"name":"Patrick Steele-Idem","url":"https://github.com/psteeleidem"},{"name":"Joost van Doorn","url":"https://github.com/JoostvDoorn"},{"name":"Arman Yessenamanov","url":"https://github.com/yesenarman"},{"name":"Sebastian DiLorenzo","url":"https://github.com/Sebastian-D"},{"name":"Émile Bergeron","url":"https://github.com/emileber"},{"name":"Louis G Vichy","url":"https://github.com/louisgv"},{"name":"Elias Baryshnikov","url":"https://github.com/qwemaze"},{"name":"Victor Uriarte","url":"https://github.com/vmuriart"},{"name":"guyskk","url":"https://github.com/guyskk"},{"name":"Denys Vitali","url":"https://github.com/denysvitali"},{"name":"Daniel Brodin","url":"https://github.com/danielbrodin"},{"name":"Anton Brok-Volchansky","url":"https://github.com/re6exp"},{"name":"Taylon Silmer","url":"https://github.com/taylon"},{"name":"James Power","url":"https://github.com/thejamespower"},{"name":"Eli Donahue","url":"https://github.com/elijdonahue"},{"name":"Kamontat Chantrachirathumrong","url":"https://github.com/kamontat"},{"name":"Steven Zeck","url":"https://github.com/szeck87"},{"name":"Christian Kjær Laustsen","email":"ckl@codetalk.io","url":"https://github.com/Tehnix"},{"name":"Faheel Ahmad","url":"https://github.com/faheel"},{"name":"Andrew Andrianov","url":"https://github.com/nekromant"},{"name":"Jack Treble","url":"https://github.com/JackTreble"},{"name":"Kohei Hiraga","url":"https://github.com/range3"},{"name":"Arlo Shallit","url":"https://github.com/arl-o"},{"name":"Liam Newman","url":"https://github.com/bitwiseman"}],"engines":{"atom":"\u003e=1.21.0 \u003c2.0.0"},"dependencies":{"align-yaml":"^0.1.8","async":"^2.6.0","atom-message-panel":"^1.3.0","atom-space-pen-views":"^2.2.0","bluebird":"^3.5.1","coffee-fmt":"^0.12.0","coffee-formatter":"^0.1.2","coffeescript":"^1.12.6","csscomb":"^4.2.0","diff":"^3.4.0","editorconfig":"^0.15.0","eslint":"^4.16.0","event-kit":"^2.4.0","expand-home-dir":"0.0.3","extend":"^3.0.1","gherkin":"^2.12.2","handlebars":"^4.0.11","js-beautify":"^1.8.1","jscs":"^3.0.7","lodash":"^4.17.4","loophole":"^1.1.0","nginxbeautify":"^2.0.1","node-cljfmt":"0.5.3","node-dir":"0.1.17","open":"0.0.5","prettier":"^1.11.1","prettydiff2":"^2.2.7","pug-beautify":"^0.1.1","remark":"6.0.1","season":"^6.0.2","semver":"^5.5.0","shell-env":"^0.3.0","space-pen":"5.1.2","strip-json-comments":"^2.0.1","temp":"^0.8.3","tidy-markdown":"2.0.4","typescript":"^2.6.2","typescript-formatter":"^7.0.0","underscore-plus":"^1.6.6","universal-analytics":"^0.4.16","uuid":"^3.1.0","which":"^1.3.0","winston":"^2.4.0","yaml-front-matter":"3.4.1"},"activationHooks":["core:loaded-shell-environment"],"activationCommands":{"atom-workspace":["atom-beautify:help-debug-editor","atom-beautify:beautify-editor","atom-beautify:open-settings","atom-beautify:migrate-settings","core:save","core:save-as","atom-beautify:beautify-language-apex","atom-beautify:beautify-language-arduino","atom-beautify:beautify-language-bash","atom-beautify:beautify-language-c#","atom-beautify:beautify-language-c","atom-beautify:beautify-language-clojure","atom-beautify:beautify-language-coffeescript","atom-beautify:beautify-language-coldfusion","atom-beautify:beautify-language-c++","atom-beautify:beautify-language-crystal","atom-beautify:beautify-language-css","atom-beautify:beautify-language-csv","atom-beautify:beautify-language-d","atom-beautify:beautify-language-ejs","atom-beautify:beautify-language-elm","atom-beautify:beautify-language-erb","atom-beautify:beautify-language-erlang","atom-beautify:beautify-language-gherkin","atom-beautify:beautify-language-glsl","atom-beautify:beautify-language-go","atom-beautify:beautify-language-golang template","atom-beautify:beautify-language-fortran","atom-beautify:beautify-language-handlebars","atom-beautify:beautify-language-haskell","atom-beautify:beautify-language-html","atom-beautify:beautify-language-jade","atom-beautify:beautify-language-java","atom-beautify:beautify-language-javascript","atom-beautify:beautify-language-json","atom-beautify:beautify-language-jsx","atom-beautify:beautify-language-latex","atom-beautify:beautify-language-less","atom-beautify:beautify-language-lua","atom-beautify:beautify-language-markdown","atom-beautify:beautify-language-marko","atom-beautify:beautify-language-mustache","atom-beautify:beautify-language-nginx","atom-beautify:beautify-language-nunjucks","atom-beautify:beautify-language-objective-c","atom-beautify:beautify-language-ocaml","atom-beautify:beautify-language-pawn","atom-beautify:beautify-language-perl","atom-beautify:beautify-language-php","atom-beautify:beautify-language-puppet","atom-beautify:beautify-language-python","atom-beautify:beautify-language-r","atom-beautify:beautify-language-riot.js","atom-beautify:beautify-language-ruby","atom-beautify:beautify-language-rust","atom-beautify:beautify-language-sass","atom-beautify:beautify-language-scss","atom-beautify:beautify-language-spacebars","atom-beautify:beautify-language-sql","atom-beautify:beautify-language-svg","atom-beautify:beautify-language-swig","atom-beautify:beautify-language-tss","atom-beautify:beautify-language-twig","atom-beautify:beautify-language-typescript","atom-beautify:beautify-language-ux markup","atom-beautify:beautify-language-vala","atom-beautify:beautify-language-vue","atom-beautify:beautify-language-visualforce","atom-beautify:beautify-language-xml","atom-beautify:beautify-language-xtemplate","atom-beautify:beautify-language-yaml","atom-beautify:beautify-language-terraform","atom-beautify:beautify-language-tsx","atom-beautify:beautify-language-verilog","atom-beautify:beautify-language-vhdl","atom-beautify:beautify-language-gn","atom-beautify:beautify-language-blade"],".tree-view .file .name":["atom-beautify:beautify-file"],".tree-view .directory .name":["atom-beautify:beautify-directory"]},"keywords":["atom","beautify","beautifier","js-beautify","format","pretty","html","handlebars","mustache","xml","css","javascript","json","sass","scss","less","sql","markdown","php","python","ruby","coffeescript","typescript","c","c++","cpp","objective-c","c-sharp","c#","coldfusion","uncrustify","java","apex","pawn","vala","d","erb","editorconfig","yaml","front matter","jekyll","marko","go","golang","svg","elm","lua","arduino","crystal","csv","ejs","erlang","gherkin","fortran","haskell","hindent","brittany","jade","jsx","latex","ocaml","perl","puppet","riot.js","rust","spacebars","swig","tss","twig","visualforce","xtemplate","autopep8","coffee formatter","coffee-fmt","clang-format","dfmt","elm-format","html beautifier","csscomb","gherkin formatter","gofmt","latex beautify","fortran beautifier","js beautify","jscs fixer","eslint","eslint fixer","lua beautifier","ocp-indent","perltidy","php-cs-fixer","phpcbf","pretty diff","pug beautify","puppet-lint","r","remark","rubocop","ruby beautify","rustfmt","sqlformat","stylish-haskell","tidy markdown","typescript formatter","yapf","erl_tidy","marko beautifier","vue","vue beautifier","sassconvert","formatr","clojure","clojure beautifier","nunjucks","ux markup","pybeautifier","cljfmt","bash","beautysh","glsl","hh_format","nginx","nginx beautify","golang template","align-yaml","goimports","terraform","terraformfmt","tsx","prettier","verilog","emacs verilog mode","vhdl","vhdl beautifier","gn","blade","black","ocamlformat"],"devDependencies":{"codo":"^2.1.2","coffeelint":"2.1.0"},"scripts":{"build-options":"node script/build-options.js","docs":"npm run build-options \u0026\u0026 coffee docs/","prepare":"npm run docs","lint":"coffeelint src/ spec/","code-docs":"codo \u0026\u0026 open docs/code/index.html","pretest":"npm run lint","test":"atom --test spec"},"config":{"next-update":{"skip":["gherkin","expand-home-dir","typescript","typescript-formatter","tidy-markdown","underscore-plus","prettydiff2"]}},"greenkeeper":{"ignore":["gherkin","expand-home-dir","typescript","typescript-formatter","tidy-markdown","underscore-plus","prettydiff2"]}}},{"name":"platformio-ide-terminal","repository":{"type":"git","url":"https://github.com/platformio/platformio-atom-ide-terminal"},"downloads":6170261,"stargazers_count":922,"releases":{"latest":"2.9.4"},"readme":"# PlatformIO IDE Terminal\nA terminal package for Atom, complete with themes, API and more for [PlatformIO IDE](http://platformio.org/platformio-ide).\n\n![demo](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/demo.gif)\n\n*[Nucleus Dark UI](https://atom.io/themes/nucleus-dark-ui) with [Atom Material Syntax](https://atom.io/themes/atom-material-syntax) and our Homebrew theme.*\n\n## Install\nReady to install?\n\nYou can install via apm: `apm install platformio-ide-terminal`\n\nOr navigate to the install tab in Atom’s settings view, and search for `platformio-ide-terminal`.\n\n## Caveats\nflatpak\n\nSome Atom installations via flatpak may have incompatibilites, including an inability to find host system binaries from select directories, such as /usr/*. If you encounter issues using platformio-ide-terminal with flatpak, such as missing binaries, that are normally accessible from the path you have set in your shell of choice, or if you are not able to change directory into some directories, you may be affected. You can confirm this by looking for the nfsnobody permissions from the root of your disk. You can workaround this by installing another version of atom that is not inside a sandbox container. See [here for full details.](https://github.com/platformio/platformio-atom-ide-terminal/issues/664)\n\n## Usage\n\n`platformio-ide-terminal` stays in the bottom of your editor while you work.\n\nClick on a status icon to toggle that terminal (or ``ctrl-` ``). Right click the status icon for a list of available commands. From the right-click menu you can color code the status icon as well as hide or close the terminal instance.\n\n### Terminal\nYou can open the last active terminal with the `platformio-ide-terminal:toggle` command (Default:`` ctrl-` ``).  If no terminal instances are available, then a new one will be created. The same toggle command is used to hide the currently active terminal.\n\nFrom there you can begin typing into the terminal. By default the terminal will change directory into the project folder if possible. The default working directory can be changed in the settings to the home directory or to the active file directory.\n\n[See available commands below](#commands).\n\n## Features\n\n### Full Terminal\nEvery terminal is loaded with your system’s default initialization files. This ensures that you have access to the same commands and aliases as you would in your standard terminal.\n\n### Themes\nThe terminal is preloaded with several themes that you can choose from. Not satisfied?  \nUse the following template in your stylesheet:\n```css\n.platformio-ide-terminal .xterm {\n  background-color: ;\n  color: ;\n\n  ::selection {\n    background-color: ;\n  }\n\n  .terminal-cursor {\n    background-color: ;\n  }\n}\n```\n\n### Process Titles\nBy hovering over the terminal status icon, you can see which command process is currently running in the terminal.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/terminal_title.png)\n\n### Terminal Naming\nNeed a faster way to figure out which terminal is which? Name your status icons!\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/status-icon_rename.png)\n\nAvailable via the status icon context menu.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/status-icon_rename-dialog.png)\n\n### Color Coding\nColor code your status icons!\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/status-icon_color_coding.png)\n\nThe colors are customizable in the settings, however the color names remain the same in the context menu.\n\n### Sorting\nOrganize your open terminal instances by dragging and dropping them.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/sorting.gif)\n\n### Resizable\nYou can resize the view vertically, or just maximize it with the maximize button.\n\n### Working Directory\nYou can set the default working directory for new terminals. By default this will be the project folder.\n\n### File Dropping\nDropping a file on the terminal will insert the file path into the input. This works with external files, tabs from the Atom tab-view, and entries from the Atom tree-view.\n\n### Insert Selected Text\nInsert and run selected text from your text editor by running the `platformio-ide-terminal:insert-selected-text` command (`ctrl-enter`).\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/insert_selected_text.gif)\n\nIf you have text selected, it will insert your selected text into the active terminal and run it.  \nIf you don't have text selected it, will run the text on the line where your cursor is then proceed to the next line.\n\n### Quick Command Insert\nQuickly insert a command to your active terminal by executing the `platformio-ide-terminal:insert-text` command.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/insert_text.png)\n\nA dialog will pop up asking for the input to insert. If you have the `Run Inserted Text` option enabled in the settings (default is false), platformio-ide-terminal will automatically run the command for you.\n\n#### Support for Special Keys\nSupport for IME, dead keys and other key combinations via the `Insert Text` dialog box. Just click the keyboard button in the top left of the terminal or set up a keymap to the `platformio-ide-terminal:insert-text` command.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/special_keys.gif)\n\nNote: Make sure you have the `Run Inserted Command` toggle off otherwise it will run your inserted text.\n\n### Map Terminal To\nMap your terminals to each file or folder you are working on for automatic terminal switching.\n\n#### File\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/map_terminals_to_file.gif)\n\n#### Folder\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/map_terminals_to_folder.gif)\n\nToggling the `Auto Open a New Terminal (For Terminal Mapping)` option will have the mapping create a new terminal automatically for files and folders that don't have a terminal. The toggle is located right under the `Map Terminals To` option.\n\n![](https://github.com/platformio/platformio-atom-ide-terminal/raw/master/resources/map_terminals_to_auto_open.gif)\n\n## Commands\n| Command | Action | Default Keybind |\n|---------|--------|:-----------------:|\n| platformio-ide-terminal:new | Create a new terminal instance. | `ctrl-shift-t`\u003cbr\u003eor\u003cbr\u003e`cmd-shift-t` |\n| platformio-ide-terminal:toggle | Toggle the last active terminal instance.\u003cbr\u003e**Note:** This will create a new terminal if it needs to. | `` ctrl-` ``\u003cbr\u003e(Control + Backtick) |\n| platformio-ide-terminal:prev | Switch to the terminal left of the last active terminal. | `ctrl-shift-j`\u003cbr\u003eor\u003cbr\u003e`cmd-shift-j` |\n| platformio-ide-terminal:next | Switch to the terminal right of the last active terminal. | `ctrl-shift-k`\u003cbr\u003eor\u003cbr\u003e`cmd-shift-k` |\n| platformio-ide-terminal:insert-selected-text | Run the selected text as a command in the active terminal. | `ctrl-enter` |\n| platformio-ide-terminal:insert-text | Bring up an input box for using IME and special keys. | –––––––––––– |\n| platformio-ide-terminal:fullscreen | Toggle fullscreen for active terminal. | –––––––––––– |\n| platformio-ide-terminal:close | Close the active terminal. | `ctrl-shift-x`\u003cbr\u003eor\u003cbr\u003e`cmd-shift-x` |\n| platformio-ide-terminal:close-all | Close all terminals. | –––––––––––– |\n| platformio-ide-terminal:rename | Rename the active terminal. | –––––––––––– |\n\n---\nA fork of [jeremyramin/terminal-plus](https://github.com/jeremyramin/terminal-plus).\n","metadata":{"name":"platformio-ide-terminal","main":"./lib/platformio-ide-terminal","version":"2.9.4","description":"A terminal package for Atom, complete with themes, API and more for PlatformIO IDE. Fork of terminal-plus.","author":"Jeremy Ebneyamin","keywords":["PlatformIO","terminal-plus","terminal","iterm","panel","pty","tty","xterm","iterm","iterm2","console","powershell"],"contributors":[{"name":"Ivan Kravets","email":"me@ikravets.com","url":"http://platformio.org"},{"name":"Dmytro Kyrychuk","email":"dmytro.kyrychuck@gmail.com","url":"http://platformio.org"},{"name":"The Community Contributors","url":"https://github.com/platformio/platformio-atom-ide-terminal/graphs/contributors"}],"homepage":"https://atom.io/packages/platformio-ide-terminal","repository":"https://github.com/platformio/platformio-atom-ide-terminal","license":"MIT","engines":{"atom":"\u003e=1.12.2 \u003c2.0.0"},"dependencies":{"atom-space-pen-views":"^2.2.0","node-pty-prebuilt-multiarch":"0.9.0-beta21.legacy","term.js":"https://github.com/jeremyramin/term.js/tarball/master","underscore":"^1.8.3"},"activationHooks":["core:loaded-shell-environment"],"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"providedServices":{"platformioIDETerminal":{"description":"PlatformIO IDE Terminal API","versions":{"1.1.0":"providePlatformIOIDETerminal"}},"runInTerminal":{"description":"Deprecated API for PlatformIO IDE 1.0","versions":{"0.14.5":"provideRunInTerminal"}}}}},{"name":"minimap","repository":{"type":"git","url":"https://github.com/atom-minimap/minimap"},"downloads":5762719,"stargazers_count":5645,"releases":{"latest":"4.29.9"},"readme":"[![Build Status](https://travis-ci.org/atom-minimap/minimap.svg?branch=master)](https://travis-ci.org/atom-minimap/minimap)\n[![APM Version](https://img.shields.io/apm/v/minimap.svg)](https://atom.io/packages/minimap)\n[![APM Downloads](https://img.shields.io/apm/dm/minimap.svg)](https://atom.io/packages/minimap)\n\n# Minimap package\n\nA preview of the full source code.\n\nThis package is sponsored and maintained by [Kite](https://kite.com/docs?source=minimap).\n\n![Minimap Screenshot](https://github.com/atom-minimap/minimap/blob/master/resources/screenshot.png?raw=true)\n\u003csmall\u003eIn the screenshot above the minimap-git-diff and minimap-highlight-selected plugins are activated.\u003c/small\u003e\n\n### Installation\n\n```\napm install minimap\n```\n\n### Features\n\n* Service-based Plugin API: Use the plugin generation command and start developing your plugin right away.\n* Decoration API: Use the same API to manage `TextEditor` and `Minimap` decorations.\n* Canvas-based Rendering: Simple, fast and flexible.\n* Stand-alone Mode: Wants to display a preview of a text editor in your UIs, use a stand-alone version of the Minimap.\n\n### Available Plugins\n\nBelow is the list of available plugins so far:\n\nPackage|Description\n---|---\n[Auto-Hider](https://atom.io/packages/minimap-autohider)|Hides the Minimap while editing.\n[Bookmarks](https://atom.io/packages/minimap-bookmarks)|Displays Atom bookmarks.\n[Code Glance](https://atom.io/packages/minimap-codeglance)|Shows the code that's under the mouse cursor when hovering the Minimap.\n[Cursor Line](https://atom.io/packages/minimap-cursorline)|Highlights the line with cursor.\n[Find And Replace](https://atom.io/packages/minimap-find-and-replace)|Displays the search matches.\n[Git Diff](https://atom.io/packages/minimap-git-diff)|Displays the file diff.\n[Google-Repo-Diff-Minimap](https://atom.io/packages/google-repo-diff-minimap)|A Minimap binding for the [google-repo-diff](https://atom.io/packages/google-repo-diff) package and [google-repo](https://atom.io/packages/google-repo) package.\n[GPool-Diff-Minimap](https://atom.io/packages/gpool-diff-minimap)|A minimap binding for the [gpool-diff](https://atom.io/packages/gpool-diff) package.\n[Hide on inactive panes](https://atom.io/packages/minimap-hide)|Hide the Minimap when pane isn't focus.\n[Highlight Selected](https://atom.io/packages/minimap-highlight-selected)|A Minimap binding for the [highlight-selected](http://atom.io/packages/highlight-selected) package.\n[Linter](https://atom.io/packages/minimap-linter)|Displays [linter](https://atom.io/packages/linter) markers.\n[Pigments](https://atom.io/packages/minimap-pigments)|Displays the [Pigments](https://atom.io/packages/pigments) colors.\n[Quick-Highlight](https://atom.io/packages/minimap-quick-highlight)|Shows multiple selections done with the [quick-highlight](https://atom.io/packages/quick-highlight) package.\n[Selection](https://atom.io/packages/minimap-selection)|Display the buffer's selections.\n[Split-Diff](https://atom.io/packages/minimap-split-diff)|A Minimap binding for the [split-diff](https://atom.io/packages/split-diff) package.\n\n### Settings\n\n#### Auto Toggle\n\nIf checked the Minimap is toggled on at startup. `(default=true)`\n\n#### Device Pixel Ratio Rounding\n\nIf checked the `devicePixelRatio` will be rounded using `Math.floor`. `(default=true)`\n\n#### Display Code Highlights\n\nIf checked the code will be highlighted using the grammar tokens. `(default=true)`\n\n`true`|`false`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/with-code-highlights.png?raw=true)| ![](https://github.com/atom-minimap/minimap/blob/master/resources/without-code-highlights.png?raw=true)\n\n#### Display Minimap On Left\n\nIf checked the Minimap appears on the left side of editors, otherwise it appears on the right side. `(default=false)`\n\n`true`|`false`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/minimap-on-left.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/minimap-on-right.png?raw=true)\n\n#### Char Height\n\nThe height of a character in the Minimap in pixels. `(default=2)`\n\n`1px`|`2px`|`4px`\n---|---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/1px-char-height.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/2px-char-height.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/4px-char-height.png?raw=true)\n\n#### Char Width\n\nThe width of a character in the Minimap in pixels. `(default=1)`\n\n`1px`|`2px`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/1px-char-width.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/2px-char-width.png?raw=true)\n\n#### Interline\n\nThe space between lines in the Minimap in pixels. `(default=1)`\n\n`1px`|`2px`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/1px-interline.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/2px-interline.png?raw=true)\n\n#### Text Opacity\n\nThe opacity used to render the line text in the Minimap. `(default=0.6)`\n\n`0.6`|`1`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/text-opacity-default.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/text-opacity-1.png?raw=true)\n\n#### Ignore Whitespaces In Tokens\n\nWhen enabled, text editor tokens are rendered as plain blocks, with no regards to the whitespaces they contains. `(default=false)`\n\n`false`|`true`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/with-whitespaces.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/without-whitespaces.png?raw=true)\n\n### Display Plugins Controls\n\nIf checked, the Minimap plugins can be activated/deactivated from the Minimap settings view and a quick settings dropdown will be available on the top right corner of the Minimap. `(default=true)`\n\n**You need to restart Atom for this setting to be effective.**\n\n![](https://github.com/atom-minimap/minimap/blob/master/resources/plugins-control.png?raw=true)\n\n#### Minimap Scroll Indicator\n\nToggles the display of a side line showing which part of the buffer is currently displayed by the Minimap. The side line appear only if the Minimap height is bigger than the editor view height. `(default=true)`\n\n![](https://github.com/atom-minimap/minimap/blob/master/resources/scroll-indicator.png?raw=true)\n\n#### Plugins *\n\nWhen plugins are installed, a setting is created for each to enable/disable them directly from the Minimap settings view.\n\n#### Plugins * Decorations Z-Index\n\nWhen several plugins create decorations for the same layer, the general rule is to render the decorations as follows:\n\n- On the background layer, the `line` decorations are rendered before the `highlight-under` decorations.\n- On the foreground layer, the `highlight-over` decorations are rendered before the `highlight-outine` decorations.\n- When two plugins adds the same type of decorations at the same place, the decorations are rendered in the order they have been created.\n\nBut fortunately, it's possible to reorder decorations on their specific layer using these settings. These settings works as a `z-index` in CSS, the higher the value, the higher the decorations will be in the render stack, for instance, a plugin's decorations with an order value of `1` will appear above decorations from a plugin with an order value of `0`.\n\n#### Smooth Scrolling\n\nWhether to offset the minimap canvas when scrolling to keep the scroll smooth. When `true` the minimap canvas will be offseted, resulting in a smoother scroll, but with the side-effect of a blurry minimap when the canvas is placed between pixels. When `false` the canvas will always stay at the same position, and will never look blurry, but the scroll will appear more jagged. `(default=true)`\n\n`true`|`false`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/smooth-scroll.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/no-smooth-scroll.png?raw=true)\n\n#### Scroll Animation\n\nEnable animations when scrolling the editor by clicking on the Minimap. `(default=false)`\n\n#### Scroll Animation Duration\n\nDuration of the scroll animation when clicking on the Minimap. `(default=300)`\n\n#### Independent Minimap Scroll On Mouse Wheel Events\n\nWhen enabled, using the mouse wheel over the Minimap will make it scroll independently of the text editor. The Minimap will still sync with the editor whenever the editor is scrolled, but it will no longer relay the mouse wheel events to the editor. `(default=false)`\n\n![](https://github.com/atom-minimap/minimap/blob/master/resources/independent-scroll.gif?raw=true)\n\n#### Scroll Sensitivity\n\nThe scrolling speed when the `Independent Minimap Scroll On Mouse Wheel Events` setting is enabled. `(default=0.5)`\n\n#### Use Hardware Acceleration\n\nIf checked the Minimap scroll is done using a `translate3d` transform, otherwise the `translate` transform is used. `(default=true)`\n\n#### Adjust Minimap Width To Soft Wrap\n\nIf this option is enabled and Soft Wrap is checked then the Minimap max width is set to the Preferred Line Length value. `(default=true)`\n\n#### Adjust Minimap Width Only When Smaller\n\nIf this option and `adjustMinimapWidthToSoftWrap` are enabled the minimap width will never go past the limit sets by CSS. On the other hand, when disabled the minimap will expand to honor the preferred line width. `(default=true)`\n\n#### Absolute Mode\n\nWhen enabled the Minimap uses an absolute positioning, letting the editor's content flow below the Minimap. `(default=false)`\n\nNote that this setting will do nothing if `Display Minimap On Left` is also enabled.\n\n`false`|`true`\n---|---\n![](https://github.com/atom-minimap/minimap/blob/master/resources/normal-mode.png?raw=true)|![](https://github.com/atom-minimap/minimap/blob/master/resources/absolute-mode.png?raw=true)\n\n#### Adjust Absolute Mode Height\n\nWhen enabled and `Absolute Mode` is also enabled, the minimap height will be adjusted to only take the space required by the text editor content, leaving the space below triggering mouse events on the text editor. `(default=false)`\n\n**Be aware this can have some impact on performances as the minimap canvases will be resized every time a change in the editor make its height change.**\n\n### Key Bindings\n\nThe Minimap package doesn't provide any default keybindings. But you can define your own as demonstrated below:\n\n```coffee\n'atom-workspace':\n  'cmd-m': 'minimap:toggle'\n  'ctrl-alt-cmd-j': 'minimap:generate-javascript-plugin'\n  'ctrl-alt-cmd-b': 'minimap:generate-babel-plugin'\n  'ctrl-alt-cmd-c': 'minimap:generate-coffee-plugin'\n```\n\n### Tweaking The Minimap\n\n#### Hiding scrollbars\n\nIf you want to hide the default editor scrollbar, edit your `style.less` (Open Your Stylesheet) and use the following snippet:\n\n```css\natom-text-editor[with-minimap] .vertical-scrollbar {\n  display: none;\n}\n```\n\n#### Changing the Minimap's background\n\n![minimap-custom-background](https://github.com/atom-minimap/minimap/blob/master/resources/minimap-custom-background.png?raw=true)\n\n```css\natom-text-editor atom-text-editor-minimap {\n  background: green;\n}\n```\n\n#### Changing the color of the Minimap's `visible-area`\n\n![minimap-custom-background](https://github.com/atom-minimap/minimap/blob/master/resources/minimap-custom-visible-area.png?raw=true)\n\n```css\natom-text-editor atom-text-editor-minimap .minimap-visible-area::after {\n  background-color: rgba(0, 255, 0, 0.5);\n}\n```\n\n#### Changing the color of the Minimap's `scroll-indicator`\n\n![minimap-custom-background](https://github.com/atom-minimap/minimap/blob/master/resources/minimap-custom-scroll-indicator.png?raw=true)\n\n```css\natom-text-editor atom-text-editor-minimap .minimap-scroll-indicator {\n  background-color: green;\n}\n```\n\n#### Adding an opaque background to the minimap in absolute mode with adjusted height\n\nWith both `absoluteMode` and `adjustAbsoluteModeHeight` settings are enabled, the canvases in the minimap won't necessarily takes the whole editor's height.\n\n```css\natom-text-editor, html {\n  atom-text-editor-minimap canvas:first-child {\n    background: @syntax-background-color;\n  }\n}\n```\n\n#### Disabling mouse interactions when in absolute mode\n\nIf you want to prevent to catch the mouse pointer when the `absoluteMode` setting is enabled you can use the following snippet to do so:\n\n```css\natom-text-editor atom-text-editor-minimap {\n  pointer-events: none;\n}\n\natom-text-editor atom-text-editor-minimap .minimap-visible-area {\n  pointer-events: auto;\n}\n```\n\nThe visible area will still allow interaction but the Minimap track won't.\n\n#### Making Minimap visible only in the focused pane\n\nYou can put the following code in your user stylesheet to achieve this effect:\n\n```css\natom-text-editor {\n  atom-text-editor-minimap {\n    display: none;\n  }\n\n  \u0026.is-focused {\n    atom-text-editor-minimap {\n      display: block;\n    }\n  }\n}\n```\n\n#### Make Minimap Visible area display like Sublime Text\n\nPut the following code in your user stylesheet to make your minimap look like Sublime text.\nIt's more easy to view when you have code hightlight in minimap.\n\n`Default State (Hidden)`|`Hover`|`Only display Visible area when hover or click/drag event.`\n---|---|:---:\n![](https://github.com/machinavn/minimap/blob/master/resources/on-default-minimap.png?raw=true)|![](https://github.com/machinavn/minimap/blob/master/resources/on-hover-minimap.png?raw=true)|![](https://github.com/machinavn/minimap/blob/master/resources/on-scroll-minimap.png?raw=true)\n\n```css\natom-text-editor,\nhtml {\n    atom-text-editor-minimap {\n        .minimap-visible-area {\n            background-color: #7c7c7c;\n            // Color of Visible area.\n            opacity: 0;\n            // Default 0 when you not working with minimap\n            cursor: default;\n            // Change cursor style to pointer.\n            transition: 0.5s opacity;\n            // Better UI.\n            \u0026:hover {\n                opacity: 0.2;\n            } // Only display Minimap visible area when working.\n            \u0026:active {\n                cursor: default;\n            } // Change cursor when dragging.\n        }\n        \u0026:hover {\n            .minimap-visible-area {\n                opacity: 0.2;\n                transition: opacity 1s;\n            } // When Hover to all minimap area, visible area will display.\n        }\n\n        \u0026:active {\n            .minimap-visible-area {\n                opacity: 0.2;\n                transition: opacity 0.5s;\n            } // Display Minimap visible area when dragging.\n        }\n    }\n}\n\n```\n\n### ASCII Art Comments\n\nOne neat trick is to use ASCII art to create huge comments visible in the minimap. This is really efficient when navigating huge files.\n\n![ASCII Art Comments](https://github.com/atom-minimap/minimap/blob/master/resources/ascii-comments.png?raw=true)\n\nTo generate these comments you can use on these useful Atom packages:\n\n- [Figlet](https://atom.io/packages/figlet)\n- [Figletify](https://atom.io/packages/figletify)\n- [Minimap Titles](https://atom.io/packages/minimap-titles)\n- [Draw Package](https://atom.io/packages/draw-package)\n\n### Developers Documentation\n\n- [Developers Documentation](https://github.com/atom-minimap/minimap/blob/master/docs/Developers%20Documentation.md)\n- [Minimap API Documentation](http://atom-minimap.github.io/minimap/)\n\n### License\n\n[MIT](./LICENSE)\n","metadata":{"name":"minimap","main":"./lib/main","version":"4.29.9","private":true,"description":"A preview of the full source code.","author":"Fangdun Cai \u003ccfddream@gmail.com\u003e","keywords":["minimap","overview"],"scripts":{"standard":"standard","esdoc":"esdoc -c esdoc.json"},"contributors":[{"name":"Fangdun Cai","email":"cfddream@gmail.com"},{"name":"Cédric Néhémie","email":"cedric.nehemie@gmail.com"}],"repository":"https://github.com/atom-minimap/minimap","license":"MIT","engines":{"atom":"\u003e=1.13.0"},"providedServices":{"minimap":{"description":"Exposes the minimap API to other packages","versions":{"1.0.0":"provideMinimapServiceV1"}}},"viewProviders":["minimapViewProvider"],"configSchema":{"plugins":{"type":"object","properties":{}},"autoToggle":{"type":"boolean","default":true},"displayMinimapOnLeft":{"type":"boolean","default":false},"displayCodeHighlights":{"type":"boolean","default":true,"description":"Toggles the render of the buffer tokens in the minimap."},"displayPluginsControls":{"type":"boolean","default":true,"description":"You need to restart Atom for this setting to be effective."},"minimapScrollIndicator":{"type":"boolean","default":true,"description":"Toggles the display of a side line showing which part of the buffer is currently displayed by the minimap. This side line will only appear if the minimap is taller than the editor view height."},"useHardwareAcceleration":{"type":"boolean","default":true},"redrawDelay":{"type":"number","default":0,"minimum":0,"maximum":1000,"description":"Controls how often (in ms) the minimap should redraw itself after changing the text editor's contents. Setting this to 100ms or higher could dramatically improve editor responsiveness when working with large files. A value of 0 will cause the minimap to redraw itself immediately on each change."},"adjustMinimapWidthToSoftWrap":{"type":"boolean","default":true,"description":"If this option is enabled and Soft Wrap is checked then the Minimap max width is set to the Preferred Line Length value."},"adjustMinimapWidthOnlyIfSmaller":{"type":"boolean","default":true,"description":"If this option and `adjustMinimapWidthToSoftWrap` are enabled the minimap width will never go past the limit sets by CSS. On the other hand, when disabled the minimap will expand to honor the preferred line width."},"devicePixelRatioRounding":{"type":"boolean","default":true,"description":"Toggles the rounding of the devicePixelRatio in the minimap."},"charWidth":{"type":"number","default":1,"minimum":0.5},"charHeight":{"type":"number","default":2,"minimum":0.5},"interline":{"type":"number","default":1,"minimum":0,"description":"The space between lines in the minimap in pixels."},"textOpacity":{"type":"number","default":0.6,"minimum":0,"maximum":1,"description":"The opacity used to render the line's text in the minimap."},"scrollAnimation":{"type":"boolean","default":false,"description":"Enables animations when scrolling by clicking on the minimap."},"scrollAnimationDuration":{"type":"integer","default":300,"description":"The duration of scrolling animations when clicking on the minimap."},"moveCursorOnMinimapClick":{"type":"boolean","default":false,"description":"Moves the cursor to the beginning of the target line when clicking on the minimap"},"smoothScrolling":{"type":"boolean","default":true,"description":"Whether to offset the minimap canvas when scrolling to keep the scroll smooth. When `true` the minimap canvas will be offseted, resulting in a smoother scroll, but with the side-effect of a blurry minimap when the canvas is placed between pixels. When `false` the canvas will always stay at the same position, and will never look blurry, but the scroll will appear more jagged."},"independentMinimapScroll":{"type":"boolean","title":"Independent Minimap Scroll On Mouse Wheel Events","default":false,"description":"When enabled, using the mouse wheel over the Minimap will make it scroll independently of the text editor. The Minimap will still sync with the editor whenever the editor is scrolled, but it will no longer relay the mouse wheel events to the editor."},"scrollSensitivity":{"type":"number","default":0.5,"description":"The scrolling speed when the `Independent Minimap Scroll On Mouse Wheel Events` setting is enabled."},"createPluginInDevMode":{"type":"boolean","default":false},"absoluteMode":{"type":"boolean","default":false,"description":"When enabled the text editor content will be able to flow below the minimap."},"adjustAbsoluteModeHeight":{"type":"boolean","default":false,"description":"When enabled and `Absolute Mode` is also enabled, the minimap height will be adjusted to only take the space required by the text editor content, leaving the space below triggering mouse events on the text editor. **Be aware this can have some impact on performances as the minimap canvases will be resized every time a change in the editor make its height change.**"},"ignoreWhitespacesInTokens":{"type":"boolean","default":false,"description":"When enabled, text editor tokens are rendered as plain blocks, with no regards to the whitespaces they contains."}},"dependencies":{"atom-utils":"\u003e=0.9.2","delegato":"1.x","element-resize-detector":"^1.1.11","fs-plus":"2.x","mixto":"1.x","underscore-plus":"1.x"},"devDependencies":{"esdoc":"^0.4.0","standard":"^5.1.0"},"standard":{"globals":["advanceClock","atom","beforeEach","afterEach","expect","describe","fdescribe","ffdescribe","fffdescribe","xdescribe","it","xit","fit","ffit","fffit","jasmine","MouseEvent","runs","spyOn","waits","waitsFor","waitsForPromise","devicePixelRatio","requestAnimationFrame","Event","MouseEvent","IntersectionObserver"]}}},{"name":"kite","repository":{"type":"git","url":"https://github.com/kiteco/atom-plugin"},"downloads":4460467,"stargazers_count":123,"releases":{"latest":"0.172.0"},"readme":"# Kite Python Plugin for Atom\n\nKite is an AI-powered programming assistant that helps you write Python code inside Atom. Kite helps you write code faster by showing you the right information at the right time. Learn more about how Kite boosts your Atom editor's capabilities at https://kite.com/integrations/atom-editor/. \n\nAt a high level, Kite provides you with:\n* 🧠 __[Line-of-Code Completions](https://kite.com/blog/product/launching-line-of-code-completions-going-cloudless-and-17-million-in-funding/)__ powered by machine learning models trained on the entire open source code universe\n* 📝 __[Intelligent Snippets](https://kite.com/blog/product/announcing-intelligent-snippets-for-python/)__ that automatically provide context-relevant code snippets for your function calls\n* 🔍 __[Instant documentation](https://kite.com/copilot/)__ for the symbol underneath your cursor so you save time searching for Python docs\n\n\n## Requirements\n\n* macOS 10.11+, Windows 7+ or Linux\n* Atom v1.13.0+\n* [Kite Engine](https://kite.com/)\n\nUse another editor? Check out [Kite’s other editor integrations](https://kite.com/integrations/).\n\n## Installation\n\n### Installing the Kite Engine\n\nThe [Kite Engine](https://kite.com/) needs to be installed in order for the package to work properly. The package itself\nprovides the frontend that interfaces with the Kite Engine, which performs all the code analysis and machine learning 100% locally on your computer (no code is sent to a cloud server).\n\n__macOS Instructions__\n1. Download the [installer](https://kite.com/download) and open the downloaded `.dmg` file.\n2. Drag the Kite icon into the `Applications` folder.\n3. Run `Kite.app` to start the Kite Engine.\n\n__Windows Instructions__\n1. Download the [installer](https://kite.com/download) and run the downloaded `.exe` file.\n2. The installer should run the Kite Engine automatically after installation is complete.\n\n__Linux Instructions__\n1. Visit https://kite.com/linux/ to install Kite.\n2. The installer should run the Kite Engine automatically after installation is complete.\n\n\n### Installing the Kite Plugin for Atom\n\nWhen running the Kite Engine for the first time, you'll be guided through a setup process which will allow you to install\nthe Atom package. You can also install or uninstall the Atom package at any time using the Kite Engine's [plugin\nmanager](https://help.kite.com/article/62-managing-editor-plugins).\n\nAlternatively, you have 2 options to manually install the package:\n1. Search for \"Kite\" in Atom's built-in package manager and install from there.\n2. Run the command `apm install kite` in your terminal.\n\n[Learn more about why you should use Kite with Atom.](https://kite.com/integrations/atom-editor/)\n\n\n## Usage\n\nThe following is a brief guide to using Kite in its default configuration.\n\n### Tutorial\n\nWhen starting Atom with the Kite Assistant for the first time, you'll be guided through a tutorial that shows you how to\nuse Kite.\n\n![tutorial](https://github.com/kiteco/atom-plugin/blob/master/docs/images/tutorial.png?raw=true)\n\nThis tutorial will only be displayed once. You can show it again at any time by running the command `Kite: Tutorial` from\nAtom's command palette.\n\n### Hover\n\nHover your mouse cursor over a symbol to view a short summary of what the symbol represents.\n\n![hover](https://github.com/kiteco/atom-plugin/blob/master/docs/images/hover.png?raw=true)\n\n### Documentation\n\nClick on the `Docs` link in the hover popup to open the documentation for the symbol inside the Copilot, Kite's standalone\nreference tool.\n\n![copilot](https://github.com/kiteco/atom-plugin/blob/master/docs/images/copilot.png?raw=true)\n\n### Definitions\n\nIf a `Def` link is available in the hover popup, clicking on it will jump to the definition of the symbol.\n\n### Autocompletions\n\nSimply start typing in a saved Python file and Kite will automatically suggest completions for what you're typing.\n\n![completions](https://github.com/kiteco/atom-plugin/blob/master/docs/images/completions.png?raw=true)\n\n### Function Signatures\n\nWhen you call a function, Kite will show you the arguments required to call it.\n\n![signature](https://github.com/kiteco/atom-plugin/blob/master/docs/images/signature.png?raw=true)\n\nKite also shows you `How others used this` function, which are the most popular calling patterns inferred from all the\nopen source code on the internet.\n\n### Commands\n\nKite comes with sevaral commands that you can run from Atom's command palette.\n\n![commands](https://github.com/kiteco/atom-plugin/blob/master/docs/images/commands.png?raw=true)\n\n|Command|Description|\n|:---|:---|\n|`kite:open-copilot`|Open the Copilot|\n|`kite:docs-at-cursor`|Show documentation of the symbol underneath your cursor in the Copilot|\n|`kite:status`|Show the current status of Kite in the status panel|\n|`kite:package-settings`|Open the settings for the Kite Atom package|\n|`kite:engine-settings`|Open the settings for the Kite Engine|\n|`kite:tutorial`|Open the Kite tutorial file|\n|`kite:help`|Open Kite's help website in the browser|\n\nIf you wish, you may also setup keybindings for the commands listed above.\n\n\n## Configuration\n\nYou can view and change the Kite Assistant's settings by finding Kite in your list of installed packages, then clicking\nthe `Settings` button. Alternatively, you can run the command `Kite: Package Settings` from the command palette.\n\n\n## Contact Us\n\nFeel free to contact us with bug reports, feature requests, or general comments at feedback@kite.com.\n\nHappy coding!\n\n\n---\n\n#### About Kite\n\nKite is built by a team in San Francisco devoted to making programming easier and more enjoyable for all. Follow Kite on\n[Twitter](https://twitter.com/kitehq) and get the latest news and programming tips on the\n[Kite Blog](https://kite.com/blog).\nKite has been featured in [Wired](https://www.wired.com/2016/04/kites-coding-asssitant-spots-errors-finds-better-open-source/), \n[VentureBeat](https://venturebeat.com/2019/01/28/kite-raises-17-million-for-its-ai-powered-developer-environment/), \n[The Next Web](https://thenextweb.com/dd/2016/04/14/kite-plugin/), and \n[TechCrunch](https://techcrunch.com/2019/01/28/kite-raises-17m-for-its-ai-driven-code-completion-tool/). \n\n","metadata":{"name":"kite","main":"./dist/main","version":"0.172.0","description":"Python coding assistant featuring AI-powered autocompletions, advanced function signatures, and instant documentation","repository":"https://github.com/kiteco/atom-plugin","keywords":[],"license":"SEE LICENSE IN LICENSE","engines":{"atom":"\u003e=1.0.0 \u003c2.0.0"},"scripts":{"lint":"eslint .","lint:fix":"eslint --fix .","build-prod":"webpack --config config/webpack.config.js --mode production","prepublishOnly":"rm -rf node_modules \u0026\u0026 rm -f package-lock.json \u0026\u0026 apm install \u0026\u0026 rm -rf dist \u0026\u0026 npm run build-prod","build-dev":"webpack --config config/webpack.config.js --mode none","clean-dev-install":"apm unlink \u0026\u0026 rm -rf node_modules \u0026\u0026 rm -f package-lock.json \u0026\u0026 apm install \u0026\u0026 rm -rf dist \u0026\u0026 npm run build-dev \u0026\u0026 apm link"},"configSchema":{"showWelcomeNotificationOnStartup":{"type":"boolean","default":true,"title":"Show welcome notification on startup","description":"Whether or not to show the Kite welcome notification on startup."},"enableCompletions":{"type":"boolean","default":true,"title":"Enable completions","description":"Automatically show completions from Kite as you type."},"enableHoverUI":{"type":"boolean","default":true,"title":"Enable hover","description":"Show a quick summary of a symbol when you hover your mouse over it."},"enableSnippets":{"type":"boolean","default":true,"title":"Enable snippets","description":"Enable snippets feature."},"maxVisibleSuggestionsAlongSignature":{"type":"integer","default":5,"title":"Completions limit with function signature","description":"Maximum number of completions that can be shown when a function signature is also shown."},"loggingLevel":{"type":"string","default":"info","enum":["silly","verbose","debug","info","warning","error"],"title":"Logging level","description":"The verbosity level of Kite logs."},"pollingInterval":{"type":"integer","default":15000,"min":1000,"max":60000,"title":"Polling interval","description":"Interval in milliseconds at which the Kite package polls Kite Engine to get the status of the current file."},"developerMode":{"type":"boolean","default":false,"title":"Developer mode","description":"Displays JSON data from Kite Engine that's used when rendering a UI element."},"startKiteAtStartup":{"type":"boolean","default":true,"title":"Start Kite Engine on startup","description":"Automatically start Kite Engine on editor startup if it's not already running."},"signatureKwargsVisible":{"type":"boolean","default":false,"title":"Show function keyword arguments","description":"Show inferred keyword arguments for a function when the function signature panel is shown"},"signaturePopularPatternsVisible":{"type":"boolean","default":false,"title":"Show function call examples","description":"Show examples on how to call a function when the function signature panel is shown"}},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"completions"}}},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"dependencies":{"analytics-node":"^3.1.1","element-resize-detector":"^1.1.11","fuzzaldrin-plus":"^0.4.1","getmac":"1.2.1","kite-api":"=3.5.0","kite-connector":"=3.4.0","kite-installer":"=3.2.0","lodash":"^4.17.11","md5":"^2.2.0","rollbar":"^2.3.8","tiny-relative-date":"^1.3.0","underscore-plus":"^1"},"devDependencies":{"@babel/core":"^7.4.3","@babel/preset-env":"^7.4.3","babel-eslint":"^6.1.2","babel-loader":"^8.0.5","editors-json-tests":"git://github.com/kiteco/editors-json-tests.git#master","eslint":"^4.18.2","eslint-config":"^0.3.0","eslint-config-fbjs":"^1.1.1","eslint-plugin-babel":"^3.3.0","eslint-plugin-flowtype":"^2.29.1","eslint-plugin-jasmine":"^2.2.0","eslint-plugin-prefer-object-spread":"^1.1.0","eslint-plugin-react":"^5.2.2","fbjs":"^0.8.6","javascript-obfuscator":"^0.8.3","sinon":"^2.3.5","webpack":"^4.30.0","webpack-cli":"^3.3.0"}}},{"name":"linter-ui-default","repository":{"type":"git","url":"https://github.com/steelbrain/linter-ui-default"},"downloads":4203925,"stargazers_count":1066,"releases":{"latest":"1.8.0"},"readme":"Linter-UI-Default\n================\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/linter-ui-default.svg)](https://greenkeeper.io/)\n\n[![Slack Badge](https://img.shields.io/badge/chat-atom.io%20slack-blue.svg?style=flat-square)](http://atom-slack.herokuapp.com/)\n[![Build Status](https://img.shields.io/circleci/project/steelbrain/linter-ui-default.svg?style=flat-square)](https://circleci.com/gh/steelbrain/linter-ui-default)\n[![Plugin installs!](https://img.shields.io/apm/dm/linter-ui-default.svg?style=flat-square)](https://atom.io/packages/linter-ui-default)\n[![Package version!](https://img.shields.io/apm/v/linter-ui-default.svg?style=flat-square)](https://atom.io/packages/linter-ui-default)\n[![Dependencies!](https://img.shields.io/david/steelbrain/linter-ui-default.svg?style=flat-square)](https://david-dm.org/steelbrain/linter-ui-default)\n\nThe default UI for linter.\n\n![Preview](https://cloud.githubusercontent.com/assets/4278113/23879933/1ab17e2a-0872-11e7-803d-3fe0ccfc6790.gif)\n\n### Installation\n\nYou can install it from the CLI\n\n```\napm install linter-ui-default\n```\n\nOr you can install from Settings view by searching for `linter-ui-default`.\n\n### License\n\nThis Project is licensed under the terms of MIT License, check the license file for more info.\n","metadata":{"name":"linter-ui-default","main":"./lib/index.js","version":"1.8.0","description":"Default UI for the Linter package","keywords":["linter-ui","linter-ui-default"],"repository":"https://github.com/steelbrain/linter-ui-default","license":"MIT","engines":{"atom":"\u003e=1.19.0 \u003c2.0.0"},"scripts":{"test":"apm test","lint":"(flow check) \u0026\u0026 (eslint . ) \u0026\u0026 (prettier --list-different lib/*.js)"},"dependencies":{"atom-package-deps":"^5.1.0","disposable-event":"^1.0.3","marked":"^0.7.0","react":"^16.9.0","react-dom":"^16.9.0","sb-debounce":"^1.0.1","sb-react-table":"^1.0.2"},"devDependencies":{"eslint-config-steelbrain":"^5.0.0","flow-bin":"^0.67.1","jasmine-fix":"^1.0.1"},"providedServices":{"linter-ui":{"versions":{"1.0.0":"provideUI"}},"intentions:list":{"versions":{"1.0.0":"provideIntentions"}}},"consumedServices":{"busy-signal":{"versions":{"1.0.0":"consumeSignal"}},"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"package-deps":["intentions","linter"],"configSchema":{"showPanel":{"type":"boolean","description":"Show panel at the bottom of screen","default":false,"order":1},"showTooltip":{"description":"Show inline issue tooltips","type":"boolean","default":true,"order":1},"showStatusBar":{"description":"Show status bar with error / warning / info count at the bottom","type":"boolean","default":true,"order":1},"showDecorations":{"description":"Underline editor text and highlight gutter of issues","type":"boolean","default":true,"order":1},"showProviderName":{"type":"boolean","description":"Show provider name in tooltip (Hint: It's always shown in the panel)","default":false,"order":1},"useBusySignal":{"description":"Whether to integrate with the `busy-signal` package","type":"boolean","default":true,"order":1},"hidePanelWhenEmpty":{"description":"Hide panel when there are no issues to display","type":"boolean","default":true,"order":1},"alwaysTakeMinimumSpace":{"description":"Auto resizes Linter panel when there are less issues to show","type":"boolean","default":false,"order":1},"decorateOnTreeView":{"type":"string","description":"Underline the selected type in TreeView to indicate issues","default":"Files","enum":["Files and Directories","Files","None"],"order":2},"panelRepresents":{"type":"string","enum":["Entire Project","Current File","Current Line"],"default":"Current File","order":2},"statusBarPosition":{"title":"Statusbar Position","type":"string","enum":["Left","Right"],"default":"Left","order":2},"statusBarRepresents":{"title":"Statusbar Represents","type":"string","enum":["Entire Project","Current File"],"default":"Entire Project","order":2},"statusBarClickBehavior":{"title":"Statusbar Click Behavior","type":"string","enum":["Toggle Panel","Toggle Status Bar Scope","Jump to next issue"],"default":"Toggle Panel","order":2},"tooltipFollows":{"type":"string","description":"Choose whether tooltips show on mouseover, or follow the keyboard cursor","enum":["Both","Mouse","Keyboard"],"default":"Both","order":2},"gutterPosition":{"title":"Gutter Highlights Position","description":"Relative to the line numbers","type":"string","enum":["Left","Right"],"default":"Right","order":2},"panelHeight":{"title":"Panel Height","description":"in px","type":"number","default":100,"order":3}}}},{"name":"busy-signal","repository":{"type":"git","url":"https://github.com/steelbrain/busy-signal"},"downloads":3410741,"stargazers_count":1020,"releases":{"latest":"2.0.1"},"readme":"# Busy Signal\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/busy-signal.svg)](https://greenkeeper.io/)\n\nBusy Signal is a base package that provides an easy to use API to show your package is performing a task.\n\n## API\n\nPlease head to [`busy-signal` wiki](https://github.com/steelbrain/busy-signal/wiki/Busy-Signal-API) for the API documentation\n\n## Screenshot\n\n![busy-signal](https://cloud.githubusercontent.com/assets/4278113/22865536/0a123074-f188-11e6-8c6e-38574a6fe14c.gif)\n\n## License\n\nThis project is licensed under the terms of MIT License\n","metadata":{"name":"busy-signal","main":"./lib/index.js","version":"2.0.1","description":"A package that provides an easy to use API to show your package is performing a task","keywords":["busy","signal"],"repository":"https://github.com/steelbrain/busy-signal","license":"MIT","engines":{"atom":"\u003e=1.0.0 \u003c2.0.0"},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"providedServices":{"busy-signal":{"versions":{"1.0.0":"providerRegistry"}},"atom-ide-busy-signal":{"versions":{"0.1.0":"provideBusySignal"}}},"dependencies":{"disposify":"^1.0.0","ms":"^2.1.1"},"devDependencies":{"eslint-config-steelbrain":"^6.0.0","eslint-plugin-flowtype":"^3.2.0","flow-bin":"^0.89.0","jasmine-fix":"^1.3.1"},"scripts":{"test":"apm test","lint":"eslint ."}}},{"name":"emmet","repository":{"type":"git","url":"https://github.com/emmetio/emmet-atom"},"downloads":2859389,"stargazers_count":2813,"releases":{"latest":"2.4.3"},"readme":"# Emmet plugin Atom editor\n\n[Emmet](http://emmet.io) support for [Atom](http://atom.io).\n\n## Installation\n\n* In Atom, open *Preferences* (*Settings* on Windows)\n* Go to *Install* section\n* Search for `Emmet` package. Once it found, click `Install` button to install package.\n\n### Manual installation\n\nYou can install the latest Emmet version manually from console:\n\n```bash\ncd ~/.atom/packages\ngit clone https://github.com/emmetio/emmet-atom\ncd emmet-atom\nnpm install\n```\n\nThen restart Atom editor.\n\n## Features:\n\n* Expand abbreviations by \u003ckbd\u003eTab\u003c/kbd\u003e key.\n* Multiple cursor support: most [Emmet actions](http://docs.emmet.io/actions/) like Expand Abbreviation, Wrap with Abbreviation, Update Tag can run in multi-cursor mode.\n* Interactive actions (Interactive Expand Abbreviation, Wrap With Abbreviation, Update Tag) allows you to preview result real-time as you type.\n* Better tabstops in generated content: when abbreviation expanded, hit \u003ckbd\u003eTab\u003c/kbd\u003e key to quickly traverse between important code points.\n* [Emmet v1.1 core](http://emmet.io/blog/beta-v1-1/).\n\nPlease report any problems at [issue tracker](https://github.com/emmetio/emmet-atom/issues).\n\n## Tab key\n\nCurrently, Emmet expands abbreviations by Tab key only for HTML, CSS, Sass/SCSS and LESS syntaxes. Tab handler scope is limited because it overrides default snippets.\n\nIf you want to make Emmet expand abbreviations with Tab key for other syntaxes, you can do the following:\n\n1. Use *Open Your Keymap* menu item to open your custom `keymap.cson` file.\n2. Add the following section into it:\n\n```coffee\n'atom-text-editor[data-grammar=\"YOUR GRAMMAR HERE\"]:not([mini])':\n    'tab': 'emmet:expand-abbreviation-with-tab'\n```\n\nReplace `YOUR GRAMMAR HERE` with actual grammar attribute value. The easiest way to get grammar name of currently opened editor is to open DevTools and find corresponding `\u003catom-text-editor\u003e` element: it will contain `data-grammar` attribute with value you need. For example, for HTML syntax it’s a `text html basic`.\n\nYou can add as many sections as you like for different syntaxes. Note that default snippets will no longer work, but you can add [your own snippets in Emmet](http://docs.emmet.io/customization/).\n\n## Default Keybindings\n\nYou can change these in Preferences \u003e Keybindings.\n\nCommand | Darwin | Linux/Windows\n------- | ------ | -------------\nExpand Abbreviation | \u003ckbd\u003etab\u003c/kbd\u003e or \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003ee\u003c/kbd\u003e | \u003ckbd\u003etab\u003c/kbd\u003e or \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ee\u003c/kbd\u003e\nExpand Abbreviation (interactive) | \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003eenter\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003eenter\u003c/kbd\u003e\nWrap with Abbreviation | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ew\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003ew\u003c/kbd\u003e\nBalance (outward) | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ed\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003ee\u003c/kbd\u003e\nBalance (inward) | \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003ed\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e0\u003c/kbd\u003e\nGo to Matching Pair | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003ej\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003ej\u003c/kbd\u003e\nNext Edit Point | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003e→\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e→\u003c/kbd\u003e\nPrevious Edit Point | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003e←\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e←\u003c/kbd\u003e\nSelect Next Item | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e→\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e.\u003c/kbd\u003e\nSelect Previous Item | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e←\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e,\u003c/kbd\u003e\nToggle Comment | \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003e/\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e/\u003c/kbd\u003e\nSplit/Join Tag | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003ej\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e`\u003c/kbd\u003e\nRemove Tag | \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003e'\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e;\u003c/kbd\u003e\nEvaluate Math Expression | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003ey\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003ey\u003c/kbd\u003e\nIncrement Number by 0.1 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e | \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e\nDecrement Number by 0.1 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e | \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e\nIncrement Number by 1 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e\nDecrement Number by 1 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e\nIncrement Number by 10 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↑\u003c/kbd\u003e\nDecrement Number by 10 | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003ealt\u003c/kbd\u003e + \u003ckbd\u003e↓\u003c/kbd\u003e\nReflect CSS value | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003er\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003er\u003c/kbd\u003e\nUpdate Image Size | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003ei\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eu\u003c/kbd\u003e\nEncode/Decode image to data:URL | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003ei\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003e'\u003c/kbd\u003e\nUpdate Tag | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003eu\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e'\u003c/kbd\u003e\nMerge Lines | \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003e⌘\u003c/kbd\u003e + \u003ckbd\u003em\u003c/kbd\u003e | \u003ckbd\u003ectrl\u003c/kbd\u003e + \u003ckbd\u003eshift\u003c/kbd\u003e + \u003ckbd\u003em\u003c/kbd\u003e\n\nAll actions and their keyboard shortcuts are available under Packages \u003e Emmet menu item.\n\n## Extensions support\n\nYou can easily [extend](http://docs.emmet.io/customization/) Emmet with new actions and filters or customize existing ones. In Preferences \u003e Emmet, set Extensions path to folder with Emmet extensions. By default, it’s `~/emmet`, e.g. `emmet` folder in your system HOME folder.\n","metadata":{"name":"emmet","description":"Emmet – the essential tool for web developers","main":"./lib/emmet","version":"2.4.3","dependencies":{"emmet":"^1.3.2","atom-space-pen-views":"^2.0.3"},"license":"MIT","repository":"https://github.com/emmetio/emmet-atom","engines":{"atom":"*"}}},{"name":"intentions","repository":{"type":"git","url":"https://github.com/steelbrain/intentions"},"downloads":2795213,"stargazers_count":996,"releases":{"latest":"1.1.5"},"readme":"Intentions\n=========\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/steelbrain/intentions.svg)](https://greenkeeper.io/)\n\nIntentions is a base package that provides an easy-to-use API to show intentions based in Atom.\n\n#### Usage\n\nThe default keybinding on OSX to trigger list is `ctrl` + `enter`. If you want to trigger intentions highlights,\npress `alt`.\n\nThe default keybinding on Windows and Linux to trigger list is `alt` + `enter`. If you want to trigger intentions\nhighlights press `ctrl`.\n\n#### APIs\n\nIntentions provides two kinds of APIs, there's Intentions List API that allows you to add items\nto intentions list. Here is what it looks like,\n\n![Intentions List API](https://cloud.githubusercontent.com/assets/4278113/12488546/e73809ba-c08d-11e5-8038-dd222f3a815d.png)\n\nThe second type of API is highlight API. It allows packages to mark buffer ranges and do cool thing with them.\nIt can be jump-to-declaration click, show type on mouse move and show color as underline.\nHere is what it looks like\n\n![Intentions Highlight API](https://cloud.githubusercontent.com/assets/4278113/12878032/0f915ef2-ce3f-11e5-833e-be231abeda12.png)\n\nYou can find docs about both of these in [Intentions Wiki](https://github.com/steelbrain/intentions/wiki/Intentions-API)\n\n#### License\nThis package is licensed under the terms of MIT License, see the license file for more info.\n","metadata":{"name":"intentions","main":"./lib/index.js","version":"1.1.5","description":"Base package for showing intentions in Atom","keywords":[],"repository":"https://github.com/steelbrain/intentions","license":"MIT","engines":{"atom":"\u003e=1.0.0 \u003c2.0.0"},"dependencies":{"disposable-event":"^1.0.1","sb-event-kit":"^3.0.0","vanilla-jsx":"^3.0.2"},"devDependencies":{"eslint-config-steelbrain":"^2.0.0","flow-bin":"^0.46.0","jasmine-fix":"^1.0.1"},"consumedServices":{"intentions:list":{"versions":{"^1.0.0":"consumeListIntentions"}},"intentions:highlight":{"versions":{"^1.0.0":"consumeHighlightIntentions"}}},"scripts":{"test":"(apm test) \u0026\u0026 (flow check) \u0026\u0026 (eslint . )"}}},{"name":"pigments","repository":{"type":"git","url":"https://github.com/abe33/atom-pigments"},"downloads":2781151,"stargazers_count":3665,"releases":{"latest":"0.40.2"},"readme":"[![Build Status](https://travis-ci.org/abe33/atom-pigments.svg?branch=master)](https://travis-ci.org/abe33/atom-pigments)\n\n## \u003cimg src='http://abe33.github.io/atom-pigments/logo.svg' width='320' height='80'\u003e\n\nA package to display colors in project and files:\n\n![Screenshot](http://abe33.github.io/atom-pigments/pigments.gif?raw=true)\n\nPigments will scan source files in your project directories looking for colors and will build a palette with all of them. Then for each opened file, it will use the palette to evaluate the value of a given color. The legible source paths can be defined through various settings either at the global or per project level. **By default colors in every file will be highlighted, to limit the display of colors to the desired filetype only please see the [Defining Where Pigments Applies](#defining-where-pigments-applies) below.**\n\nPigments supports out of the box most of the color transformations functions and expressions of the three biggest CSS pre-processors out there, namely LESS, Sass and Stylus. However, it doesn't mean pigments is able to parse and understand all of these languages constructs. For the moment, Pigments' aim is to support the widest range of usage, even if it implies reducing its ability to parse certain complex constructs. You can refer to the [parser specs](https://github.com/abe33/atom-pigments/blob/master/spec/color-parser-spec.coffee) for an exhaustive list of the supported expressions.\n\n## Install\n\nUsing `apm`:\n\n```sh\napm install pigments\n```\n\nOr search for `pigments` in Atom settings view.\n\n## Defining Where Pigments Applies\n\nBy default, Pigments will highlight every color in every file, but you can limit that using the two settings [`Supported Filetypes`](#supported-filetypes) and [`Ignored Scopes`](#ignored-scopes).\n\nThe first setting allow you to specify the list of extensions where pigments will apply. For instance, by using the values `css, less`, colors will be visible only in CSS and Less files.\n\nThe second setting takes an array of regular expression strings used to exclude colors in specific scopes (like comments or strings). You can find the scope that applies at the cursor position with the `Editor: Log Cursor Scope` command (\u003ckbd\u003ecmd-alt-p\u003c/kbd\u003e or \u003ckbd\u003ectrl-alt-shift-p\u003c/kbd\u003e).\n\n![get scope](http://abe33.github.io/atom-pigments/get-scope.gif?raw=true)\n\n## Defaults File\n\nPigments is able to follow variables uses up to a certain point, if a color refers to several variables whose values can't be evaluated (because they use unsupported language-specific features) the color will be flagged as invalid and not displayed. This can be problematic when it happens on the core components of a complex palette.\n\nTo solve that issue, you can define a *defaults file* named `.pigments` at the root of a project directory and you can put in it all the variables declarations to use if a value from the sources files can't be evaluated.\n\nThis can also be used when your project core palette is dynamically defined so that pigments can evaluate properly the rest of the project colors.\n\n## Commands\n\n**Note:** Pigments doesn't define any keybindings for the provided commands, instead it'll let you define your own keybindings.\n\n### Pigments: Show Palette\n\nYou can display the project's palette through the `Pigments: Show Palette` command from the command palette:\n\n![Screenshot](http://abe33.github.io/atom-pigments/palette.gif?raw=true)\n\nThe project palette is made of all the colors that are affected to a variable, which means it won't display hardcoded colors affected to a CSS property. If you want to find every color used in a project, including the hardcoded colors in CSS files, use the `Pigments: Find Colors` instead.\n\nPatterns for Less, Sass, Scss and Stylus variables are currently supported, which includes:\n\n```stylus\nmy-var = #123456 // stylus\n```\n```sass\n$my-var: #123456 // sass\n$my-var: #123456; // scss\n```\n```css\n@my-var: #123456; /* less */\n```\n\nAs with every command, this command can be triggered using the keyboard by defining a keybinding like this:\n\n```coffee\n'atom-workspace':\n  'alt-shift-p': 'pigments:show-palette'\n```\n\n### Pigments: Find Colors\n\nYou can search for all colors in your project using the `Pigments: Find Colors` command from the command palette:\n\n![Screenshot](http://abe33.github.io/atom-pigments/search.gif?raw=true)\n\nThe results will include colors declared in variables, places where the color variables are used as well as hardcoded color values in every file that matches one of the patterns defined in both `pigments.sourceNames` and `pigments.extendedSearchNames` settings.\n\nBy default this includes:\n\n```\n**/*.css\n**/*.less\n**/*.scss\n**/*.sass\n**/*.styl\n**/*.stylus\n```\n\nThis command can be triggered using the keyboard by defining a keybinding like this:\n\n```coffee\n'atom-workspace':\n  'alt-shift-f': 'pigments:find-colors'\n```\n\n### Pigments: Convert To *\n\nIt evaluates and replace a color by the corresponding notation.\nAccessible from the command palette or by right clicking on a color.\n\n![pigments-conversion](http://abe33.github.io/atom-pigments/context-menu-conversion.gif?raw=true)\n\nThese commands can be triggered using the keyboard by defining a keybinding like this:\n\n```coffee\n'atom-workspace':\n  'alt-shift-h': 'pigments:convert-to-hex'\n  'alt-shift-g': 'pigments:convert-to-rgb'\n  'alt-shift-j': 'pigments:convert-to-rgba'\n  'alt-shift-k': 'pigments:convert-to-hsl'\n  'alt-shift-l': 'pigments:convert-to-hsla'\n```\n\nWhen triggered from the command palette or from the keyboard, the conversion will operate on every cursor positioned on color markers.\n\n### Pigments: Project Settings\n\nEach Pigments project has its own set of settings that can extend or replace the global configuration. These settings are available through the `pigments:project-settings` command:\n\n![pigments-conversion](http://abe33.github.io/atom-pigments/project-settings.png?raw=true)\n\nThe `Source Names`, `Ignored Names`, `Ignored Scopes` and `Extended Search Names` fields all match a global configuration. When defined the project will use both the global config and the one of the current project, except when the `Ignore Global` checkbox is checked.\n\nThe `Include Atom Themes Stylesheets` setting is specific to the project and can't be defined globally. When enabled, it'll add all the public themes variables in the current project palette:\n\n![pigments-conversion](http://abe33.github.io/atom-pigments/project-settings.gif?raw=true)\n\n**Note that it won't add all the variables defined in the less files of the syntax and ui themes, only the ones that must be present as defined in the [themes documentation](https://atom.io/docs/latest/hacking-atom-creating-a-theme).**\n\n**This feature is still quite experimental at this stage.**\n\n### Pigments: Reload\n\nThis command will force a reload of all variables in the project, this can be useful when the serialized state of the plugin contains invalid data and you want to get rid of them without having to touch to the content of the `.atom/storage` directory.\n\nThis command can be triggered using the keyboard by defining a keybinding like this:\n\n```coffee\n'atom-workspace':\n  'alt-shift-r': 'pigments:reload'\n```\n\n## Settings\n\n### Source Names\n\nAn array of glob patterns of the files to use as source for the project's variables and colors.\n\n* Key: `pigments.sourceNames`\n* Default: `['**/*.styl', '**/*.stylus', '**/*.less', '**/*.sass', '**/*.scss']`\n\n### Ignored Names\n\nAn array of glob patterns of the files to ignore as source files for the project's variables and colors.\n\n* Key: `pigments.ignoredNames`\n* Default: `['node_modules/*']`\n\n### Extended Search Names\n\nAn array of glob patterns of files to include in the `Pigments: Find Colors` scanning process.\n\n* Key: `pigments.extendedSearchNames`\n* Default: `['**/*.css']`\n\n### Supported Filetypes\n\nAn array of file extensions where colors will be highlighted. If the wildcard `*` is present in this array then colors in every file will be highlighted.\n\n* Key: `pigments.supportedFiletypes`\n* Default: `['*']`\n\n### Filetypes For Color Words\n\nAn array of file extensions where color values such as `red`, `azure` or `whitesmoke` will be highlighted. By default CSS and CSS pre-processors files are supported.\n\nYou can use `none` or whatever value that doesn't match a file extension to completely prevent color words from being highlighted.\n\n* Key: `pigments.filetypesForColorWords`\n* Default: `['css', 'less', 'styl', 'stylus', 'sass', 'scss']`\n\n### Ignored Scopes\n\nAn array of regular expressions strings to match scopes to ignore when rendering colors in a text editor.\n\nFor instance, if you want to ignore colors in comments and strings in your source files, use the following value:\n\n```\n\\.comment, \\.string\n```\n\nAs you can notice, the `.` character in scopes are escaped. This is due to the fact that this setting uses javascript `RegExp` to test the token's scope and the `.` is used to match against any character.\n\nFor instance, to ignore colors in html attributes you can use the following expression:\n\n```\n\\.text\\.html(.*)\\.string\n```\n\nNote the `(.*)` in the middle of the expression. It'll ensure that we're searching for the `.string` scope in the `.text.html` grammar even if there's other scope between them by catching any character between the two classnames.\n\nTo find which scope is applied at a given position in a buffer you can use the `editor:log-cursor-scope` command. From that you'll be able to determine what expression to use to match the scope.\n\n* Key: `pigments.ignoredScopes`\n* Default: `[]`\n\n### Autocomplete Scopes\n\nThe autocomplete provider will only complete color names in editors whose scope is present in this list.\n\n* Key: `pigments.autocompleteScopes`\n* Default: `['.source.css', '.source.css.less', '.source.sass', '.source.css.scss', '.source.stylus']`\n\n### Sass Shade And Tint Implementation\n\nSass doesn't provide any implementation for shade and tint function, and Compass and Bourbon have different implementation for these two methods. This setting allow you to chose which implementation to use.\n\n* Key: `pigments.sassShadeAndTintImplementation`\n* Default: `'compass'`\n\n### Extend Autocomplete To Variables\n\nWhen enabled, the autocomplete provider will also provides completion for non-color variables.\n\n* Key: `pigments.extendAutocompleteToVariables`\n* Default: `false`\n\n### Extend Autocomplete To Color Value\n\nWhen enabled, the autocomplete provider will also provides color value.\n\n* Key: `pigments.extendAutocompleteToColorValue`\n* Default: `false`\n\n### Traverse Into Symlink Directories\n\nWhether to traverse symlinked directories to find source files or not.\n\n* Key: `pigments.traverseIntoSymlinkDirectories`\n* Default: `false`\n\n### Ignore VCS Ignored Paths\n\nWhen this setting is enabled, every file that are ignored by the VCS will also be ignored in Pigments. That means they'll be excluded when searching for colors and when building the project palette.\n\n* Key: `pigments.ignoreVcsIgnoredPaths`\n* Default: `true`\n\n### Marker Type\n\nDefines the render mode of color markers. The possible values are:\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth\u003ebackground\u003c/th\u003e\n    \u003cth\u003eoutline\u003c/th\u003e\n    \u003cth\u003eunderline\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/background-renderer.png?raw=true'/\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/outline-renderer.png?raw=true'/\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/underline-renderer.png?raw=true'/\u003e\n    \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth\u003edot\u003c/th\u003e\n    \u003cth\u003esquare-dot\u003c/th\u003e\n    \u003cth\u003egutter\u003c/th\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/dot-renderer.png?raw=true'/\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/square-dot-renderer.png?raw=true'/\u003e\n    \u003c/td\u003e\n    \u003ctd\u003e\n      \u003cimg src='http://abe33.github.io/atom-pigments/gutter-color.png?raw=true'/\u003e\n    \u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\n* Key: `pigments.markerType`\n* Default: `'background'`\n\n### Sort Palette Colors\n\nThe type of sorting applied to the colors in the palette view. It can be changed directly from the palette view.\n\n* Key: `pigments.sortPaletteColors`\n* Default: `'none'`\n\n### Group Palette Colors\n\nDefines how the colors are grouped together in the palette view. It can be changed directly from the palette view.\n\n* Key: `pigments.groupPaletteColors`\n* Default: `'none'`\n\n### Merge Duplicates\n\nDefines whether to merge colors duplicates together as a single result in the palette view. It can be changed directly from the palette view.\n\n* Key: `pigments.mergeDuplicates`\n* Default: `false`\n\n### Delay Before Scan\n\nPigments rescans the text buffer once you stopped editing it, however as the process can be sometime expensive, it'll apply an extra delay after the dispatch of the `did-stop-changing` event before starting the scanning process. This setting define the number of milliseconds to wait after the `did-stop-changing` event before starting to scan the buffer again. If your start typing in the buffer again in this interval, the rescan process will be aborted.\n\n* Key: `pigments.delayBeforeScan`\n* Default: `500` (ms)\n","metadata":{"name":"pigments","main":"./lib/pigments","version":"0.40.2","description":"A package to display colors in project and files.","keywords":["colors","palette","less","sass","scss","css","stylus"],"repository":"https://github.com/abe33/atom-pigments","license":"MIT","engines":{"atom":"\u003e=1.19.0 \u003c2.0.0"},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"provideAutocomplete"}},"pigments.api":{"versions":{"1.0.0":"provideAPI"}}},"consumedServices":{"color-picker":{"versions":{"1.0.0":"consumeColorPicker"}},"pigments.expressions.colors":{"versions":{"1.0.0":"consumeColorExpressions"}},"pigments.expressions.variables":{"versions":{"1.0.0":"consumeVariableExpressions"}}},"deserializers":{"Palette":"deserializePalette","ColorSearch":"deserializeColorSearch","ColorProject":"deserializeColorProject","ColorProjectElement":"deserializeColorProjectElement","VariablesCollection":"deserializeVariablesCollection"},"viewProviders":["pigmentsViewProvider"],"configSchema":{"traverseIntoSymlinkDirectories":{"type":"boolean","default":false},"sourceNames":{"type":"array","default":["**/*.css","**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"description":"Glob patterns of files to scan for variables.","items":{"type":"string"}},"ignoredNames":{"type":"array","default":["vendor/*","node_modules/*","spec/*","test/*"],"description":"Glob patterns of files to ignore when scanning the project for variables.","items":{"type":"string"}},"ignoredBufferNames":{"type":"array","default":[],"description":"Glob patterns of files that won't get any colors highlighted","items":{"type":"string"}},"extendedSearchNames":{"type":"array","default":["**/*.css"],"description":"When performing the `find-colors` command, the search will scans all the files that match the `sourceNames` glob patterns and the one defined in this setting."},"supportedFiletypes":{"type":"array","default":["*"],"description":"An array of file extensions where colors will be highlighted. If the wildcard `*` is present in this array then colors in every file will be highlighted."},"filetypesForColorWords":{"type":"array","default":["css","less","styl","stylus","sass","scss"],"description":"An array of file extensions where color values such as `red`, `azure` or `whitesmoke` will be highlighted. By default CSS and CSS pre-processors files are supported.\n\nYou can use `none` or whatever value that doesn't match a file extension to completely prevent color words from being highlighted."},"ignoredScopes":{"type":"array","default":[],"description":"Regular expressions of scopes in which colors are ignored. For example, to ignore all colors in comments you can use `\\.comment`.","items":{"type":"string"}},"autocompleteScopes":{"type":"array","default":[".source.css",".source.css.less",".source.sass",".source.css.scss",".source.stylus"],"description":"The autocomplete provider will only complete color names in editors whose scope is present in this list.","items":{"type":"string"}},"extendAutocompleteToVariables":{"type":"boolean","default":false,"description":"When enabled, the autocomplete provider will also provides completion for non-color variables."},"extendAutocompleteToColorValue":{"type":"boolean","default":false,"description":"When enabled, the autocomplete provider will also provides color value."},"autocompleteSuggestionsFromValue":{"type":"boolean","default":false,"description":"When enabled, the autocomplete provider will suggests color variables from hexadecimal values."},"maxDecorationsInGutter":{"type":"integer","default":100,"min":1,"max":100,"description":"Sets a limit on how many decorations can be displayed in the gutter for the same row"},"markerType":{"type":"string","default":"native-background","enum":["native-background","native-underline","native-outline","native-dot","native-square-dot","gutter"]},"sassShadeAndTintImplementation":{"type":"string","default":"compass","enum":["compass","bourbon"],"description":"Sass doesn't provide any implementation for shade and tint function, and Compass and Bourbon have different implementation for these two methods. This setting allow you to chose which implementation to use."},"sortPaletteColors":{"type":"string","default":"none","enum":["none","by name","by color"]},"groupPaletteColors":{"type":"string","default":"none","enum":["none","by file"]},"mergeColorDuplicates":{"type":"boolean","default":false},"delayBeforeScan":{"type":"integer","default":500,"description":"Number of milliseconds after which the current buffer will be scanned for changes in the colors. This delay starts at the end of the text input and will be aborted if you start typing again during the interval."},"ignoreVcsIgnoredPaths":{"type":"boolean","default":true,"title":"Ignore VCS Ignored Paths"},"notifyReloads":{"type":"boolean","default":true,"description":"Whether Pigments will use a notification once the `Pigments: Reload` command completes or not. The notification includes informations about the result of the reload."},"dismissableReloadNotifications":{"type":"boolean","default":true,"description":"Whether the reload notifications should be dismissed by a user action or not."}},"dependencies":{"underscore-plus":"1.x","event-kit":"2.x","fs-plus":"2.x","async":"0.2.6","css-color-function":"0.1.x","minimatch":"0.3.x","delegato":"^1.0.0","atom-utils":"\u003e=0.9.2"},"devDependencies":{"temp":"~0.8.1"}}},{"name":"git-plus","repository":{"type":"git","url":"https://github.com/akonwi/git-plus"},"downloads":2629505,"stargazers_count":2609,"releases":{"latest":"8.7.1"},"readme":"# Git-Plus package ![Build Status](https://travis-ci.org/akonwi/git-plus.svg?branch=master)\n\n[![forthebadge](http://forthebadge.com/images/badges/uses-git.svg)](http://forthebadge.com)\n\nvim-fugitive like package for atom. make commits and other git things without the terminal\n\n![A screenshot of your spankin' package](https://raw.githubusercontent.com/akonwi/git-plus/master/commit.gif)\n\n## Usage\n\n# IMPORTANT:\n\nMake sure your gitconfig file is configured. You must configure at least the `user.email` and `user.name` variables.\n\nAlso, the package currently favors an ssh setup that doesn't expect to be prompted for credentials in order to push/pull, .etc. Github has a guide to help you set that up [here](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\n\nIf you are on a Windows machine, I recommend checking out [this thread](https://github.com/akonwi/git-plus/issues/224) if you have issues pushing/pulling from a remote repository with this package. I also don't have the means to do my own user testing in a windows environment so I won't be immediately able to help troubleshoot windows problems.\n\n### Showing the Git-Plus Palette\n\n\u003e - `Cmd-Shift-H` on MacOS\n\u003e - `Ctrl-Shift-H` on Windows + Linux\n\u003e - `Git Plus: Menu` on the atom command palette.\n\n### Push/Pull/Fetch notifications\n\nNotifications will appear in a console output above the status bar.\nThis view can be toggled by clicking the 'git+' icon in the bottom right of the status bar.\n\n![screenshot](https://dl.dropboxusercontent.com/s/lla1cba1ycxesdi/status-bar-icon.png.png)\n\n### Auto-Fetch\n\nKeeps your local repo bang up to date by automatically fetching from all remotes in the background every minute by default. But this can be set to any interval up to an hour, or disabled if you prefer. A notification can also be set to keep you informed.\n\n### Commands\n\n_Commands are accessible for keybindings by dasherizing the command title. Add your own keybindings in your ~/.atom/keymap.cson file_\n\n\u003e Git Add == `git-plus:add`\n\n\u003e Git Add All Commit And Push == `git-plus:add-all-commit-and-push`\n\n**Note: The following list of commands is not exhaustive. If what you want isn't a feature, you can use `Git Run` and enter the command.**\n\n| Command                       | Effect                                                                                                                                                  |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `Git Run`                     | Execute a command manually by typing it **without** the git part. ex. `fetch --all`                                                                     |\n| `Git Status`                  | Show current status.                                                                                                                                    |\n| `Git Add`                     | Add the current file to the index.                                                                                                                      |\n| `Git Add All`                 | Adds all files to the index (ex. `git add .`).                                                                                                          |\n| `Git Commit`                  | Commit the staged changes. Git-Plus will show an editor for the commit message. To make the commit, save the file. To cancel the commit, close the tab. |\n| `Git Add And Commit`          | Stages the current file before preparing a commit. (`Git add all` and `Git commit` run in succession)                                                   |\n| `Git Add All and Commit`      | Stages all changes before preparing a commit. (`Git add all` and `Git commit` in succession)                                                            |\n| `Git Add And Commit And Push` | Commit currently open file and push to a remote repo.                                                                                                   |\n| `Git Add All Commit And Push` | Commit all changes and push to a remote repo.                                                                                                           |\n| `Git Commit Amend`            | Amend the previous commit.                                                                                                                              |\n| `Git Checkout Current File`   | Undo changes and reset the current file to HEAD.                                                                                                        |\n| `Git Checkout`_`[ref]`_       | Change to another ref (branch or tag).                                                                                                                  |\n| `Git Checkout New branch`     | Create a new branch.                                                                                                                                    |\n| `Git Diff [All]`              | Show the diff of the current file, or all files. The diff can either be against the staged or un-staged tree, as selected in the options.               |\n| `Git Diff Branches`           | Show the diff of the current branch against another branch.                                                                                             |\n| `Git Diff Branch Files`       | Show the diff of the current branch file against another branch version.                                                                                |\n| `Git` _`[Push⎮Pull]`_         | Push to or pull from a remote repo. If you have multiple remote repos, you can choose which to push to or pull from.                                    |\n| `Git Remove [current file]`   | `git rm` the current file or open an selector to select the files to remove. You can select multiple files at once.                                     |\n| `Git Log [Current File]`      | Show the commit history [for the current file] and show display the selected commit.                                                                    |\n| `Git Show`                    | Show the specified object, for example `HEAD`, `HEAD~2`,`3925a0d`, `origin/master` or `v2.7.3`.                                                         |\n| `Git Open Changed Files`      | Open tabs with all added, modified or renamed files.                                                                                                    |\n| `Git Tags`                    | Operate on tags individually. There are options to add, show, push, checkout, verify, and delete.                                                       |\n| `Manage Stashes`              | Similar to `Git Tags`. There are options to apply, pop, and drop.                                                                                       |\n\n### Select lists that allow selecting multiple options\n\nCommands like `Stage hunk` and `Cherry-Pick` provide a list with the ability to select multiple options.\nIn this view, there are 'cancel' and 'apply/complete' buttons. The `esc` key can be used to cancel and\nthe 'confirm' option can be invoked with `shift-enter` or `ctrl-enter`.\n\n### Commit Window\n\nTo change where the commit window appears go to settings and find\n![screenshot](http://imgur.com/cdc7M5p.png)\n\n### Experimental Features\n\nIf you would like to use experimental features, enable them in the package settings.\n\n- Custom Commands\n\n  \u003e If enabled, you can define your own commands in your atom `init.coffee` or `init.js` file. These commands will appear in both the atom command palette as well as the Git-Plus command palette. Just like any other commands, you can define keybindings for them as well.\n\n  \u003e Example command for undoing the last commit:\n\n  ```coffeescript\n  # In init.coffee\n  atom.packages.onDidActivateInitialPackages () -\u003e\n  if gitPlus = atom.packages.getActivePackage('git-plus')?.mainModule.provideService()\n    gitPlus.registerCommand 'atom-text-editor', 'custom-git-commands:undo-last-commit', -\u003e\n      gitPlus.getRepo() # If there are multiple repos in the project, you will be prompted to select which to use\n      .then (repo) -\u003e gitPlus.run repo, 'reset HEAD~1'\n  ```\n\n  \u003e The name of the command in the Git-plus palette will be the undasherized version of what you provided -\u003e 'Undo Last Commit'.\n\n  \u003e _Please beware of giving your commands the same name(undo-last-commit) as existing commands. They will appear as duplicates in the Git-plus palette._\n\n  \u003e Check out some commands [here](https://github.com/akonwi/git-plus/wiki/Custom-Commands-Snippets)\n\n- Stage Files Beta\n  \u003e When enabled, the 'Unstage Files' and 'Stage Files' commands will be merged into one view where the staged status of multiple files can be toggled.\n\n## Contributing\n\n1.  Fork it\n2.  Create your feature branch (`git checkout -b my-new-feature`)\n3.  Write tests\n4.  Make your changes\n5.  Run `npm test`\n6.  Commit your changes\n7.  Push to the branch (`git push origin my-new-feature`)\n8.  Create new Pull Request\n","metadata":{"name":"git-plus","main":"./lib/git-plus","version":"8.7.1","description":"Do git things without the terminal","keywords":["git"],"providedServices":{"git-plus":{"description":"Execute git commands","versions":{"1.0.0":"provideService"}}},"scripts":{"test":"eslint --fix \"lib/**/*.js\" \"spec/**/*.js\" \u0026\u0026 apm test","debug":"atom-transpiler-debug-tool"},"deserializers":{"git-plus/output-view":"deserializeOutputView"},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}},"autosave":{"versions":{"1.0.0":"consumeAutosave"}},"tree-view":{"versions":{"1.0.0":"consumeTreeView"}}},"repository":"https://github.com/akonwi/git-plus","license":"MIT","engines":{"atom":"\u003e= 1.28"},"prettier":{"printWidth":100},"atomTranspilers":[{"glob":"{lib,spec}/**/*.js","transpiler":"atom-babel6-transpiler","options":{"babel":{"presets":["env","react"],"plugins":["transform-object-rest-spread",["transform-class-properties",{"spec":true}]],"babelrc":false}}},{"transpiler":"atom-ts-transpiler","glob":"{!(node_modules)/**/,}*.ts?(x)","options":{"compilerOptions":{},"cacheKeyFiles":[],"verbose":false}}],"dependencies":{"@babel/polyfill":"^7.0.0-beta.51","@types/atom":"^1.31.0","@types/react":"^16.7.13","ansi-to-html":"^0.4.1","atom-babel6-transpiler":"^1.2.0","atom-notify":"^1.1.0","atom-select-list":"^0.7.1","atom-space-pen-views":"^2.0.3","atom-ts-transpiler":"^1.5.2","babel-plugin-transform-class-properties":"^6.24.1","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","classnames":"^2.2.6","fs-plus":"^2.2.0","fuzzaldrin":"^1.2.0","linkify-urls":"^2.0.0","node-emoji":"^1.8.1","react":"^16.6.3","react-dom":"^16.6.3","typescript":"^3.2.2","underscore-plus":"^1.6.6"},"devDependencies":{"atom-transpiler-debug-tool":"^1.0.5","babel-eslint":"^8.2.5","eslint":"^5.0.1","eslint-plugin-react":"^7.10.0","lint":"^1.1.2","prettier":"^1.13.6","quibble":"^0.3.0","tslint":"^5.11.0"}}},{"name":"autocomplete-python","repository":{"type":"git","url":"https://github.com/autocomplete-python/autocomplete-python"},"downloads":2447289,"stargazers_count":979,"releases":{"latest":"1.16.0"},"readme":"# Python Autocomplete Package [![Build Status](https://travis-ci.org/autocomplete-python/autocomplete-python.svg?branch=master)](https://travis-ci.org/autocomplete-python/autocomplete-python)\n\nPython packages, variables, methods and functions with their arguments autocompletion in [Atom](http://atom.io) powered by your choice of [Jedi](https://github.com/davidhalter/jedi) or [Kite](https://kite.com).\n\n_Please note that this package is sponsored by Kite._  More info is provided during the install screens of autocomplete-python.\n\nSee [releases](https://github.com/sadovnychyi/autocomplete-python/releases) for release notes.\n\nJedi-driven release notes follow.  For more about using the Kite completions engine see [kite.com](https://kite.com).\n\n![Demo](https://cloud.githubusercontent.com/assets/193864/12288427/61fe2114-ba0f-11e5-9832-98869180d87f.gif)\n\n# Features\n\n* Works with :apple: Mac OSX, :penguin: Linux and :checkered_flag: Windows.\n* Works with both :snake: Python 2 and 3.\n* Automatic lookup of virtual environments inside of your projects.\n* Configurable additional packages to include for completions.\n* Prints first N characters of statement value while completing variables.\n* Prints function arguments while completing functions.\n* Go-to-definition functionality, by default on `Alt+Cmd+G`/`Ctrl+Alt+G`. Thanks to [@patrys](https://github.com/patrys) for idea and implementation.\n* Method override functionality. Available as `override-method` command. Thanks to [@pchomik](https://github.com/pchomik) for idea and help.\n* If you have [Hyperclick](https://atom.io/packages/hyperclick) installed – you can click on anything to go-to-definition\n  ![sample](https://cloud.githubusercontent.com/assets/193864/10814177/17fb8bce-7e5f-11e5-8285-6b0100b3a0f8.gif)\n\n* Show usages of selected object\n  ![sample](https://cloud.githubusercontent.com/assets/193864/12263525/aff07ad4-b96a-11e5-949e-598e943b0190.gif)\n\n* Rename across multiple files. It will not touch files outside of your project, but it will change VCS ignored files. I'm not responsible for any broken projects without VCS because of this.\n  ![sample](https://cloud.githubusercontent.com/assets/193864/12288191/f448b55a-ba0c-11e5-81d7-31289ef5dbba.gif)\n\n# Configuration\n\n* If using a [virtualenv](https://virtualenv.pypa.io/en/latest/) with third-party packages, everything should \"just work\", but if it's not – use the `Python Executable Paths` and/or `Extra Paths For Packages` configuration options to specify the virtualenv's site-packages. Or launch Atom from the [activated virtualenv](https://virtualenv.pypa.io/en/latest/userguide.html#activate-script) to get completion for your third-party packages\n* Be sure to check package settings and adjust them. Please read them carefully before creating any new issues\n  * Set path to python executable if package cannot find it automatically\n  * Set extra path if package cannot autocomplete external python libraries\n  * Select one of autocomplete function parameters if you want function arguments to be completed\n\n  ![image](https://cloud.githubusercontent.com/assets/193864/11631369/aafb34b4-9d3c-11e5-9a06-e8712a21474e.png)\n\n\n# Common problems\n\n* \"Error: spawn UNKNOWN\" on Windows\n  * Solution: Find your python executable and uncheck the \"Run this program as an administrator\". See issue [#22](https://github.com/sadovnychyi/autocomplete-python/issues/22)\n* You have a separated folder for virtualenvs (e.g. by using `virtualenvwrapper`) and all your virtualenvs are stored in e.g. `~/.virtualenvs/`\n  * Create symlink to venv from your project root\n    * OR\n  * Add virtualenv folder as additional project root\n    * OR\n  * Use a virtualenv with the same name as the folder name of your project and use $PROJECT_NAME variable to set path to python executable.\n  You can use same variable to set extra paths as well. For example:\n  ```\n  /Users/name/.virtualenvs/$PROJECT_NAME/bin/python3.4\n  ```\n  * See issue [#143](https://github.com/sadovnychyi/autocomplete-python/issues/143)\n* No argument completion after I type left parenthesis character\n  * Likely this is because you have non standard keyboard layout.\n  Try to install the keyboard-localization package from: https://atom.io/packages/keyboard-localization\n  and use keymap generator to check what unicode character being generated after you type `(`.\n  Currently we trigger argument completion only on `U+0028`, `U+0038` and `U+0039`.\n","metadata":{"name":"autocomplete-python","main":"./lib/main","version":"1.16.0","description":"Python completions for packages, variables, methods, functions, with their arguments. Powered by your choice of Jedi or Kite.","repository":"git@github.com:autocomplete-python/autocomplete-python.git","license":"GPL","engines":{"atom":"\u003e=0.194.0 \u003c2.0.0"},"dependencies":{"atom-slick":"^2.0.0","atom-space-pen-views":"~2.1.0","fuzzaldrin-plus":"^0.3.1","kite-installer":"=3.15.0","selector-kit":"^0.1","space-pen":"^5.1.2","underscore":"^1.8.3","mixpanel":"^0.5.0"},"package-dependencies":{},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"getProvider"}},"hyperclick.provider":{"versions":{"0.0.0":"getHyperclickProvider"}}},"consumedServices":{"snippets":{"versions":{"0.1.0":"consumeSnippets"}},"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"contributors":[{"name":"Dmitry Sadovnychyi","email":"autocomplete-python@dmit.ro"},{"name":"Daniel Hung","email":"daniel@kite.com"}],"bugs":{"url":"https://github.com/autocomplete-python/autocomplete-python/issues"},"keywords":["python","autocomplete","jedi"]}},{"name":"color-picker","repository":{"type":"git","url":"https://github.com/thomaslindstrom/color-picker"},"downloads":2115933,"stargazers_count":3156,"releases":{"latest":"2.3.0"},"readme":"# A Color Picker for Atom\n\n[![apm](https://img.shields.io/apm/v/color-picker.svg?style=flat-square)]() [![apm](https://img.shields.io/apm/dm/color-picker.svg?style=flat-square)]()\n\nRight click and select `Color Picker`, or hit `CMD-SHIFT-C`/`CTRL-ALT-C` to open it. Currently reads `HEX`, `HEXa`, `RGB`, `RGBa`, `HSL`, `HSLa`, `HSV`, `HSVa`, `VEC3` and `VEC4` colors – and is able to convert between the formats.\n\nIt also inspects `Sass` and `LESS` color variables. Just open the `Color Picker` with the cursor at a variable and it'll look up the definition for you. From there, you can click the definition and go directly to where it's defined.\n\n## Preview\n\n![Color Picker in action](https://github.com/thomaslindstrom/color-picker/raw/master/preview.gif)\n\n## Settings\n\nOpen `Atom Settings`, go to `Packages` in the left hand sidebar, and press `Settings` on `color-picker` to open the list of settings available for the Color Picker.\n\n- **Abbreviate Color Values:** If possible, abbreviate color values, like for example “0.3” to “.3”,  “#ffffff” to “#fff” and “rgb(0, 0, 0)” to “rgb(0,0,0)”.\n- **Automatically Replace Color:** Replace selected color automatically on change. Works well with as-you-type CSS reloaders.\n- **Preferred Color Format:** On open, the Color Picker will show a color in this format.\n- **Serve a random color on open:** If the Color Picker doesn't get an input color, it serves a completely random color.\n- **Trigger key:** Decide what trigger key should open the Color Picker. `CMD-SHIFT-{TRIGGER_KEY}` and `CTRL-ALT-{TRIGGER_KEY}`. Requires a restart.\n- **Uppercase Color Values:** If sensible, uppercase the color value. For example, “#aaa” becomes “#AAA”.\n\n## To do\n\n- Selectable list of the current project color variables\n","metadata":{"name":"color-picker","main":"./lib/ColorPicker","version":"2.3.0","private":true,"description":"Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it.","repository":{"type":"git","url":"https://github.com/thomaslindstrom/color-picker"},"keywords":["colors","design","ui"],"license":"MIT","engines":{"atom":"\u003e=1.2.4"},"readmeFilename":"README.md","bugs":{"url":"https://github.com/thomaslindstrom/color-picker/issues"},"homepage":"https://github.com/thomaslindstrom/color-picker","providedServices":{"color-picker":{"versions":{"1.0.0":"provideColorPicker"}}}}},{"name":"script","repository":{"type":"git","url":"https://github.com/rgbkrk/atom-script"},"downloads":2077146,"stargazers_count":1553,"releases":{"latest":"3.18.1"},"readme":"# Script\n\n[![Build Status](http://img.shields.io/travis/rgbkrk/atom-script.svg?style=flat)](https://travis-ci.org/rgbkrk/atom-script)\n\n**Run code in Atom!**\n\nRun scripts based on file name, a selection of code, or by line number.\n\n![](https://cloud.githubusercontent.com/assets/1694055/3226201/c458acbc-f067-11e3-84a0-da27fe334f5e.gif)\n\nCurrently supported grammars are:\n\n| Grammar                             | File Based | Selection Based | Required Package              | Required in [`PATH`]      | Notes                                                                                                                                                                                                                                                           |\n|:------------------------------------|:-----------|:----------------|:------------------------------|:--------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1C (BSL)                            | Yes        |                 | [language-1c-bsl]             | [`oscript`]               |                                                                                                                                                                                                                                                                 |\n| [Ansible]                           | Yes        |                 | [language-ansible]            | `ansible-playbook`        |                                                                                                                                                                                                                                                                 |\n| [AutoHotKey]                        | Yes        | Yes             | [language-autohotkey]         | `AutoHotKey.exe`          |                                                                                                                                                                                                                                                                 |\n| [AppleScript]                       | Yes        | Yes             | [language-applescript]        | `osascript`               |                                                                                                                                                                                                                                                                 |\n| [Babel] [ES6] JS                    | Yes        | Yes             | [language-babel]              | `node`                    |                                                                                                                                                                                                                                                                 |\n| Bash                                | Yes        | Yes             |                               |                           | Runs if your `SHELL` or `#!` line is `bash`.                                                                                                                                                                                                                    |\n| [Bats] (Bash Automated Test System) | Yes        | Yes             | [language-bats]               | `bats`                    |                                                                                                                                                                                                                                                                 |\n| Windows [Batch] (`cmd.exe`)         | Yes        |                 | [language-batch]/[file]       |                           |                                                                                                                                                                                                                                                                 |\n| [Behat]                             | Yes        |                 | [behat-atom]                  | `behat`                   |                                                                                                                                                                                                                                                                 |\n| [BuckleScript]                      | Yes        | Yes             | [bs-platform]                 | `bsc`                     |                                                                                                                                                                                                                                                                 |\n| C                                   | Yes        | Yes             |                               | `xcrun clang`/`cc`        | Available only on macOS and Linux.                                                                                                                                                                                                                              |\n| C#                                  | Yes        | Yes             |                               | `csc.exe`                 |                                                                                                                                                                                                                                                                 |\n| [C# Script]                         | Yes        | Yes             |                               | [`scriptcs`]              |                                                                                                                                                                                                                                                                 |\n| C++                                 | Yes        | Yes             |                               | `xcrun clang++`/`g++`     | Available only on macOS and Linux. Run with `-std=c++14`.                                                                                                                                                                                                       |\n| [Clojure]                           | Yes        | Yes             |                               | `lein exec`               | Requires [Leiningen] with the [lein-exec] plugin.                                                                                                                                                                                                               |\n| [CoffeeScript] ([Literate])         | Yes        | Yes             |                               | `coffee`                  |                                                                                                                                                                                                                                                                 |\n| [Crystal]                           | Yes        | Yes             | [language-crystal-actual]     | `crystal`                 |                                                                                                                                                                                                                                                                 |\n| [Cucumber] ([Gherkin])              | Yes        |                 | [language-gherkin]            | `cucumber`                |                                                                                                                                                                                                                                                                 |\n| [D]                                 | Yes        | Yes             | [language-d]                  | `rdmd`                    |                                                                                                                                                                                                                                                                 |\n| [Dart]                              | Yes        | Yes             | [dartlang]                    | `dart`                    |                                                                                                                                                                                                                                                                 |\n| [DOT] ([Graphviz])                  | Yes        | Yes             | [language-dot]                | `dot`                     |                                                                                                                                                                                                                                                                 |\n| [Elixir]                            | Yes        | Yes             | [language-elixir]             | `elixir`                  |                                                                                                                                                                                                                                                                 |\n| [Erlang]                            |            | Yes             | [language-erlang]             | `erl`                     | Limited selection based runs only (see [#70]).                                                                                                                                                                                                                  |\n| [F*]                                | Yes        |                 | [atom-fstar]                  | `fstar`                   |                                                                                                                                                                                                                                                                 |\n| [F#]                                | Yes        |                 | [language-fsharp]             | `fsharpi`/`fsi.exe`       |                                                                                                                                                                                                                                                                 |\n| [Fish]                              | Yes        | Yes             | [language-fish-shell]         | `fish`                    |                                                                                                                                                                                                                                                                 |\n| [Forth]                             | Yes        |                 | [language-forth]              | `gforth`                  |                                                                                                                                                                                                                                                                 |\n| [Fortran]                           | Yes        |                 | [language-fortran]            | [`gfortran`]              |                                                                                                                                                                                                                                                                 |\n| [Gnuplot]                           | Yes        |                 | [language-gnuplot-atom]       | `gnuplot`                 |                                                                                                                                                                                                                                                                 |\n| [Go]                                | Yes        |                 |                               | `go`                      |                                                                                                                                                                                                                                                                 |\n| [Groovy]                            | Yes        | Yes             | [language-groovy]             | `groovy`                  |                                                                                                                                                                                                                                                                 |\n| [Haskell] ([Literate][lit-hskl])    | Yes        | Yes             | [language-haskell]            | `runhaskell`/[`ghc`]      |                                                                                                                                                                                                                                                                 |\n| HTML                                | Yes        |                 |                               |                           | Opens the current HTML file in your default browser.                                                                                                                                                                                                            |\n| [Hy]                                | Yes        | Yes             | [language-hy]                 | `hy.exe`                  |                                                                                                                                                                                                                                                                 |\n| [IcedCoffeeScript]                  | Yes        | Yes             | [language-iced-coffee-script] | `iced`                    |                                                                                                                                                                                                                                                                 |\n| [Inno Setup]                        | Yes        |                 | [language-innosetup]          | `ISCC.exe`                |                                                                                                                                                                                                                                                                 |\n| [Idris]                             | Yes        |                 | [language-idris]              | `idris`                   |                                                                                                                                                                                                                                                                 |\n| [io]                                | Yes        | Yes             | [atom-language-io]            | `io`                      |                                                                                                                                                                                                                                                                 |\n| Java                                | Yes        |                 |                               | `*\\jdk1.x.x_xx\\bin`       | Project directory should be the source directory; subfolders imply packaging.                                                                                                                                                                                   |\n| Javascript                          | Yes        | Yes             |                               | `node`                    |                                                                                                                                                                                                                                                                 |\n| JavaScript for Automation ([JXA])   | Yes        | Yes             | [language-javascript-jxa]     | `osascript -l JavaScript` | Available on macOS only.                                                                                                                                                                                                                                        |\n| [Jolie]                             | Yes        |                 | [language-jolie]              | `jolie`                   |                                                                                                                                                                                                                                                                 |\n| [Julia]                             | Yes        | Yes             | [language-julia]              | `julia`                   |                                                                                                                                                                                                                                                                 |\n| [Kotlin]                            | Yes        | Yes             | [language-kotlin]             | `kotlinc`                 |                                                                                                                                                                                                                                                                 |\n| [LAMMPS]                            | Yes        |                 | [language-lammps]             | `lammps`                  | Available only on macOS and Linux.                                                                                                                                                                                                                              |\n| [LaTeX]                             | Yes        |                 | [language-latex]              | [`latexmk`]               |                                                                                                                                                                                                                                                                 |\n| [LilyPond]                          | Yes        |                 | [atlilypond]                  | `lilypond`                |                                                                                                                                                                                                                                                                 |\n| [Lisp]                              | Yes        | Yes             | [language-lisp]               | [`sbcl`]                  | Selection based runs are limited to a single line.                                                                                                                                                                                                              |\n| [LiveScript]                        | Yes        | Yes             | [language-livescript]         | `lsc`                     |                                                                                                                                                                                                                                                                 |\n| [Lua]                               | Yes        | Yes             | [language-lua]\\[[-wow]\\]      | `lua`                     |                                                                                                                                                                                                                                                                 |\n| [Make]file                          | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| [MATLAB]                            | Yes        | Yes             | [language-matlab]             | `matlab`                  |                                                                                                                                                                                                                                                                 |\n| [MIPS]                              | Yes        |                 | [language-mips]               | [`spim`]                  |                                                                                                                                                                                                                                                                 |\n| [MongoDB]                           | Yes        | Yes             | [language-mongodb]            | `mongo`                   |                                                                                                                                                                                                                                                                 |\n| [MoonScript]                        | Yes        | Yes             | [language-moonscript]         | `moon`                    |                                                                                                                                                                                                                                                                 |\n| [NCL]                               | Yes        | Yes             | [language-ncl]                | `ncl`                     | Scripts must end with an `exit` command for file based runs.                                                                                                                                                                                                    |\n| [newLISP]                           | Yes        | Yes             | [language-newlisp]            | `newlisp`                 |                                                                                                                                                                                                                                                                 |\n| [Nim]\\[[Script][nimscript]\\]        | Yes        |                 | [language-nim]                | `nim`                     |                                                                                                                                                                                                                                                                 |\n| [NSIS]                              | Yes        | Yes             | [language-nsis]               | `makensis`                |                                                                                                                                                                                                                                                                 |\n| Objective-C[++]                     | Yes        |                 |                               | `xcrun clang`[`++`]       | Available on macOS only.                                                                                                                                                                                                                                        |\n| [OCaml]                             | Yes        |                 | [language-ocaml]              | `ocaml`                   |                                                                                                                                                                                                                                                                 |\n| [Octave]                            | Yes        | Yes             | [language-matlab]             | `octave`                  |                                                                                                                                                                                                                                                                 |\n| [Oz]                                | Yes        | Yes             | [language-oz]                 | `ozc`                     |                                                                                                                                                                                                                                                                 |\n| [Pandoc] Markdown                   | Yes        |                 | [language-pfm]                | [`panzer`]                |                                                                                                                                                                                                                                                                 |\n| [Pascal]                            | Yes        | Yes             | [language-pascal]             | `fpc`                     |                                                                                                                                                                                                                                                                 |\n| Perl                                | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| [Perl 6]                            | Yes        | Yes             |                               | `perl6`                   |                                                                                                                                                                                                                                                                 |\n| PHP                                 | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| [PostgreSQL]                        | Yes        | Yes             | [language-pgsql]              | [`psql`]                  | Connects as user `PGUSER` to database `PGDATABASE`. Both default to your operating system's `USERNAME`, but can be set in the process environment or in Atom's [`init` file]: `process.env.PGUSER = {user name}` and `process.env.PGDATABASE = {database name}` |\n| [POV-Ray]                           | Yes        |                 | [atom-language-povray]        | `povengine`/`povray`      |                                                                                                                                                                                                                                                                 |\n| [PowerShell]                        | Yes        | Yes             | [language-powershell]         | `powershell`              |                                                                                                                                                                                                                                                                 |\n| [Processing]                        | Yes        |                 | [processing-language]         | `processing-java`         |                                                                                                                                                                                                                                                                 |\n| [Prolog]                            | Yes        |                 | [language-prolog]             | `swipl`                   | Scripts must contain a rule with the head `main` (e.g.`main:- parent(X,lucas),writeln(X).`). The script is executed with the goal `main` and exits after the first result is found. The output is produced by the `writeln/1` predicates.                       |\n| [PureScript]                        | Yes        |                 | [language-purescript]         | `pulp`                    |                                                                                                                                                                                                                                                                 |\n| Python                              | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| [R]                                 | Yes        | Yes             | [language-r]                  | `Rscript`                 |                                                                                                                                                                                                                                                                 |\n| [Racket]                            | Yes        | Yes             | [language-racket]             | `racket`                  |                                                                                                                                                                                                                                                                 |\n| [Reason]                            | Yes        | Yes             | [language-reason]             | `rebuild`                 |                                                                                                                                                                                                                                                                 |\n| [Ren'Py]                            | Yes        | No              | [language-renpy]              | `renpy`                   | Runs your project at the root of the current file.                                                                                                                                                                                                              |\n| [Robot Framework]                   | Yes        | No              | [language-robot-framework]    | `robot`                   | The output location depends on the `CWD` behaviour which can be altered in settings.                                                                                                                                                                            |\n| [RSpec]                             | Yes        | Yes             | [language-rspec]              | `rspec`                   |                                                                                                                                                                                                                                                                 |\n| Ruby                                | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| Ruby on [Rails]                     | Yes        | Yes             |                               |                           |                                                                                                                                                                                                                                                                 |\n| [Rust]                              | Yes        |                 | [language-rust]               | `rustc`                   |                                                                                                                                                                                                                                                                 |\n| [Sage]                              | Yes        | Yes             | [language-sage]               | `sage`                    |                                                                                                                                                                                                                                                                 |\n| [Sass]/SCSS                         | Yes        |                 |                               | `sass`                    |                                                                                                                                                                                                                                                                 |\n| [Scala]                             | Yes        | Yes             | [language-scala]              | `scala`                   |                                                                                                                                                                                                                                                                 |\n| [Scheme]                            | Yes        | Yes             | [langauge-scheme]             | [`guile`]                 |                                                                                                                                                                                                                                                                 |\n| Shell Script                        | Yes        | Yes             |                               | `SHELL`                   | Runs according to your default `SHELL`, or `#!` line.                                                                                                                                                                                                           |\n| [Standard ML]                       | Yes        |                 | [language-sml]                | `sml`                     |                                                                                                                                                                                                                                                                 |\n| [Stata]                             | Yes        | Yes             | [language-stata]              | `stata`                   |                                                                                                                                                                                                                                                                 |\n| [Swift]                             | Yes        |                 | [language-swift]              | `swift`                   |                                                                                                                                                                                                                                                                 |\n| [Tcl]                               | Yes        | Yes             | [language-tcltk]              | `tclsh`                   |                                                                                                                                                                                                                                                                 |\n| [TypeScript]                        | Yes        | Yes             |                               | [`ts-node`]               |                                                                                                                                                                                                                                                                 |\n| [VBScript]                          | Yes        | Yes             | [language-vbscript]           | `cscript`                 |                                                                                                                                                                                                                                                                 |\n| [Zsh]                               | Yes        | Yes             |                               |                           | Runs if your `SHELL` or `#!` line is `zsh`.                                                                                                                                                                                                                     |\n\n[-wow]:                         https://atom.io/packages/language-lua-wow\n[#70]:                          https://github.com/rgbkrk/atom-script/pull/70\n[`gfortran`]:                   https://gcc.gnu.org/wiki/GFortran\n[`ghc`]:                        https://haskell.org/ghc\n[`guile`]:                      https://gnu.org/software/guile\n[`init` file]:                  http://flight-manual.atom.io/hacking-atom/sections/the-init-file\n[`latexmk`]:                    https://ctan.org/pkg/latexmk\n[`oscript`]:                    http://oscript.io\n[`panzer`]:                     https://github.com/msprev/panzer#readme\n[`PATH`]:                       https://en.wikipedia.org/wiki/PATH_(variable)\n[`psql`]:                       https://postgresql.org/docs/current/static/app-psql.html\n[`pulp`]:                       https://github.com/purescript-contrib/pulp#readme\n[`sbcl`]:                       http://sbcl.org\n[`scriptcs`]:                   http://scriptcs.net\n[`spim`]:                       http://spimsimulator.sourceforge.net\n[`ts-node`]:                    https://github.com/TypeStrong/ts-node#readme\n[Ansible]:                      https://ansible.com\n[AppleScript]:                  https://developer.apple.com/library/content/documentation/AppleScript/Conceptual/AppleScriptX/Concepts/ScriptingOnOSX.html#//apple_ref/doc/uid/20000032-BABEBGCF\n[atlilypond]:                   https://atom.io/packages/atlilypond\n[atom-fstar]:                   https://github.com/FStarLang/atom-fstar#readme\n[atom-language-io]:             https://atom.io/packages/atom-language-io\n[atom-language-povray]:         https://atom.io/packages/atom-language-povray\n[AutoHotKey]:                   https://autohotkey.com\n[babel]:                        https://babeljs.io\n[batch]:                        https://ss64.com/nt\n[bats]:                         https://github.com/sstephenson/bats#bats-bash-automated-testing-system#readme\n[behat-atom]:                   https://atom.io/packages/behat-atom\n[behat]:                        http://docs.behat.org/en/v2.5/guides/6.cli.html\n[bs-platform]:                  https://npm.im/package/bs-platform\n[bucklescript]:                 https://bucklescript.github.io/bucklescript\n[C# Script]:                    http://csscript.net\n[clojure]:                      https://clojure.org\n[coffeescript]:                 http://coffeescript.org\n[crystal]:                      https://crystal-lang.org\n[cucumber]:                     https://cucumber.io\n[D]:                            https://dlang.org\n[dart]:                         https://dartlang.org\n[dartlang]:                     https://atom.io/packages/dartlang\n[dot]:                          http://graphviz.org/content/dot-language\n[elixir]:                       https://elixir-lang.org\n[erlang]:                       https://erlang.org\n[ES6]:                          https://babeljs.io/learn-es2015\n[F*]:                           https://fstar-lang.org\n[F#]:                           http://fsharp.org\n[file]:                         https://atom.io/packages/language-batchfile\n[fish]:                         https://fishshell.com\n[forth]:                        https://gnu.org/software/gforth\n[fortran]:                      http://fortranwiki.org/fortran/show/Fortran\n[gherkin]:                      https://cucumber.io/docs/reference#gherkin\n[gnuplot]:                      http://gnuplot.info\n[go]:                           https://golang.org\n[graphviz]:                     http://graphviz.org\n[groovy]:                       http://groovy-lang.org\n[haskell]:                      https://haskell.org\n[hy]:                           http://hylang.org\n[icedcoffeescript]:             http://maxtaco.github.io/coffee-script\n[idris]:                        https://idris-lang.org\n[inno setup]:                   http://jrsoftware.org/isinfo.php\n[io]:                           http://iolanguage.org\n[jolie]:                        http://jolie-lang.org\n[julia]:                        https://julialang.org\n[jxa]:                          https://developer.apple.com/library/mac/releasenotes/InterapplicationCommunication/RN-JavaScriptForAutomation/Articles/Introduction.html\n[kotlin]:                       https://kotlinlang.org\n[LAMMPS]:                       http://lammps.sandia.gov\n[langauge-scheme]:              https://atom.io/packages/language-scheme\n[language-1c-bsl]:              https://atom.io/packages/language-1c-bsl\n[language-ansible]:             https://atom.io/packages/language-ansible\n[language-applescript]:         https://atom.io/packages/language-applescript\n[language-autohotkey]:          https://atom.io/packages/language-autohotkey\n[language-babel]:               https://atom.io/packages/language-babel\n[language-batch]:               https://atom.io/packages/language-batch\n[language-bats]:                https://atom.io/packages/language-bats\n[language-crystal-actual]:      https://atom.io/packages/language-crystal-actual\n[language-d]:                   https://atom.io/packages/language-d\n[language-dot]:                 https://atom.io/packages/language-dot\n[language-elixir]:              https://atom.io/packages/language-elixir\n[language-erlang]:              https://atom.io/packages/language-erlang\n[language-fish-shell]:          https://atom.io/packages/language-fish-shell\n[language-forth]:               https://atom.io/packages/language-forth\n[language-fortran]:             https://atom.io/packages/language-fortran\n[language-fsharp]:              https://atom.io/packages/language-fsharp\n[language-gherkin]:             https://atom.io/packages/language-gherkin\n[language-gnuplot-atom]:        https://atom.io/packages/language-gnuplot-atom\n[language-groovy]:              https://atom.io/packages/language-groovy\n[language-haskell]:             https://atom.io/packages/language-haskell\n[language-hy]:                  https://atom.io/packages/language-hy\n[language-iced-coffee-script]:  https://atom.io/packages/language-iced-coffee-script\n[language-idris]:               https://atom.io/packages/language-idris\n[language-innosetup]:           https://atom.io/packages/language-innosetup\n[language-javascript-jxa]:      https://atom.io/packages/language-javascript-jxa\n[language-jolie]:               https://atom.io/packages/language-jolie\n[language-julia]:               https://atom.io/packages/language-julia\n[language-kotlin]:              https://atom.io/packages/language-kotlin\n[language-lammps]:              https://atom.io/packages/language-lammps\n[language-latex]:               https://atom.io/packages/language-latex\n[language-lisp]:                https://atom.io/packages/language-lisp\n[language-livescript]:          https://atom.io/packages/language-livescript\n[language-lua]:                 https://atom.io/packages/language-lua\n[language-matlab]:              https://atom.io/packages/language-matlab\n[language-mips]:                https://atom.io/packages/language-mips\n[language-mongodb]:             https://atom.io/packages/language-mongodb\n[language-moonscript]:          https://atom.io/packages/language-moonscript\n[language-ncl]:                 https://atom.io/packages/language-ncl\n[language-newlisp]:             https://atom.io/packages/language-newlisp\n[language-nim]:                 https://atom.io/packages/language-nim\n[language-nsis]:                https://atom.io/packages/language-nsis\n[language-ocaml]:               https://atom.io/packages/language-ocaml\n[language-oz]:                  https://atom.io/packages/language-oz\n[language-pascal]:              https://atom.io/packages/language-pascal\n[language-pfm]:                 https://atom.io/packages/language-pfm\n[language-pgsql]:               https://atom.io/packages/language-pgsql\n[language-powershell]:          https://atom.io/packages/language-powershell\n[language-prolog]:              https://atom.io/packages/language-prolog\n[language-purescript]:          https://atom.io/packages/language-purescript\n[language-r]:                   https://atom.io/packages/language-r\n[language-racket]:              https://atom.io/packages/language-racket\n[language-reason]:              https://atom.io/packages/language-reason\n[language-renpy]:               https://atom.io/packages/language-renpy\n[language-robot-framework]:     https://atom.io/packages/language-robot-framework\n[language-rspec]:               https://atom.io/packages/language-rspec\n[language-rust]:                https://atom.io/packages/language-rust\n[language-sage]:                https://atom.io/packages/language-sage\n[language-scala]:               https://atom.io/packages/language-scala\n[language-sml]:                 https://atom.io/packages/language-sml\n[language-stata]:               https://atom.io/packages/language-stata\n[language-swift]:               https://atom.io/packages/language-swift\n[language-tcltk]:               https://atom.io/packages/language-tcltk\n[language-vbscript]:            https://atom.io/packages/language-vbscript\n[latex]:                        https://latex-project.org\n[lein-exec]:                    https://github.com/kumarshantanu/lein-exec#readme\n[leiningen]:                    https://leiningen.org\n[lilypond]:                     http://lilypond.org\n[lisp]:                         http://lisp-lang.org\n[lit-hskl]:                     https://wiki.haskell.org/Literate_programming#Haskell_and_literate_programming\n[literate]:                     http://coffeescript.org/#literate\n[livescript]:                   http://livescript.net\n[lua]:                          https://lua.org\n[make]:                         https://gnu.org/software/make/manual/make\n[MATLAB]:                       https://mathworks.com/products/matlab\n[mips]:                         https://imgtec.com/mips\n[mongodb]:                      https://mongodb.com\n[moonscript]:                   https://moonscript.org\n[NCL]:                          https://ncl.ucar.edu\n[newlisp]:                      http://newlisp.org\n[nim]:                          https://nim-lang.org\n[nimscript]:                    https://nim-lang.org/0.11.3/nims.html\n[NSIS]:                         http://nsis.sourceforge.net\n[ocaml]:                        https://ocaml.org\n[octave]:                       https://gnu.org/software/octave\n[oz]:                           https://mozart.github.io\n[pandoc]:                       https://pandoc.org\n[perl 6]:                       https://perl6.org\n[pascal]:                       https://freepascal.org\n[PostgreSQL]:                   https://postgresql.org\n[POV-Ray]:                      http://www.povray.org/\n[powershell]:                   https://docs.microsoft.com/powershell\n[processing-language]:          https://atom.io/packages/processing-language\n[processing]:                   https://processing.org\n[prolog]:                       http://swi-prolog.org\n[purescript]:                   http://purescript.org\n[R]:                            https://r-project.org\n[racket]:                       https://racket-lang.org\n[rails]:                        http://rubyonrails.org\n[reason]:                       https://reasonml.github.io\n[Ren'Py]:                       https://renpy.org\n[robot framework]:              http://robotframework.org\n[rspec]:                        http://rspec.info\n[rust]:                         https://rust-lang.org\n[sage]:                         https://sagemath.org\n[sass]:                         http://sass-lang.com\n[scala]:                        https://scala-lang.org\n[scheme]:                       http://scheme-reports.org\n[Standard ML]:                  http://sml-family.org\n[stata]:                        https://stata.com\n[swift]:                        https://swift.org\n[tcl]:                          https://tcl.tk\n[typescript]:                   https://typescriptlang.org\n[VBScript]:                     https://msdn.microsoft.com/library/t0aew7h6.aspx\n[zsh]:                          http://zsh.org\n\n**NOTE**: Some grammars may require you to install [a custom language package](https://atom.io/search?utf8=✓\u0026q=language).\n\nYou only have to add a few lines in a PR to support another.\n\n## Installation\n\n`apm install script`\n\nor\n\nSearch for `script` within package search in the Settings View.\n\n## Atom can't find node | ruby | python | my socks\n\nMake sure to launch Atom from the console/terminal. This gives atom all your useful environment variables. Additionally, make sure to run it with the project path you need. For example, use\n\n```\natom .\n```\n\nto get it to run with the *current* directory as the default place to run scripts from.\n\nIf you *really* wish to open atom from a launcher/icon, see [this issue for a variety of workarounds that have been suggested](https://github.com/rgbkrk/atom-script/issues/61#issuecomment-37337827).\n\n## Usage\n\nMake sure to run `atom` from the command line to get full access to your environment variables. Running Atom from the icon will launch using launchctl's environment.\n\n**Script: Run** will perform a \"File Based\" run when no text is selected (default).\n\n**Script: Run** while text is selected will perform a \"Selection Based\" run executing just the highlighted code.\n\n**Script: Run by Line Number** to run using the specified line number. **Note** that if you select an entire line this number could be off by one due to the way Atom detects numbers while text is selected.\n\n**Script: Configure Script** should be used to configure command options, program arguments, and environment variables overrides. Environment variables may be input into the options view in the form `VARIABLE_NAME_ONE=value;VARIABLE_NAME_TWO=\"other value\";VARIABLE_NAME_3='test'`.\n\nAlso, in this dialog you can save options as a profile for future use. For example, you can add two profiles, one for `python2.7` and another for `python3` and run scripts with a specified profile, which will be more convinient than entering options every time you want to switch python versions.\n\n**Script: Run with profile** allows you to run scripts with saved profiles. Profiles can be added in **Script: Run Options** dialog.\n\n**Script: Kill Process** will kill the process but leaves the pane open.\n\n**Script: Close View** closes the pane and kills the process.\n\nTo kill everything, click the close icon in the upper right and just go back to\ncoding.\n\n**Script: Copy Run Results** copies everything written to the output pane to the\nclipboard, allowing you to paste it into the editor.\n\n### Command and shortcut reference\n\n| Command                    | macOS                               | Linux/Windows               | Notes                                                                         |\n|:---------------------------|:------------------------------------|:----------------------------|:------------------------------------------------------------------------------|\n| Script: Run                | \u003ckbd\u003ecmd-i\u003c/kbd\u003e                    | \u003ckbd\u003eshift-ctrl-b\u003c/kbd\u003e     | If text is selected a \"Selection Based\" is used instead of a \"File Based\" run |\n| Script: Run by Line Number | \u003ckbd\u003eshift-cmd-j\u003c/kbd\u003e              | \u003ckbd\u003eshift-ctrl-j\u003c/kbd\u003e     | If text is selected the line number will be the last                          |\n| Script: Run Options        | \u003ckbd\u003eshift-cmd-i\u003c/kbd\u003e              | \u003ckbd\u003eshift-ctrl-alt-o\u003c/kbd\u003e | Runs the selection or whole file with the given options                       |\n| Script: Run with profile   | \u003ckbd\u003eshift-cmd-k\u003c/kbd\u003e              | \u003ckbd\u003eshift-ctrl-alt-b\u003c/kbd\u003e | Runs the selection or whole file with the specified profile                   |\n| Script: Close View         | \u003ckbd\u003eesc\u003c/kbd\u003e or \u003ckbd\u003ectrl-w\u003c/kbd\u003e | \u003ckbd\u003eesc\u003c/kbd\u003e              | Closes the script view window                                                 |\n| Script: Kill Process       | \u003ckbd\u003ectrl-c\u003c/kbd\u003e                   | \u003ckbd\u003ectrl-q\u003c/kbd\u003e           | Kills the current script process                                              |\n\n### Replacements\n\nThe following parameters will be replaced in any entry in `args` (command and program arguments). They should all be enclosed in curly brackets `{}`\n\n  * `{FILE_ACTIVE}` - Full path to the currently active file in Atom. E.g. `/home/rgbkrk/atom-script/lib/script.coffee`\n  * `{FILE_ACTIVE_PATH}` - Full path to the folder where the currently active file is. E.g. `/home/rgbkrk/atom-script/lib`\n  * `{FILE_ACTIVE_NAME}` - Full name and extension of active file. E.g., `script.coffee`\n  * `{FILE_ACTIVE_NAME_BASE}` - Name of active file WITHOUT extension. E.g., `script`\n  * `{PROJECT_PATH}` - Full path to the root of the project. This is normally the path Atom has as root. E.g `/home/rgbkrk/atom-script`\n\nParameters are compatible with `atom-build` package.\n\n## Development\n\nThis is an [Open Open Source Project](http://openopensource.org/), which means:\n\n\u003e Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit.\n\nAs for coding and contributing, rely on the atom [contributing guidelines](https://atom.io/docs/latest/contributing).\nThey're pretty sane.\n\n#### Quick and dirty setup\n\n`apm develop script`\n\nThis will clone the `script` repository to `~/github` unless you set the\n`ATOM_REPOS_HOME` environment variable.\n\n#### I already cloned it!\n\nIf you cloned it somewhere else, you'll want to use `apm link --dev` within the\npackage directory, followed by `apm install` to get dependencies.\n\n### Workflow\n\nAfter pulling upstream changes, make sure to run `apm update`.\n\nTo start hacking, make sure to run `atom --dev` from the package directory.\nCut a branch while you're working then either submit a Pull Request when done\nor when you want some feedback!\n","metadata":{"name":"script","main":"./lib/script","version":"3.18.1","private":false,"description":"Run code in Atom!","author":"Kyle Kelley \u003crgbkrk@gmail.com\u003e","contributors":[{"name":"Kyle Kelley","email":"rgbkrk@gmail.com"},{"name":"GeneLocklin","email":"gene.locklin@gmail.com"},{"name":"Robin Bolton","email":"robin@robinbolton.com"},{"name":"rpavlick","email":"ryan.pavlick@gmail.com"},{"name":"Idean Labib","email":"idean1.labib@gmail.com"},{"name":"Christopher Armstrong","email":"radix@twistedmatrix.com"},{"name":"Victor","email":"foo-bar-baz-qux@users.noreply.github.com"},{"name":"Calyhre","email":"calyhre@gmail.com"},{"name":"Kevin Busby","email":"kevinb@earthrid.com"},{"name":"Ahmad M. Zawawi","email":"ahmad.zawawi@gmail.com"},{"name":"Maxime Loliée","email":"maxime@siliadev.com"},{"name":"Jonathan Channon","email":"jonathan.channon@gmail.com"},{"name":"kami","email":"kami30k@gmail.com"},{"name":"Erran Carey","email":"me@errancarey.com"},{"name":"Florian Lefèvre","email":"zedentox@gmail.com"},{"name":"Dustin Blackman","email":"dustinblackman@users.noreply.github.com"},{"name":"elclanrs","email":"cedric.ruiz@spacirdesigns.com"},{"name":"cdingpeng","email":"cdingpeng@glitchsoft.com"},{"name":"gerane","email":"gerane@gmail.com"},{"name":"Jake Sankey","email":"jakesankey@icloud.com"},{"name":"Daniel Bayley","email":"daniel.bayley@me.com"},{"name":"rgbkrk","email":"rgbkrk@gmail.com"},{"name":"Otto Robba","email":"OttoRobba@users.noreply.github.com"},{"name":"Hikaru Ojima","email":"hikaru.ojima@mixi.co.jp"},{"name":"Rafael Belvederese","email":"rafael@blvz.im"},{"name":"Will Sahatdjian","email":"ws@kindwave.com"},{"name":"Lance Batson","email":"lbatson@my.apsu.edu"},{"name":"Ash Wilson","email":"smashwilson@gmail.com"},{"name":"Pedro Rodriguez","email":"ski.rodriguez@gmail.com"},{"name":"Hans Rødtang","email":"hansrodtang@gmail.com"},{"name":"Yeonghoon Park","email":"sola92@gmail.com"},{"name":"Johan Bruning","email":"johan@taquito.nl"},{"name":"Andy Hayden","email":"andyhayden1@gmail.com"},{"name":"Alexey Slaykovsky","email":"alexey@macbook.dlink"},{"name":"Christian Kjaer Laustsen","email":"christianlaustsen@gmail.com"},{"name":"cormullion","email":"cormullion@mac.com"},{"name":"jbtule","email":"jay+code@tuley.name"},{"name":"Ivan Storck","email":"ivanoats@gmail.com"},{"name":"Ciaran Downey","email":"me@ciarand.me"},{"name":"bryanweatherly","email":"bryanweatherly@gmail.com"},{"name":"Rnhmjoj","email":"micheleguerinirocco@me.com"},{"name":"Calvin Bottoms","email":"calvin.bottoms@gmail.com"},{"name":"Marek Piechut","email":"marek.piechut@gmail.com"},{"name":"Rodolfo Carvalho","email":"rhcarvalho@gmail.com"},{"name":"Sergey Koshelev","email":"xih@yandex.ru"},{"name":"Tomasz Grodzki","email":"dev@plain.pl"},{"name":"fazo96","email":"fazius2009@gmail.com"},{"name":"morinmorin","email":"mimomorin@gmail.com"},{"name":"Mirek Rusin","email":"mirek@me.com"},{"name":"ThiconZ","email":"ThiconZ@users.noreply.github.com"},{"name":"Daniel Chatfield","email":"chatfielddaniel@gmail.com"},{"name":"Lucas Magno","email":"lmagno94@gmail.com"},{"name":"benjamin","email":"benjamin.nave@gmail.com"},{"name":"liamdawson","email":"dawmail333@gmail.com"},{"name":"Liam Dawson","email":"liam@liamdawson.me"},{"name":"Ilya Palkin","email":"ilya1984@ukr.net"},{"name":"Sagi","email":"saginedunkanal@users.noreply.github.com"},{"name":"Michael Pardo","email":"kensuke155@gmail.com"},{"name":"Samuel Marks","email":"samuelmarks@gmail.com"},{"name":"aki","email":"lala.akira@gmail.com"},{"name":"Marc Harter","email":"wavded@gmail.com"},{"name":"wflaschka","email":"wflaschka@gmail.com"},{"name":"Jarmo Kivekas","email":"jarmo.kivekas@nixu.com"},{"name":"Jan T. Sott","email":"git@idleberg.com"},{"name":"Vladimir Shvets","email":"stormherz@gmail.com"},{"name":"Nikita Gryzlov","email":"nixel2007@gmail.com"},{"name":"A Manning","email":"449a6a9b@opayq.com"},{"name":"Bruno Durán","email":"bruno.duran.rey@gmail.com"}],"repository":"https://github.com/rgbkrk/atom-script","keywords":["script","runner","Bash","Behat Feature","Clojure","Coffeescript","CoffeeScript (Literate)","Cucumber (Gherkin)","Elixir","Erlang","F#","FSharp","F*","FStar","Go","Groovy","Haskell","Javascript","Julia","LaTeX","Lua","mongoDB","newLISP","Perl","PHP","PowerShell","Python","RSpec","Ruby","Ruby on Rails","Scala","Swift","run","Applescript","code","LAMMPS"],"license":"Apache-2.0","engines":{"atom":"\u003e=0.174.0"},"activationCommands":{"atom-text-editor":["script:run","script:run-by-line-number","script:run-options","script:run-with-profile"]},"dependencies":{"ansi-to-html":"^0.4.2","atom-message-panel":"1.2.7","atom-space-pen-views":"^2.0.3","babel-preset-env":"^1.6.0","strip-ansi":"^3.0.0","underscore":"^1.8.3","uuid":"^3.0.1"},"optionalDependencies":{"babel-cli":"^6.26.0","coffeescript":"^2"},"devDependencies":{"babel-eslint":"^7.1.1","eslint":"^3.11.1","eslint-config-airbnb-base":"^10.0.1","eslint-plugin-import":"^2.2.0"},"providedServices":{"default-script-runtime":{"description":"Provides default runtime that's configurable through Atom editor","versions":{"0.1.0":"provideDefaultRuntime"}},"provide-blank-runtime":{"description":"Provides a Runtime instance that's intended to be more programatically configurable","versions":{"0.1.0":"provideBlankRuntime"}}},"scripts":{"lint":"eslint .","lint:fix":"eslint . --fix"},"babel":{"presets":[["env",{"targets":{"node":"current"}}]]}}},{"name":"language-babel","repository":{"type":"git","url":"https://github.com/gandm/language-babel"},"downloads":2070790,"stargazers_count":978,"releases":{"latest":"2.85.0"},"readme":"# language-babel\n\n[![Build Status](https://travis-ci.org/gandm/language-babel.svg?branch=master)](https://travis-ci.org/gandm/language-babel)\n[![Build status](https://ci.appveyor.com/api/projects/status/ef32qrj8iplnbqm2/branch/master?svg=true)](https://ci.appveyor.com/project/gandm/language-babel/branch/master)\n[![Build Dependencies](https://david-dm.org/gandm/language-babel.svg)](https://david-dm.org/gandm/language-babel)\n\nLanguage grammar for all versions of JavaScript including  ES2016 and ESNext,  JSX syntax as used by [Facebook React](http://facebook.github.io/react/index.html),  [Atom's etch](https://github.com/atom/etch) and others, as well as optional typed JavaScript using [Facebook flow](http://flowtype.org/). This package also supports highlighting of [GraphQL](https://github.com/gandm/language-babel#graphql-code-highlighting) language constructs when inside certain JavaScript template strings. For `.graphql` and `.gql` file support please see [language-graphql](https://atom.io/packages/language-graphql) . The colour of syntax is determined by the theme in use.\n\nThe package also provides\n\n - [automatic indentation](https://github.com/gandm/language-babel#automatic-indenting-of-jsx) of JSX.\n - [JSX tag closure and JSX html element completion suggestions](https://github.com/gandm/language-babel#auto-completion-of-jsx-tags-elements-and-attributes).\n - Context aware [commenting out of JSX elements](https://github.com/gandm/language-babel#commenting-out-jsx-elements).\n - Additional [newline insertion between JSX tag pairs](https://github.com/gandm/language-babel#automatic-insertion-between-jsx-tags).\n - Babel [transpilation on file saves](https://github.com/gandm/language-babel#interface-to-babel-v6--v5) (optional).\n - Babel transpile of all files in a directory or directories.\n - Babel transpiled [code preview](https://github.com/gandm/language-babel#interface-to-babel-v6--v5).\n - Support for [styled-components](https://github.com/styled-components/styled-components) CSS inside tagged template strings including CSS auto-completion and optionally [Emmet](https://docs.emmet.io/cheat-sheet/) CSS completion under a package setting. Please note that emmet completion is just for snippets. Additional features such as vendor prefix and gradient support is not supported as these require a full distribution of emmet which I feel is too large for this package.\n - Support for [GraphQL code highlighting](https://github.com/gandm/language-babel#graphql-code-highlighting)\n - [Support for adding other language grammars to highlight code inside template literal strings](https://github.com/gandm/language-babel#javascript-tagged-template-literal-grammar-extensions).\n\nBy default the language-babel package will detect file types `.js`,`.babel`,`.jsx`, `.es`, `.es6`, `.mjs` and `.flow`. Use the standard ATOM interface to enable it for other file types. This provides a grammar that scopes the file in order to colour the text in a meaningful way. If other JavaScript grammars are enabled these may take precedence over language-babel. Look at the bottom right status bar indicator to determine the language grammar of a file being edited. language-babel will be shown as either `Babel` or `Babel ES6 JavaScript`. Clicking the name will allow the grammar for a file to be changed.\n\nlanguage-babel provides [Babel](http://babeljs.io/) V6 \u0026 V5 transpiler support. If you only require grammar/syntax highlighting ensure that the package settings `Transpile On Save` and `Allow Local Override` are both off.\n\n## Installation\n\nInstall via ATOM or by using `apm install language-babel`. If you only need to use the provided grammar read no further!\n\n## Auto Completion of JSX tags, elements and attributes\n\nJSX tag closures are provided as auto-complete options. In addition, common HTML elements and their associated properties are displayed as auto-complete lists. Those supported by language-babel are described [here](http://facebook.github.io/react/docs/tags-and-attributes.html)\n\n![autoclose](https://cloud.githubusercontent.com/assets/2313237/12352348/218348b6-bb7d-11e5-9245-bd0d1467d71d.gif)\n\n## Commenting out JSX elements\n\nJSX elements cannot be commented out by using standard `//` or `/* */` commenting. Normally `{/* */}` is used instead. language-babel changes the Atom toggle comments behaviour when inside a JSX block to support this behaviour. Nested elements within JSX that require a // form of commenting will be detected automatically.\n\n![autoclose](https://cloud.githubusercontent.com/assets/2313237/12441752/4d672be6-bf42-11e5-8e20-33a96a81db66.gif)\n\n## Automatic insertion between JSX tags\n\nWhen a newline is inserted between a matched open/close pair of JSX tags, language-babel inserts an additional line and positions the cursor. If Auto Indent is also turned on then the cursor is correctly indented.\n\n![autoclose](https://cloud.githubusercontent.com/assets/2313237/15736961/1cbaa780-289b-11e6-9cd3-48f749a91f98.gif)\n\n## Automatic Indenting of JSX\n\nThe package setting `Auto Indent JSX` if enabled will auto-indent any JSX code typed or moved across using suitable Atom defaults. There are also three commands - `language-babel:toggle-auto-indent-jsx`, `language-babel:auto-indent-jsx-on` and `language-babel:auto-indent-jsx-off` that override the default behaviour. These can be mapped to keyboard shortcuts if needed.\n\nAuto-Indenting will also attempt to read the `.eslintrc` file associated with an edited file's project for the presence of four properties whose defaults are shown below. These rules, which are part of the [ESLint-plugin-React](https://github.com/yannickcr/eslint-plugin-react) EsLint plugin, are then used to determine the alignment and tab/spaces spacing of JSX elements. For more information on the options for these rules see [Closing bracket](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md), [Indent](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md) and [Indent Props](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md).\n\nPlease note that no attempt is currently made to read eslint settings in any other file. e.g. `package.json`, `eslint.js`, `extends...`, etc.\n\n```json\n{\n  \"rules\": {\n    \"indent\": 1,\n    \"react/jsx-closing-bracket-location\": 1,\n    \"react/jsx-indent-props\": 1,\n    \"react/jsx-indent\": 1\n  }\n}\n```\nWhen moving around a JSX block  language-babel reformats the preceding JSX lines automatically. Lines following the cursor are not indented. This is to protect the source code following incomplete JSX from being processed. The user should correctly position the first JSX element as auto-indenting will not do this.\n\n\n\nYou may also turn off automatic indenting for all files by setting the package option `Auto Indent JSX`\n\n![indent](https://cloud.githubusercontent.com/assets/2313237/12700780/4074271e-c7e8-11e5-91d7-774f7808bc1d.gif)\n\n## Interface to Babel v7, v6 \u0026 v5.\n\nlanguage-babel fully supports the Babel JavaScript transpiler versions 5, 6 and 7.\n\nOptions in the language-babel package settings and/or in `.languagebabel` project based JSON files allow for Babel validations to be carried out on a file saves using `.babelrc` options. A file tree context menu - `Language-Babel` - is also provided that allows whole directories to be transpiled obeying any `.babelrc` and `.languagebabel` settings. Even if using a workflow such as gulp, webpack, etc, this can be very useful. Additional options allow the output from Babel (transpiled code and maps ) to be output to other directories.\n\nIt is also possible to preview any source file as Babel would output it.\n\n#### Previewing\n\nBabel code can be previewed as shown below. Source mapping keeps the ES201x file's cursor in step with the transpiled code's cursor. This feature requires the Atom package [source-preview](https://atom.io/packages/source-preview) in which `language-babel`becomes a provider of transpiled output which `source-preview` consumes.\n\n**Please note** that the following two packages should be disabled or uninstalled to stop multiple packages contending for the same transpile - [source-preview-babel](https://atom.io/packages/source-preview-babel) and [source-preview-react](https://atom.io/packages/source-preview-react).\n\n`source-preview` provides a keyboard toggle to view the current file. As with transpiling described below, a project must have the relevant `.babelrc`, `package.json` and `node_modules`\n\n![example](https://cloud.githubusercontent.com/assets/2313237/12490818/7535fc50-c06f-11e5-8752-ec0878c5205c.gif)\n\n#### Transpiling\n\nThis package works by using the concept of a project folder which we assume contains a project or even nested projects any of which may contain a Babel project.  In a Babel project, we expect to see one or more `.babelrc` files,  `node_modules` folders at the root's of the project containing an optional `@babel/core` `babel-core`  and other babel plugins/presets as determined by the project's `package.json` file. In addition, we may expect to see one or more `.languagebabel` files in the project. Projects are either implicit (an Atom project folder) or explicit (denoted by a `.languagebabel` property of `\"projectRoot\": true`). If no `@babel/core` or `babel-core` is found in the project then a check is made to determine if this is part of a [Yarn workspace](https://yarnpkg.com/en/docs/workspaces) and if so a further check is made in the workspace node_modules for `@babel/core` or `babel-core`. If none are found then a version will be provided by `language-babel` but this will be a Babel Version 6 instance. Plugins and presets will not be provided by the package.\n\nA trivial example project that shows examples of using `.languagebabel` and `.babelrc` files may be found [here](https://github.com/gandm/example-language-babel).\n\n![example](https://cloud.githubusercontent.com/assets/2313237/11145720/18bf0f52-8a00-11e5-82f0-3f474aeefcb7.gif)\n\nMultiple projects may be open at any time inside Atom and `language-babel` must allow the use of differing `babel-core` versions and associated plugins when transpiling. It does this by using background tasks - one per Babel project. When a `language-babel` grammar enabled file is saved the package settings and optionally any `.languagebabel` configuration files are read to determine if the file should be transpiled and what to do with the output. These settings and `.languagebabel` options are described below.\n\nIt is very easy to ensure that language-babel does not transpile files that are not needed. Just turn off the global package setting `Transpile On Save` and turn on `Allow Local Override`. Apart from grammar highlighting only projects having a `.languagebabel` in the file path will then be affected by this package. Further granularity is easy too.\n\nIf `.babelrc` and/or `package.json` files contain Babel properties that are environment specific these environments should be created before Atom is started. In particular, Babel assumes a `development` environment by default, whereas Atom assumes a `production` environment by default.\n\ne.g.\n\nWindows\n```\nset NODE_ENV=\"development\"\natom\n```\nOSX/Unix\n```\nNODE_ENV=\"development\"\natom\n```\n\n## Package Settings\n\nFor most projects, it is better to configure `language-babel` via project-based `.languagebabel` file properties which will override the package settings below. See *\".langeuagebabel Configuration\"* for more information on this behaviour.\n\n* #### Allow Local Override\n  If set this allows `.languagebabel` file properties to override the global package settings.\n\n* #### Transpile On Save\n  On any file save of a `language-babel` grammar enabled file the Babel transpiler is called. No actual transpiled file is saved but any Babel errors and/or successful indicators are notified by an ATOM pop-up. Not all files are candidates for transpilation as other settings can affect this. For example see `Disable When No Babelrc File In Path` and `Babel Source Path` below.\n\n  ```json\n  {\"transpileOnSave\": true} or\n  {\"transpileOnSave\": false}\n  ```\n\n* #### Create Transpiled Code\n  If enabled together with `Transpile On Save` this will output JavaScript code to a `.js` file with the same prefix as the original. By using the  `Babel Transpile Path` options it is possible to transpile to a different target directory. Not all files are candidates for transpilation as other settings can affect this.\n\n  ```json\n  {\"createTranspiledCode\": true} or\n  {\"createTranspiledCode\": false}\n  ```\n\n* #### Disable When No Babelrc File In Path\n  Disables transpiler if no `.babelrc` files are found in the source file path.\n\n  ```json\n  {\"disableWhenNoBabelrcFileInPath\": true} or\n  {\"disableWhenNoBabelrcFileInPath\": false}\n  ```\n\n* #### Suppress Transpile On Save Messages\n  Suppress all successful save messages. Errors are still notified.\n\n  ```json\n  {\"suppressTranspileOnSaveMessages\": true} or\n  {\"suppressTranspileOnSaveMessages\": false}\n  ```\n\n* #### Suppress Source Path Messages\n  This is set by default so that when a file is saved that is outside the `Babel Source Path` directory no message is generated. This is particularly useful when you have mixed ES2015 and ES3-5 environment. ES2015 files can be placed inside a `Babel Source Path` where they will be transpiled and other files will not pop up annoying messages when being saved.\n\n  ```json\n  {\"suppressSourcePathMessages\": true} or\n  {\"suppressSourcePathMessages\": false}\n  ```\n\n* #### Create Map\n  If transpiled output is being saved a separate source map can be also be saved. The source file name will be used with a new suffix of `.js.map` and sent to a directory specified in `Babel Maps Path`.\n\n  If `.babelrc` files use the `sourceMaps: inline` or `sourceMaps both` option, turn this `createMap` option off as the map data is stored as part of the source file.\n\n  ```json\n  {\"createMap\": true} or\n  {\"createMap\": false}\n  ```\n\n* #### Babel Maps Add Url\n  If a source map is created using the `Create Map` option above then this appends a Url reference `//# sourceURL=sourcefile.js.map` to the transpiled JavaScript file.  \n\n  ```json\n  {\"babelMapsAddUrl\": true} or\n  {\"babelMapsAddUrl\": false}\n  ```\n\n* #### Project Root ( only present in `.languagebabel` files)\n\n  A `.languagebabel` property that defines this directory is a project root. A project root would contain a `node_modules` folder with an optional `babel-core` as well as any plugins required.\n\n  ```json\n  {\"projectRoot\": true} or\n  {\"projectRoot\": false}\n  ```\n\n* #### Babel Source Path, Babel Transpile Path and Babel Maps Path\n  These a directories based on the project root. A project root is either implicit ( based on an Atom folders root directory) or explicit ( based upon the root defined in the nearest `.languagebabel` file with a property `\"projectRoot\": true` )\n\n  Only files found under the `project/babelsourcepath` will be candidates for transpilation. If multiple project root folders exist then `babelsourcepath` may exist in any or all folders.\n\n  The Transpile and Maps paths allow different target directories to be specified. If multiple project root folders exist then they may exist in any or all folders.\n\n  e.g. Two project root folders exist `/proj1` and `/proj2`. If Source Path is set to `babelSource`the Transpile Path is set to `babelTranspile` and the Maps Path is set to `babelMaps` then:-\n\n  `/proj1/babelSource/foo.es6` -\u003e`/proj1/babelTranspile/foo.js`,`/proj1/babelMaps/foo.js.map`\n\n  ```json\n  {\n    \"projectRoot\":  true,    \n    \"babelSourcePath\": \"babelSource\",\n    \"babelTranspilePath\": \"babelTranspile\",\n    \"babelMapsPath\": \"babelMaps\"\n  }\n  ```\n\n  `/proj2/babelSource/dirBar/foo.es6` -\u003e `/proj2/lib/foo.js`,`/proj2/lib/foo.js.map`\n\n  ```json\n  {\n    \"projectRoot\":  true,\n    \"babelSourcePath\": \"babelSource/dirBar\",\n    \"babelTranspilePath\": \"lib\",\n    \"babelMapsPath\": \"lib\"\n  }\n  ```\n\n* #### Create Target Directories\n  When enabled any target directories that do not exist will be created prior to a transpilation.\n  ```json\n  {\"createTargetDirectories\": true} or\n  {\"createTargetDirectories\": false}\n  ```\n\n* #### Keep File Extension\n  Keeps the source filename extension as the target filename extension\n\n* #### Auto Indent JSX\n  Enables automatic indenting of JSX.\n\n* #### JavaScript Tagged Template Literal Grammar Extensions\n\n\tThis package setting allows language-babel to include third party grammars to highlight code inside template literal strings. These may be tagged template literals, [described here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals), or where no appropriate function tag exists, another form of tag marking that signifies the templates nature. e.g. A comment string.\n\n  For example you may wish to highlight templates prefixed with ``/* @html */`\u003cdiv\u003e\u003c/div\u003e` `` as HTML, and  maybe `` sql`select * from table foo` `` as SQL. The latter assumes a tagged function named sql exists in the code.\n\n\tIn order to do this, you need to find a language package that supports the highlighting of the template code. This language package should then be installed into Atom. You then need to find the scope name for that grammar. This can be done in a number of ways, but if you view the grammars JSON/CSON file and look for the `scopeName` property field, this indicates the scope name for that grammar.\n\n\tIf we use the Atom provided languages [language-css](https://atom.io/packages/language-css), [language-html](https://atom.io/packages/language-html) and [language-sql](https://atom.io/packages/language-sql) in our example above to highlight the template code, then this field would look like.\n\n  ```\"(?:css\\.(?:[a-z])+)\":source.css, /* @html */:text.html.basic, sql:source.sql```\n\n\tIn other words, the package settings for this field is an array of strings, with each string in the form of `template-prefix:grammar-scopename#optional-include`.\n\n  where:\n    - `template-prefix` is a literal string or an Oniguruma regular expression ( Oniguruma is the regular expression engine for TextMate grammars used by Atom) that comes before the opening back-tick of a template. A literal string may contain any characters except a comma but including colons. A regular expression is denoted by being enclosed by double quote marks `\"RegExp Here\"`. **Most importantly, a regular expression should create no capturing groups.**\n    - `:`The last colon in the string signifies the start of the embedded grammars scopeName.\n    - `grammar-scopename` is the scopeName of the grammar used to highlight the template.\n    - `#optional-include` if present, will use that include block in the grammars repository.\n\n  **Please note:** As language-babel passes off highlighting of the template to another grammar, it cannot highlight any interpolated code. Actually, that's not strictly correct, as it does highlight interpolated JavaScript code but only at the top most rule stack of the embedded grammar, but this is unlikely to be useful with most grammars. Also note that there is a delay of 10 seconds between the last character being entered into this field and a new extension grammar being generated.\n\n* #### Styled-Components Auto-Complete Method\n\n  This flag if set will enable Emmet snippets to be used inside CSS templates. If a valid emmet abbreviation is entered then the expanded snippet will appear at the top of a auto-complete list. Pressing the appropriate auto-complete key (normally tab) will expand the snippet.  \n\n## .languagebabel Configuration\n\n`.languagebabel` JSON configuration files can exist in any directory of the path that contains a source file to be compiled. The properties in this file override the global package settings above. If `.languagebabel` files are present, they read and merged starting in the source files directory up to the project root directory. Properties defined closest the source file take precedence.\n\nTo use this option please enable the `Allow Local Override` package setting.\n\nA `.languagebabel` file may contain one or more of the following properties.\n```\n{\n  \"babelMapsPath\":                    \"relPath\",\n  \"babelMapsAddUrl\":                  true|false,\n  \"babelSourcePath\":                  \"relPath\",\n  \"babelTranspilePath\":               \"relPath\",\n  \"createMap\":                        true|false,\n  \"createTargetDirectories\":          true|false,\n  \"createTranspiledCode\":             true|false,\n  \"disableWhenNoBabelrcFileInPath\":   true|false,\n  \"keepFileExtension\":                true|false,\n  \"projectRoot\":                      true|false,  \n  \"suppressSourcePathMessages\":       true|false,\n  \"suppressTranspileOnSaveMessages\":  true|false,\n  \"transpileOnSave\":                  true|false\n}\n```\n\n## GraphQL Code Highlighting\n\nlanguage-babel supports highlighting of GraphQL code within JavaScript files. For highlighting `.graphql` and `.gql` files see its sister grammar - [language-graphql](https://atom.io/packages/language-graphql).\n\n Inside JavaScript, GraphQL enclosed in back-ticks, a.k.a. Quasi or template strings are highlighted. Other GraphQL structures, notably types, are supported by the Flow component of this package.\n\n Strings that have one of three prefixes/tags are parsed by the grammar to highlight the code enclosed.\n\n ```\n Relay.QL`This is how Relay uses template strings`\n\n graphql`This is how Relay will use template strings`\n\n gql`This is how Apollo for GraphQL uses template strings`\n\n /* GraphQL */`For cases where no template tag function is available`\n ```\n\n An example of using the third method for highlighting code using `/* GraphQL */`\n\n ```\n var { graphql, buildSchema } = require('graphql');\n\n var schema = buildSchema(/* GraphQL */`\n   type Query {\n     hello: String\n   }\n `);\n ```\n","metadata":{"name":"language-babel","main":"./lib/main","version":"2.85.0","description":"JavaScript ES201x, React JSX, Flow and GraphQL Grammar. Babel Transpiler","keywords":["react","flow","graphql","es6","jsx","javascript","es7","esnext","es2015","es2016","es2017","relay","apollo"],"activationCommands":[],"repository":"https://github.com/gandm/language-babel","license":"MIT","engines":{"atom":"^1.15.0"},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"autoCompleteProvider"}},"preview.provider":{"versions":{"0.1.0":"provide"}}},"dependencies":{"@emmetio/expand-abbreviation":"^0.5.8","babel-core":"^6.26.0","fs-plus":"^3.0.0","fuzzaldrin":"^2.1.0","jjv":"^1.0.2","js-yaml":"^3.10.0","path-is-inside":"^1.0.1","strip-json-comments":"^2.0.1"},"devDependencies":{"atom-grammar-test":"\u003c1.0.0","babel-eslint":"^6.1.2","babel-plugin-syntax-class-properties":"^6.13.0","babel-plugin-transform-class-properties":"^6.11.5","babel-plugin-transform-decorators-legacy":"^1.3.4","babel-preset-node5":"^11.1.0","chai":"^3.0.0","core-decorators":"^0.12.3","eslint":"^3.6.0","temp":"^0.8.3"},"configSchema":{"autoIndentJSX":{"title":"Auto Indent JSX","description":"Auto Indent JSX using default or eslintrc rules","type":"boolean","default":false,"order":10},"taggedTemplateGrammar":{"title":"JavaScript Tagged Template Literal Grammar Extensions","description":"Enter a list of comma separated tagged template literals/regex in the form tagname:scope.name.of.grammar","type":"array","default":[],"items":{"type":"string"},"order":20},"emmetCSSAutocomplete":{"title":"Styled-Components Auto-Complete method","description":"Use Emmet to auto-complete in addition to the default CSS completion","type":"boolean","default":false,"order":25},"allowLocalOverride":{"description":"Allow .languagebabel files to overide the settings below. Useful for project based configurations.","type":"boolean","default":false,"order":30},"transpileOnSave":{"description":"Check source code validity on file save. Use \"Create Transpiled Code\" option below to save file.","type":"boolean","default":false,"order":40},"createTranspiledCode":{"description":"Save transpiled code to Babel Transpile Path below.","type":"boolean","default":false,"order":50},"disableWhenNoBabelrcFileInPath":{"description":"Suppress transpile when no .babelrc file is in source file path.","type":"boolean","default":true,"order":60},"suppressTranspileOnSaveMessages":{"description":"Suppress non-error notification messages on each save.","type":"boolean","default":true,"order":70},"suppressSourcePathMessages":{"description":"Suppress messages about file not being inside Babel Source Path.","type":"boolean","default":true,"order":75},"createMap":{"description":"Create separate map file.","type":"boolean","default":false,"order":80},"babelMapsAddUrl":{"description":"Append map file name to transpiled output if \"Create separate map file\" is set.","type":"boolean","default":true,"order":90},"babelSourcePath":{"description":"Babel Source Root based on Project root.","type":"string","default":"","order":100},"babelTranspilePath":{"description":"Babel Transpile Root based on Project root.","type":"string","default":"","order":120},"babelMapsPath":{"description":"Babel Maps Root based on Project root.","type":"string","default":"","order":130},"createTargetDirectories":{"description":"Create transpile output target directories.","type":"boolean","default":true,"order":140},"keepFileExtension":{"description":"Source filename extension becomes target filename extension.","type":"boolean","default":false,"order":150}}}},{"name":"highlight-selected","repository":{"type":"git","url":"https://github.com/richrace/highlight-selected"},"downloads":2044371,"stargazers_count":3131,"releases":{"latest":"0.16.0"},"readme":"# Highlight Selected\n\n[![Version](https://img.shields.io/apm/v/highlight-selected.svg?style=flat-square)](https://atom.io/packages/highlight-selected)\n[![Travis CI](https://img.shields.io/travis/richrace/highlight-selected.svg?style=flat-square)](https://travis-ci.org/richrace/highlight-selected)\n[![Gitter](https://img.shields.io/badge/chat-Gitter-ff69b4.svg?style=flat-square)](https://gitter.im/richrace/highlight-selected)\n[![Downloads](https://img.shields.io/apm/dm/highlight-selected.svg?style=flat-square)](https://atom.io/packages/highlight-selected)\n[![Licence](https://img.shields.io/apm/l/highlight-selected.svg?style=flat-square)](https://atom.io/packages/highlight-selected)\n[![David](https://img.shields.io/david/richrace/highlight-selected.svg?style=flat-square)](https://david-dm.org/richrace/highlight-selected)\n\n\nHighlight occurrences of a selection within the open editor.\n\nCan be triggered by either double clicking a word, or selecting a word/text with your cursor.\n\n![Gif in action](http://i.imgur.com/C5FnzzQ.gif)\n\n## Commands\n\n|Command Name|Command Code|Keymap|Description|\n|---|---|---|---|\n|Toggle|`highlight-selected:toggle`|\u003ckbd\u003ectrl\u003c/kbd\u003e+\u003ckbd\u003ecmd\u003c/kbd\u003e+\u003ckbd\u003eh\u003c/kbd\u003e|Enables/Disabled this package|\n|Select all markers|`highlight-selected:select-all`||Select all markers|\n\nTo set a Keymap for select all open your `Keymap` file and add:\n```coffeescript\n'atom-text-editor:not([mini])':\n  'cmd-*': 'highlight-selected:select-all'\n```\n\n\n## Settings\n\n|Setting|Default|Description|\n|---|---|---|\n|Only Highlight Whole Words|true|This uses the \"Allowed Characters To Select\" option with Atom's \"Non-word characters\" to find word boundaries.|\n|Hide Highlight On Selected Word|false|When enabled to will not add a box around the selected words.|\n|Ignore Case|false|Case sensitivity|\n|Light Theme|false|Different CSS classes get applied (see [styling](#styling)). Should makes it easier to switch between Atom's themes|\n|Highlight Background|false|Adds a background colours via CSS class (see [styling](#styling))|\n|Minimum Length|2|How many characters to select before searching for occurrences|\n|Timeout|20|Defers searching for matching strings for X ms|\n|Highlight In Panes|true|Highlight selection in another panes|\n|Show In Status Bar|true|Show how many matches there are|\n|Status Bar String|'Highlighted: %c|The text to show in the status bar. `%c` = number of occurrences|\n|Allowed Characters To Select|'$@%-'|Non Word Characters that are allowed to be selected. This is useful for languages like PHP where variables like `$test` need to be highlighted|\n|Show Results On Scroll Bar|false|Show highlight on the scroll bar. Requires [Scroll Marker](https://atom.io/packages/scroll-marker) Package (if you enable this setting you will be prompted to install the package)|\n\n## Styling\n\nIf you want to change any of the styling of the region use the following as a guide:\n\n```scss\natom-text-editor .highlights {\n  // Box\n  .highlight-selected .region {\n    border-color: #ddd;\n    border-radius: 3px;\n    border-width: 1px;\n    border-style: solid;\n  }\n  // Background (set in settings)\n  .highlight-selected.background .region {\n    background-color: rgba(155, 149, 0, 0.6);\n  }\n  // Light theme box (set in settings)\n  .highlight-selected.light-theme .region {\n    border-color: rgba(255, 128, 64, 0.4);\n  }\n  // Light theme background (set in settings)\n  .highlight-selected.light-theme.background .region {\n    background-color: rgba(255, 128, 64, 0.2);\n  }\n  }\n\n// If you have the Scroll Marker package installed https://atom.io/packages/scroll-marker\n// These are the colours that will be shown in the scroller\n.highlight-selected-marker-layer.scroll-marker-layer {\n  .scroll-marker {\n    background-color: #ffff00\n  }\n}\n\n.highlight-selected-selected-marker-layer.scroll-marker-layer {\n  .scroll-marker {\n    background-color: #f71010\n  }\n}\n```\n\n## Contributing\n\nPlease look at the [Contributing Guide](https://github.com/richrace/highlight-selected/blob/master/CONTRIBUTING.md)\n","metadata":{"name":"highlight-selected","main":"./lib/main","version":"0.16.0","description":"Highlights the current word selected when double clicking","repository":{"type":"git","url":"https://github.com/richrace/highlight-selected"},"keywords":["highlight selected","highlight selection","highlight occurrences"],"license":"MIT","engines":{"atom":"\u003e=1.13.0 \u003c2.0.0"},"dependencies":{"atom-package-deps":"^5.0.0","debounce":"^1.2.0","grim":"^2.0.2"},"devDependencies":{"babel-eslint":"^10.0.1","eslint":"^5.13.0","eslint-config-airbnb":"^17.1.0","eslint-config-prettier":"^4.0.0","eslint-plugin-import":"^2.16.0","eslint-plugin-prettier":"^3.0.1","prettier":"^1.16.3"},"readme":"# Highlight Selected\n\nDouble click on a word to highlight it throughout the open file.\n\nThis is something hacky I've put together as I missed the functionality that Sublime gave. As such, it's doesn't work 100% but is good enough to start!\n\nSome code and has been take from Atom's find and replace package ([link](https://github.com/atom/find-and-replace))\n\nPlease log any issues and pull requests are more than welcome!\n\n![Gif in action](http://i.imgur.com/C5FnzzQ.gif)\n\n# Issues and Todo\n\n- Some double click events are not triggered\n- Refactor and tidy up the code\n- Add specs to test it\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/richrace/highlight-selected/issues"},"homepage":"https://github.com/richrace/highlight-selected","_id":"highlight-selected@0.1.2","dist":{"shasum":"7c9da46b1412aceb069f8ca2ca54d014986ad408"},"_resolved":"/var/folders/_x/p3bsx_694dx6h4t_jmpybn6c0000gp/T/d-11422-15778-1djbgod/package.tgz","_from":"/var/folders/_x/p3bsx_694dx6h4t_jmpybn6c0000gp/T/d-11422-15778-1djbgod/package.tgz","providedServices":{"highlightSelected":{"description":"Exposes Highlight Selected Events","versions":{"1.0.0":"provideHighlightSelectedV1Deprecated","2.0.0":"provideHighlightSelectedV2"}}},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}},"scroll-marker":{"versions":{"0.1.0":"consumeScrollMarker"}}},"package-deps":["scroll-marker"]}},{"name":"atom-material-ui","repository":{"type":"git","url":"https://github.com/atom-material/atom-material-ui"},"downloads":1797729,"stargazers_count":1638,"releases":{"latest":"2.1.3"},"readme":"[![Build Status](https://img.shields.io/travis/atom-material/atom-material-ui.svg?style=flat-square)](https://travis-ci.org/atom-material/atom-material-ui)\n[![apm](https://img.shields.io/apm/dm/atom-material-ui.svg?style=flat-square)](https://atom.io/packages/atom-material-ui)\n[![apm](https://img.shields.io/apm/v/atom-material-ui.svg?style=flat-square)](https://atom.io/packages/atom-material-ui)\n[![apm](https://img.shields.io/apm/l/atom-material-ui.svg?style=flat-square)]()\n[![Gitter](https://img.shields.io/gitter/room/silvestreh/atom-material-ui.svg?style=flat-square)](https://gitter.im/silvestreh/atom-material-ui)\n[![Support AMU](https://img.shields.io/badge/donate-on%20pledgie-green.svg?style=flat-square)](https://pledgie.com/campaigns/29552)\n\n![AMU](http://i.imgur.com/7C2H2mw.png)\n---\n\nA dynamic UI theme for Atom that (kinda) follows Google's Material Design Guidelines. Best with [Atom Material Syntax](https://github.com/atom-material/atom-material-syntax).\n\nInspired by Mattia Astorino's [SublimeText theme](https://github.com/equinusocio/material-theme).\n\n# Installation\n\nFire up a console and type:\n\n```shell\napm install atom-material-ui\n```\n\nOr, inside Atom's settings select Install and then search for this package.\n\n# Configuration\n\nAtom Material UI supports different accent colors. To change it, go to Settings \u003e Themes and click the cog icon next to the theme selector.\n\n![](http://i.imgur.com/pf3oiZr.png)\n\nYou'll find the color picker there.\n\n# Screenshots\n\nHere's the obligatory screenshot.\n\n### With [Atom Material Syntax](https://atom.io/packages/atom-material-syntax)\n\n```shell\napm install atom-material-syntax\n```\n\n![](http://i.imgur.com/ExPYmJY.png)\n\n### With [Light syntax](https://atom.io/packages/atom-material-syntax-light) theme variant\n\n```shell\napm install atom-material-syntax-light\n```\n\n![](http://i.imgur.com/q1o78sX.png)\n\n### With [Dark syntax](https://atom.io/packages/atom-material-syntax-dark) theme variant\n\n```shell\napm install atom-material-syntax-dark\n```\n\n![](http://i.imgur.com/orhIvwS.png)\n\n# Contributing\n\nPlease check the [CONTRIBUTING.md](https://github.com/atom-material/atom-material-ui/blob/master/CONTRIBUTING.md) file.\n\n# Extra\n\n![](http://i.imgur.com/0tHORB1.png)\n\nYou can download the redesigned icon from [dropbox](https://www.dropbox.com/s/8gyn40sw95626dx/Atom-MD-Icon.zip?dl=0). It's a ZIP file containing multiple resolution PNGs, ICNS and ICO formats. Windows ICO converted by Akshit Tripathi.\n\n# License\nAtom Material UI is licensed under MIT.\n\nView the license file [here](https://github.com/atom-material/atom-material-ui/blob/master/LICENSE.md)\n","metadata":{"name":"atom-material-ui","theme":"ui","version":"2.1.3","description":"A dynamic UI theme for Atom that follows Google's Material Design Guidelines","main":"./lib/main","keywords":["ui","theme","material","md","dynamic","adaptive","adapt to syntax","material design"],"repository":"https://github.com/atom-material/atom-material-ui","license":"MIT","engines":{"atom":"\u003e=1.17.0 \u003c2.0.0"},"dependencies":{"tinycolor2":"1.3.0"},"devDependencies":{"babel-eslint":"^7.1.1","eslint":"^3.17.1","eslint-config-airbnb":"^14.1.0","eslint-plugin-import":"^2.2.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-react":"^6.10.0"},"configSchema":{"colors":{"order":1,"type":"object","title":"Colors","properties":{"abaseColor":{"title":"Primary color","description":"Changes the main theme color.","type":"color","default":"#009688"},"accentColor":{"title":"Secondary color","description":"This color is used as an accent to the Primary Color.","type":"color","default":"#FFFFFF"},"genAccent":{"title":"Generate complementary secondary color","description":"Generates a complementary color based on your selected Primary Color.","type":"boolean","default":false},"predefinedColor":{"title":"Predefined colors","description":"Pick a predefined color from the Material Design palette. If you change the Primary Color it will override this settings.","type":"string","enum":["Amber","Blue","Blue Grey","Brown","Cyan","Green","Grey","Indigo","Lime","Orange","Pink","Purple","Red","Teal"],"default":"Teal"},"paintCursor":{"title":"Paint text editor's cursor","description":"Overrides the syntax theme's cursor color with the selected Primary Color.","type":"boolean","default":false}}},"ui":{"order":2,"type":"object","title":"User Interface","properties":{"useAnimations":{"title":"Use animations","description":"Enables animations for clicked tabs and other UI elements.","type":"boolean","default":true},"panelContrast":{"title":"Contrasting panels","description":"Adds a little contrast between panels to differentiate where one starts and the other ends.","type":"boolean","default":false},"panelShadows":{"title":"Panels cast shadows","description":"Adds depth to the user interface by using shadows.","type":"boolean","default":false}}},"tabs":{"order":3,"type":"object","title":"Tabs","properties":{"compactTabs":{"title":"Compact tab bar","description":"Reduces line height so the tab bar won't be too tall.","type":"boolean","default":false},"tintedTabBar":{"title":"Tinted tab bar","description":"Paints the tab bar with the chosen primary color.","type":"boolean","default":false},"noTabMinWidth":{"title":"No minimum width for tabs","description":"Prevents tabs from overflowing off the tab bar.","type":"boolean","default":false},"stretchedTabs":{"title":"Stretched tabs","description":"Stretch tabs to full available width of the tab bar.","type":"boolean","default":false}}},"fonts":{"order":5,"type":"object","title":"Fonts","properties":{"fontSize":{"title":"User interface font size","description":"Scales the entire UI based on this value.","type":"number","default":16,"minimum":10,"maximum":32}}}}}},{"name":"linter-eslint","repository":{"type":"git","url":"https://github.com/AtomLinter/linter-eslint"},"downloads":1693245,"stargazers_count":1611,"releases":{"latest":"8.5.5"},"readme":"# linter-eslint\n\n[![Build Status](https://travis-ci.org/AtomLinter/linter-eslint.svg)](https://travis-ci.org/AtomLinter/linter-eslint)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-eslint.svg)](https://david-dm.org/AtomLinter/linter-eslint)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [eslint](http://eslint.org). It will be used with files that\nhave the \"JavaScript\" syntax.\n\n## Installation\n\n```ShellSession\napm install linter-eslint\n```\n\n`linter-eslint` will look for a version of `eslint` local to your project and\nuse it if it's available. If none is found it will fall back to the version it\nships with.\n\nLets say you depend on a specific version of `eslint`, maybe it has unreleased\nfeatures, maybe it's just newer than what `linter-eslint` ships with. If\n`your-project/node_modules/eslint` exists `linter-eslint` will be used.\nThis package requires an `eslint` of at least v1.0.0.\n\nNote that if you do not have the `linter` package installed it will be\ninstalled\nfor you. If you are using an alternative `linter-*` consumer feel free\nto disable the `linter` package.\n\n## Use with plugins\n\nYou have two options:\n\n*   Install locally to your project `eslint` and the plugin\n\n    *   `$ npm i --save-dev eslint [eslint-plugins]`\n\n*   Install globally `eslint` and plugins\n\n    *   `$ npm i -g eslint [eslint-plugins]`\n    *   Activate `Use Global Eslint` package option\n    *   (Optional) Set `Global Node Path` with `$ npm config get prefix`\n\n## Using ESLint\n\nNote that recent versions of ESLint do not use any rules by-default. This\nmeans you have to specify a configuration file for your project!\n\nTo do this in a straightforward way run this:\n\n```ShellSession\neslint --init\n```\n\nAlternatively you can create the `.eslintrc` file by yourself. It is a good\nidea to have a look at the [ESLint documentation](http://eslint.org/docs/user-guide/configuring),\nincluding the [list of rules](http://eslint.org/docs/rules/).\n\n## A Note About Settings\n\nIf Use Global is on, Atom will use the global ESLint. The path to it is figured out by running `npm get prefix`. If this fails for any reason, you can set the global path manually in Global Node Installation Path.\n\nIf Use Global is off, Atom will try to find a local installation in the project folder, look if there's ESLint in `${PROJECT_ROOT}/node_modules` and use it if found.\n\nThe path to the local node_modules folder can be a path relative to the project or an absolute path and should end in /node_modules/. This path is used if the other methods of discovery have failed.\n\nIf there is no local installation Atom will use the built-in ESLint in the linter-eslint package itself.\n\n## Contributing\n\nSee the [contributing guidelines](./CONTRIBUTING.md) to get started\n","metadata":{"name":"linter-eslint","main":"./src/main.js","version":"8.5.5","description":"Lint JavaScript on the fly, using ESLint","repository":"https://github.com/AtomLinter/linter-eslint.git","license":"MIT","engines":{"atom":"\u003e=1.13.0 \u003c2.0.0"},"configSchema":{"scopes":{"title":"List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.","type":"array","default":["source.js","source.jsx","source.js.jsx","source.flow","source.babel","source.js-semantic"],"items":{"type":"string"},"order":1},"lintHtmlFiles":{"title":"Lint HTML Files","description":"You should also add `eslint-plugin-html` to your .eslintrc plugins","type":"boolean","default":false,"order":2},"autofix":{"type":"object","order":3,"title":"Automatic Fixes","properties":{"fixOnSave":{"title":"Fix errors on save","description":"Have eslint attempt to fix some errors automatically when saving the file.","type":"boolean","default":false,"order":1},"ignoreFixableRulesWhileTyping":{"title":"Ignore fixable rules while typing","description":"Have the linter ignore all fixable rules during linting when editing a document. The list is automatically updated on each lint job, and requires at least one run to be populated. Only supported when using ESLint v4+.","type":"boolean","default":false,"order":2},"rulesToDisableWhileFixing":{"title":"Disable specific rules from fixes","description":"Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.","type":"array","default":[],"items":{"type":"string"},"order":3}}},"global":{"type":"object","order":4,"title":"Global ESLint","properties":{"useGlobalEslint":{"title":"Use global ESLint installation","description":"Make sure you have it in your $PATH","type":"boolean","default":false,"order":1},"eslintrcPath":{"title":".eslintrc Path","description":"It will only be used when there's no config file in project","type":"string","default":"","order":4},"globalNodePath":{"title":"Global Node Installation Path","description":"Write the value of `npm get prefix` here","type":"string","default":"","order":2}}},"disabling":{"type":"object","order":5,"properties":{"disableWhenNoEslintConfig":{"title":"Disable when no ESLint config is found (in package.json or .eslintrc)","type":"boolean","default":true,"order":1},"rulesToSilenceWhileTyping":{"title":"Silence specific rules while typing","description":"Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.","type":"array","default":[],"items":{"type":"string"},"order":2}}},"advanced":{"type":"object","collapsed":true,"title":"Uncommon","order":6,"properties":{"disableEslintIgnore":{"title":"Don't use .eslintignore files","type":"boolean","default":false,"order":1},"disableFSCache":{"title":"Disable FileSystem Cache","description":"Paths of node_modules, .eslintignore and others are normally cached","type":"boolean","default":false,"order":2},"showRuleIdInMessage":{"title":"Show Rule ID in Messages","type":"boolean","default":true,"order":3},"eslintRulesDirs":{"title":"ESLint Rules Directories","description":"Specify a comma separated list of directories for ESLint to load rules from.","type":"array","default":[],"items":{"type":"string"},"order":4},"localNodeModules":{"title":"Path to the local node_modules folder","description":"Optionally specify the path to the local node_modules folder","type":"string","default":"","order":5}}}},"scripts":{"test":"apm test","lint":"eslint ."},"dependencies":{"atom-babel6-transpiler":"1.2.0","atom-linter":"10.0.0","atom-package-deps":"5.1.0","babel-preset-env":"1.7.0","consistent-path":"2.0.3","crypto-random-string":"2.0.0","eslint":"4.19.1","eslint-rule-documentation":"1.0.23","fs-plus":"3.1.1","resolve-env":"1.0.0","user-home":"2.0.0"},"devDependencies":{"@commitlint/cli":"7.5.2","@commitlint/config-conventional":"7.5.0","@commitlint/travis-cli":"7.5.2","@semantic-release/apm-config":"6.0.1","eslint-config-airbnb-base":"13.1.0","eslint-plugin-import":"2.17.2","husky":"1.3.1","jasmine-fix":"1.3.1","rimraf":"2.6.3","semantic-release":"15.13.3"},"package-deps":["linter:2.0.0"],"providedServices":{"linter":{"versions":{"2.0.0":"provideLinter"}}},"eslintConfig":{"rules":{"no-console":"off","semi":["error","never"],"comma-dangle":"off","global-require":"off","import/no-unresolved":["error",{"ignore":["atom"]}],"object-curly-newline":["error",{"ObjectExpression":{"minProperties":5,"multiline":true,"consistent":true},"ObjectPattern":{"minProperties":5,"multiline":true,"consistent":true}}]},"extends":"airbnb-base","globals":{"atom":"true"},"env":{"node":true,"browser":true}},"atomTranspilers":[{"glob":"{src,spec}/*.js","transpiler":"atom-babel6-transpiler","options":{"setBabelEnv":false,"babel":{"presets":[["env",{"targets":{"node":"current"}}]],"sourceMaps":"inline","babelrc":false},"cacheKeyFiles":["package.json"]}}],"renovate":{"extends":["config:base"]},"release":{"extends":"@semantic-release/apm-config"},"commitlint":{"extends":["@commitlint/config-conventional"]},"husky":{"hooks":{"commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}}}},{"name":"atom-typescript","repository":{"type":"git","url":"https://github.com/TypeStrong/atom-typescript"},"downloads":1604212,"stargazers_count":830,"releases":{"latest":"13.3.0"},"readme":"# Atom TypeScript\n\n[![Join the chat at\nhttps://gitter.im/TypeStrong/atom-typescript](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/TypeStrong/atom-typescript?utm_source=badge\u0026utm_medium=badge\u0026utm_campaign=pr-badge\u0026utm_content=badge)\n\nJavaScript developers can now just open a `.ts` file and start hacking\naway like they are used to. No `grunt` no `Visual Studio`. Just pure\ncoding.\n\n**NOTE**: When updating to **v12**, make sure `language-typescript` core\npackage is **enabled**. We're discontinuing our own grammar in favor of\n`language-typescript`. Both are very similar and are basically\nMicrosoft's TextMate grammar repackaged, and there's little reason to\nbundle our own if there's one available by default.\n\n**NOTE**: This branch contains a major rewrite (**v11**) of the\n`atom-typescript` plugin that is lighter and faster, but lacks a few\nmajor features that you might miss. The previous version is still\navailable in the `legacy` branch and will continue to receive minor\nbugfixes, but I wouldn't count on any new developments.\n\n## Installation\n\n1.  Install [atom](https://atom.io).\n2.  Install dependencies (see below)\n3.  `apm install atom-typescript` (`apm` needs `git` in your path)\n4.  Fire up atom. Open a TypeScript file.\n\n**Dependencies**:\n\nAtom-TypeScript relies on some external packages for providing some of\nits GUI. You basically have two options.\n\n**Option 1**: Install `atom-ide-ui` package.\n\n**Option 2**: Install the following packages:\n\n-   `linter`\n-   `linter-ui-default`\n-   `hyperclick`\n-   `intentions`\n\n**Additional Notes**: [Some packages we\nlove](https://github.com/TypeStrong/atom-typescript/blob/master/docs/packages.md).\n\n## Reviews\n\n*Featured on the TypeScript home page under tools\nhttp://www.typescriptlang.org/* and [demoed by **Anders\nHejlsberg**](https://twitter.com/schwarty/status/593858817894404096).\n\n\"I was shocked at how good it felt to poke around on the compiler with\nit.\" [Jonathan Turner](https://twitter.com/jntrnr) \"And guess what, it\nworked perfectly. Like everything else! Faster than Visual Studio!\"\n[Daniel\nEarwicker](http://stackoverflow.com/users/27423/daniel-earwicker) \"It's\na thing of beauty - they had me at '*Type information on hover*'.\nDiscovering `tsconfig.json` support as well was just an enormous bonus.\"\n[John Reilly](https://twitter.com/johnny_reilly) \"This may be your best\noption for editing TypeScript at the moment - very nice!\" [Rasmus\nSchultz](https://twitter.com/mindplaydk)\n\n[*Add yours!*](https://github.com/TypeStrong/atom-typescript/issues/66)\n\n# Features\n\n-   Autocomplete\n-   Live error analysis\n-   Type information on hover\n-   Compile on save\n-   Project Context Support (`tsconfig.json`)\n-   Project Build Support\n-   `package.json` Support\n-   Goto Declaration\n-   Find References\n-   Semantic view\n-   Block comment and uncomment\n-   Rename refactoring\n-   Common Snippets\n-   Alternative to symbols-view\n\n# FAQ\n\nLocated online :\nhttps://github.com/TypeStrong/atom-typescript/blob/master/docs/faq.md\n\n------------------------------------------------------------------------\n\n# Feature Details\n\n## Auto Complete\n\nInternally using AutoComplete+. Just start typing and hints will show\nup. Or you can explicitly trigger it using `ctrl+space` or `cmd+space`.\nPress `tab` to make a selection.\n\n## Type information on hover\n\nJust hover\n\n![you definitely get the\npoint](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/hover.png)\n\n## Compile on save\n\nWhen `\"compileOnSave\": true` is set in `tsconfig.json`, TypeScript files\nwill be compiled and saved automatically. The compiler does its best to\nemit something, even if there are semantic errors in the file.\n\n## Project Support\n\n`atom-typescript` supports all the same options the TypeScript compiler\ndoes as it's using it behind the scenes to do all of the heavy lifting.\nIn fact, `atom-typescript` will use the exact version of TypeScript you\nhave installed in your `node_modules` directory.\n\n## Format Code\n\nShortcut : `ctrl+alt+l` or `cmd+alt+l`. Will format just the selection\nif you have something selected otherwise it will format the entire file.\n\n## Go to Declaration\n\nShortcut : `F12`. Will open the *first* declaration of the said item for\nnow. (Note: some people call it Go to Definition)\n\n## Find References\n\nShortcut `shift+F12`. Also called *find usages*.\n\n## Semantic View\n\nA bird's eye view of the current file. Use command\n`toggle semantic view`. The view updates while you edit the code. You\ncan also click to jump to any portion of the file.\n\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript-examples/master/screens/semanticView.png)\n\n## Refactoring\n\n### Rename\n\n`f2` to initiate rename. `enter` to commit and `esc` to cancel.\n![](https://raw.githubusercontent.com/TypeStrong/atom-typescript/master/docs/screens/renameRefactoring.png)\n\n## Quick Fix\n\nShortcut : `ctrl+enter` on a Mac and `alt+enter` for Windows and Linux\nwhen using `intentions`, `alt+a` when using `atom-ide-ui`. Currently\navailable codefixes:\nhttps://github.com/Microsoft/TypeScript/tree/master/src/services/codefixes\n\n## Alternative to symbols-view\n\nAtom's `symbols-view` package only works with `ctags`. This is obviously\nunsuitable for TypeScript. Hence, we provide two commands to emulate\n`symbols-view`:\n\n-   `typescript:toggle-file-symbols`\n-   `typescript:toggle-project-symbols`\n\nBoth are bound to the same keys as corresponding `symbols-view` commands\nby default:\n\n-   `ctrl-r` and `ctrl-shift-r` on PC\n-   `cmd-r` and `cmd-shift-r` on Mac\n\n## Contributing\n\nLook at\n[CONTRIBUTING.md](https://github.com/TypeStrong/atom-typescript/blob/master/CONTRIBUTING.md)\nfor curiosity. We work hard to keep the code as approachable as possible\nand are highly keen on helping you help us.\n\n## Changelog\n\nBreaking changes [available\nonline](https://github.com/TypeStrong/atom-typescript/blob/master/CHANGELOG.md).\n","metadata":{"name":"atom-typescript","version":"13.3.0","main":"./dist/main/atomts","preferGlobal":true,"description":"The only TypeScript plugin you will ever need.","atomTestRunner":"./node_modules/atom-ts-spec-runner/runner.js","activationHooks":["language-typescript:grammar-used"],"activationCommands":{"atom-workspace":["typescript:initialize-config"]},"scripts":{"build":"tsc -p ./lib","prettier":"ts-node scripts/prettier.ts write","prettier-check":"ts-node scripts/prettier.ts check","typecheck":"tsc --noEmit -p ./lib \u0026\u0026 tsc --noEmit -p ./scripts \u0026\u0026 tsc --noEmit -p ./spec","lint":"tslint --project ./lib \u0026\u0026 tslint --project ./spec","test":"npm run typecheck \u0026\u0026 npm run lint \u0026\u0026 npm run prettier-check"},"engines":{"atom":"\u003e=1.31.0 \u003c2.0.0","node":"*"},"configSchema":{"unusedAsInfo":{"title":"Show unused values with severity info","description":"Show unused values with severity 'info' instead of 'error'","type":"boolean","default":true,"order":90},"autocompletionSuggestionPriority":{"description":"Snippets etc have priority of 1. Requires Atom restart","type":"integer","default":3,"order":20},"locale":{"title":"TypeScript locale","description":"Use this locale for TypeScript messages (e.g. 'de'). Requires Atom restart","type":"string","default":"en","order":50},"preferBuiltinTooltips":{"title":"Prefer built-in type tooltips","description":"Use built-in tooltips for displaying type information instead of Atom-IDE ones (if available); Change requires Atom restart","type":"boolean","default":false,"order":55},"preferBuiltinSigHelp":{"title":"Prefer built-in signature help tooltips","description":"Use built-in tooltips for displaying signature help instead of Atom-IDE ones (if available); Change requires Atom restart","type":"boolean","default":false,"order":56},"preferBuiltinBusySignal":{"title":"Prefer built-in busy status indicator","description":"Use built-in busy status indicator instead of Atom-IDE one (if available); Change requires Atom restart","type":"boolean","default":false,"order":57},"preferBuiltinOccurrenceHighlight":{"title":"Prefer built-in occurrence highligting","description":"Use built-in occurrence highlights instead of Atom-IDE one (if available); Change requires Atom restart","type":"boolean","default":false,"order":58},"disableAtomIdeDefinitions":{"title":"Disable Atom-IDE Definitions interface","description":"Atom-IDE will revert to using Hyperclick for go-to-definition; Atom-Typescript will be able to track position history and return-from-declaration command will work; you will lose fancy previews on ctrl/cmd+mouseover though; Change requires Atom restart","type":"boolean","default":false,"order":59},"buildStatusTimeout":{"title":"Build status visibility timeout","description":"How long to show successful build status, in seconds. Failed status will be shown indefinitely. Negative means forever","type":"number","default":"10","order":60},"showSemanticView":{"title":"Show semantic view","description":"Show semantic view (outline) for typescript content","type":"boolean","default":false,"order":70},"tooltipDelay":{"title":"Type tooltip delay","description":"Delay before type tooltip is shown on mouse hover in milliseconds","type":"integer","default":100,"order":60},"tooltipPosition":{"title":"Built-in type tooltip position","description":"Above or below cursor position","type":"string","enum":["top","bottom"],"default":"bottom","order":61},"sigHelpPosition":{"title":"Built-in signature help tooltip position","description":"Above or below cursor position","type":"string","enum":["top","bottom"],"default":"top","order":62},"ignoredDiagnosticCodes":{"title":"Ignore diagnostics","description":"List of diagnostic codes to ignore, comma-separated. Refer to [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) for diagnostic codes","type":"array","items":{"type":"string"},"default":[],"order":80},"ignoreUnusedSuggestionDiagnostics":{"title":"Ignore 'unused parameter/variable/etc' suggestion diagnostics","description":"When `noUnusedLocals` etc are disabled, TypeScript 2.9 and above still report this as 'suggestions'. This option will filter these out","type":"boolean","default":"false","order":100},"suppressAllDiagnostics":{"title":"Suppress all diagnostics","description":"The package will not report any problems with TypeScript. Use only if you know what you are doing","type":"boolean","default":"false","order":120},"tsFileExtensions":{"title":"TypeScript file extensions","description":"Comma-separated list of TypeScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing","type":"array","items":{"type":"string"},"default":[".ts",".tst",".tsx"],"order":130},"jsFileExtensions":{"title":"JavaScript file extensions","description":"Comma-separated list of JavaScript file extensions; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing","type":"array","items":{"type":"string"},"default":[".js",".jst",".jsx"],"order":140},"tsSyntaxScopes":{"title":"TypeScript syntax scopes","description":"Comma-separated list of TypeScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing","type":"array","items":{"type":"string"},"default":["source.ts","source.tsx","typescript"],"order":150},"jsSyntaxScopes":{"title":"JavaScript syntax scopes","description":"Comma-separated list of JavaScript syntax scopes; may require Atom restart to take effect; DO NOT EDIT unless you know what you are doing","type":"array","items":{"type":"string"},"default":["source.js","source.jsx","javascript"],"order":160},"allowJS":{"title":"Enable Atom-Typescript for JavaScript files (experimental)","description":"Passes JS files to TypeScript server; Most likely need allowJS: true and checkJS: true in tsconfig","type":"boolean","default":false,"order":170},"tsserverInstancePerTsconfig":{"title":"Spawn separate tsserver instance for each tsconfig.json","description":"This option helps avoid confusion when multiple projects are referincing the same file, but can prevent external definition files (d.ts) from reloading when changed. Changing this option requires Atom restart.","type":"boolean","default":false,"order":180}},"deserializers":{"atomts-semantic-view/SemanticView":"deserializeSemanticView"},"consumedServices":{"linter-indie":{"versions":{"^2.0.0":"consumeLinter"}},"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}},"datatip":{"versions":{"0.1.0":"consumeDatatipService"}},"signature-help":{"versions":{"0.1.0":"consumeSignatureHelp"}},"atom-ide-busy-signal":{"versions":{"0.1.0":"consumeBusySignal"}}},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"provideAutocomplete"}},"hyperclick":{"versions":{"0.1.0":"provideHyperclick"}},"intentions:list":{"versions":{"1.0.0":"provideIntentions"}},"intentions:highlight":{"versions":{"1.0.0":"provideIntentionsHighlight"}},"code-actions":{"versions":{"0.1.0":"provideCodeActions"}},"find-references":{"versions":{"0.1.0":"provideReferences"}},"outline-view":{"versions":{"0.1.0":"provideOutlines"}},"definitions":{"versions":{"0.1.0":"provideDefinitions"}},"code-highlight":{"versions":{"0.1.0":"provideCodeHighlight"}}},"homepage":"https://github.com/TypeStrong/atom-typescript","repository":{"type":"git","url":"https://github.com/TypeStrong/atom-typescript.git"},"license":"MIT","bugs":{"url":"https://github.com/TypeStrong/atom-typescript/issues"},"dependencies":{"atom-highlight":"^0.4.2","atom-package-deps":"^5.0.0","atom-select-list":"^0.7.2","byline":"^5.0.0","etch":"^0.14.0","fs-plus":"^3.1.1","fuzzaldrin":"^2.1.0","lodash":"^4.17.11","resolve":"^1.10.0","tslib":"^1.9.3","typescript":"^3.3.4000"},"devDependencies":{"@types/atom":"^1.31.1","@types/byline":"^4.2.31","@types/chai":"^4.1.7","@types/fs-plus":"^3.0.1","@types/fuzzaldrin":"^2.1.2","@types/lodash":"^4.14.123","@types/mocha":"^5","@types/node":"^8","@types/resolve":"^0.0.8","atom-ts-spec-runner":"^1.1.1","chai":"^4.2.0","prettier":"^1.16.4","ts-node":"^8.0.3","tslint":"^5.14.0","tslint-use-atom-disposables":"0.0.1","typescript-tslint-plugin":"0.3.1"},"package-deps":["atom-ide-ui:0.5.3"],"keywords":["typescript","javascript","html"]}},{"name":"tool-bar","repository":{"type":"git","url":"https://github.com/suda/tool-bar"},"downloads":1594389,"stargazers_count":592,"releases":{"latest":"1.2.0"},"readme":"# Atom Tool Bar\n\n[![Travis CI](https://travis-ci.org/suda/tool-bar.svg?branch=master)](https://travis-ci.org/suda/tool-bar)\n[![Circle CI](https://circleci.com/gh/suda/tool-bar/tree/master.svg?style=shield)](https://circleci.com/gh/suda/tool-bar/tree/master)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/xtm6u3sn3oil50da?svg=true)](https://ci.appveyor.com/project/suda/tool-bar)\n[![apm](https://img.shields.io/apm/dm/tool-bar.svg)]()\n[![Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/suda/tool-bar?utm_source=badge\u0026utm_medium=badge\u0026utm_campaign=pr-badge\u0026utm_content=badge)\n\nThis package provides extensible tool bar for Atom.\n\n**Note:** this package by itself adds an empty toolbar. To propagate it with\nicons you can [install plugins](#plugins).\n\n![Horizontal](http://cl.ly/image/2w0u3c1x1K3W/Screenshot-2015-04-21-16.46.49.png)\n\n![Vertical](http://cl.ly/image/1t3U3F191p35/Screenshot-2015-04-21-16.45.46.png)\n\n![Different Sizes](http://cl.ly/image/3v1N2F3e3I47/Screenshot-2015-04-21-16.45.46_2.png)\n\n![Light Theme](http://cl.ly/image/0g043b1e0P1X/Screenshot-2015-04-21-16.46.02.png)\n\n## Configuration\n\n### Position\n\nOn which edge of the editor should the tool bar appear. Possible options:\n\n*   Top\n*   Right\n*   Bottom\n*   Left\n\n### Icon size\n\n*   Very Small *(12px)*\n*   Small *(16px)*\n*   Big *(24px)*\n*   Large *(32px)*\n\n### Visibility\n\n*   Visible\n*   Hidden\n\n### Full Width (available in Atom \u003e= 1.7)\n\nWhen on top/bottom, expand to full window width.\n\n### Use TouchBar\n\nIf your computer is equipped with a TouchBar (only Apple MacBook Pro series\ncurrently) it can display up to seven tool bar buttons there.\n\n## Plugins\n\n*   [Flex Tool Bar](https://atom.io/packages/flex-tool-bar)\n*   [Tool Bar Main](https://atom.io/packages/tool-bar-main)\n*   [Toolbar Almighty](https://atom.io/packages/tool-bar-almighty)\n*   [Toolbar for Atom](https://atom.io/packages/tool-bar-atom)\n*   [Toolbar Shortcuts](https://atom.io/packages/tool-bar-shortcuts)\n*   And [more](https://atom.io/packages/search?utf8=%E2%9C%93\u0026q=keyword%3Atool-bar)...\n\n## Packages using tool-bar\n\n*   [Particle Dev](https://atom.io/packages/spark-dev)\n*   [Facebook Nuclide](https://atom.io/packages/nuclide)\n*   [PlatformIO IDE](https://atom.io/packages/platformio-ide)\n*   [Organized](https://atom.io/packages/organized)\n\n## Integrating instructions\n\nBy itself this package shows an empty tool bar. To add buttons and spacers to\nthe tool bar, follow the instructions below.\n\n### Package.json\n\nMake sure the following properties are part of your `package.json`.\n\n```json\n\"consumedServices\": {\n  \"tool-bar\": {\n    \"versions\": {\n      \"^0 || ^1\": \"consumeToolBar\"\n    }\n  }\n}\n```\n\nWe recommend using [Atom-Package-Deps](https://github.com/steelbrain/package-deps)\nin your package for installing dependency packages like this package.\n\n### Main package file\n\nIn your main package file, add the following methods and replace\n`your-package-name` with your package name.\n\n```js\nlet toolBar;\n\nexport function consumeToolBar(getToolBar) {\n  toolBar = getToolBar('your-package-name');\n  // Add buttons and spacers here...\n}\n\nexport function deactivate() {\n  if (toolBar) {\n    toolBar.removeItems();\n    toolBar = null;\n  }\n}\n```\n\n### Example\n\n```js\nlet toolBar;\n\nexport function consumeToolBar(getToolBar) {\n  toolBar = getToolBar('your-package-name');\n\n  // Adding button\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: 'application:about',\n    tooltip: 'About Atom'\n  });\n\n  // Adding spacer\n  toolBar.addSpacer();\n\n  // Using custom icon set (Ionicons)\n  const button = toolBar.addButton({\n    // For Material style icons, use md- prefix instead\n    icon: 'ios-gear-a',\n    callback: 'application:show-settings',\n    tooltip: 'Show Settings',\n    iconset: 'ion'\n  });\n\n  // Disable button\n  button.setEnabled(false);\n\n  // Function with data in callback\n  toolBar.addButton({\n    icon: 'alert',\n    callback(data) {\n      alert(data);\n    },\n    tooltip: 'Show Alert',\n    data: 'foo'\n  });\n\n  // Callback with modifiers\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: {\n      '': 'application:cmd-1',      // Without modifiers is default action\n      'alt': 'application:cmd-2',\n      'ctrl': 'application:cmd-3',  // With function callback\n      'shift'(data) {\n        console.log(data);\n      },\n      'alt+shift': 'application:cmd-5',       // Multiple modifiers\n      'alt+ctrl+shift': 'application:cmd-6'   // All modifiers\n    },\n    data: 'foo'\n  });\n\n  // Calling multiple callbacks at once\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: ['application:cmd-1', 'application:cmd-2']\n  });  \n\n  // Adding spacer and button at the beginning of the tool bar\n  toolBar.addSpacer({priority: 10});\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: 'application:about',\n    priority: 10\n  });\n\n  // Adding text button\n  toolBar.addButton({\n    text: 'hello',\n    callback: 'application:about'\n  });\n\n  // Text buttons can also have an icon\n  toolBar.addButton({\n    icon: 'octoface',\n    text: 'hello',\n    callback: 'application:about'\n  });\n\n  // Text buttons can be html\n  toolBar.addButton({\n    icon: 'octoface',\n    text: '\u003cb\u003eBIG\u003c/b\u003e button',\n    html: true,\n    callback: 'application:about'\n  });\n\n  // Cleaning up when tool bar is deactivated\n  toolBar.onDidDestroy(() =\u003e {\n    this.toolBar = null;\n    // Teardown any stateful code that depends on tool bar ...\n  });\n}\n```\n\n## Methods\n\n### `.addButton({icon, iconset, text, html, callback, priority, tooltip, data})`\n\nThe method `addButton` requires an object with at least the property `callback`. The\n`callback` must be an Atom command string, a custom callback function or an\nobject where the keys are key modifiers (`alt`, `ctrl` or `shift`) and the\nvalues are commands or custom functions (see [example](#example)).\n\nThe remaining properties\n`tooltip` (default there is no tooltip),\n`text` (default there is no text),\n`html` (default `false`),\n`icon` (default there is no icon),\n`iconset` (defaults to `Octicons`),\n`data`, and\n`priority` (defaults `50`)\nare optional.\n\nThe `tooltip` option may be a `string` or an `object` that is passed to Atom's\n[TooltipManager](https://atom.io/docs/api/latest/TooltipManager#instance-add)\n\nThe return value of this method shares another method called\n`setEnabled(enabled)` to enable or disable the button.\n\n### `.addSpacer({priority})`\n\nThe method `addSpacer` has only one optional property `priority` (defaults\n`50`).\n\n### `.removeItems()`\n\nUse the method `removeItems` to remove the buttons added by your package. This\nis particular useful in your package `deactivate` method, but can be used at\nany time.\n\n### `.onDidDestroy(callback)`\n\nThe `onDidDestroy` method takes a function that will be called when the\n`tool-bar` package is destroyed. This is useful if your package needs to do\ncleanup when the `tool-bar` is deactivated but your package continues running.\n\n## Supported icon sets\n\n*   [Octicons](https://octicons.github.com) (Atom's flavour)\n*   [Ionicons](http://ionicons.com) (`ion` with `ios-` and `md-` prefixes for the icon names)\n*   [FontAwesome](https://fontawesome.com/) (`fa` and `fab` for brands)\n*   [Foundation](http://zurb.com/playground/foundation-icon-fonts-3) (`fi`)\n*   [IcoMoon](https://icomoon.io) (`icomoon`)\n*   [Devicon](http://konpa.github.io/devicon/) (`devicon`)\n*   [MaterialDesignIcons](https://materialdesignicons.com/) (`mdi`)\n\n## Supported commands\n\n*   `tool-bar:toggle`\n*   `tool-bar:position-top`\n*   `tool-bar:position-right`\n*   `tool-bar:position-bottom`\n*   `tool-bar:position-left`\n\n## Authors\n\n*   [Wojtek Siudzinski](http://suda.pl) \u003csup\u003e(owner)\u003c/sup\u003e\n*   [Jeroen van Warmerdam](https://github.com/jerone)\n*   [Ryo Narita](https://github.com/cakecatz)\n\n## Contributors\n\nIssues and pull requests are very welcome. Feel free to write your own packages\nusing this one. For all contributions credits are due:\n\n*   [Pascal Bihler](https://github.com/pbihler)\n*   [Nikita Gusakov](https://github.com/nkt)\n*   [Simon AKA simurai](https://github.com/simurai)\n*   Carlos Santos\n*   [Daniel Alejandro Cast](https://github.com/lexcast)\n*   [James Coyle](https://github.com/JamesCoyle)\n*   [Andres Suarez](https://github.com/zertosh)\n*   [Tony Brix](https://github.com/UziTech)\n*   [Gareth McMullin](https://github.com/gsmcmullin)\n*   [Christopher Chedeau](https://github.com/vjeux)\n*   [Paul Brown](https://github.com/PaulBrownMagic)\n*   [Raphael Fetzer](https://github.com/pheraph)\n*   [Sven Lohrmann](https://github.com/malnvenshorn)\n","metadata":{"name":"tool-bar","version":"1.2.0","description":"Package providing customisable tool bar","keywords":["toolbar","tool-bar","service"],"license":"MIT","main":"./lib/tool-bar","repository":{"type":"git","url":"https://github.com/suda/toolbar.git"},"scripts":{"lint":"eslint --format tap . \u0026\u0026 remark ."},"devDependencies":{"babel-eslint":"^6.0.4","eslint":"^2.9.0","eslint-config-standard":"^5.2.0","eslint-plugin-promise":"^1.1.0","eslint-plugin-standard":"^1.3.2","remark-cli":"^4.0.0","remark-lint":"^6.0.1"},"engines":{"atom":"\u003e=1.20.0"},"providedServices":{"tool-bar":{"description":"A container for buttons at workspace edge","versions":{"1.0.0":"provideToolBar"}}}}},{"name":"atom-ide-ui","repository":{"type":"git","url":"https://github.com/facebook-atom/atom-ide-ui"},"downloads":1342103,"stargazers_count":570,"releases":{"latest":"0.13.0"},"readme":"# atom-ide-ui \u0026middot; [![Package version](https://img.shields.io/apm/v/atom-ide-ui.svg)](https://atom.io/packages/atom-ide-ui) [![CircleCI](https://img.shields.io/circleci/project/github/facebook-atom/atom-ide-ui.svg)](https://circleci.com/gh/facebook-atom/atom-ide-ui)\n\nAtom UIs to support language services and debuggers as part of Atom IDE.\n\nLanguage integrations should be built on top of\n[atom-languageclient](https://github.com/atom/atom-languageclient).\n\n![Screenshot](https://raw.githubusercontent.com/facebook-atom/atom-ide-ui/master/docs/images/screenshot.png)\n\nDebugger integrations should be modeled after [atom-ide-debugger-node](https://atom.io/packages/atom-ide-debugger-node).\n\n![Screenshot](https://raw.githubusercontent.com/facebook-atom/atom-ide-ui/master/docs/images/debugger.png)\n\nContributions are welcome! File bugs and feature requests from the issues page,\nor read the [CONTRIBUTING.md](https://github.com/facebook-atom/atom-ide-ui/blob/master/CONTRIBUTING.md)\nfile for details on how to submit a pull request.\n\n## Getting Started\n\nFirst, make sure you have Atom 1.19+ installed.\nInstall `atom-ide-ui` from \"Install\" in Atom's settings or run:\n\n```\napm install atom-ide-ui\n```\n\nYou'll also want to install a suitable language package and/or debugger package since `atom-ide-ui` doesn't provide any language or debugger support by default.\n\nLanguage support packages based on https://github.com/atom/atom-languageclient should work out of the box with `atom-ide-ui` installed, such as:\n\n* [ide-csharp](https://github.com/atom/ide-csharp)\n* [ide-flowtype](https://github.com/flowtype/ide-flowtype)\n* [ide-java](https://github.com/atom/ide-java)\n* [ide-php](https://github.com/atom/ide-php)\n* [ide-typescript](https://github.com/atom/ide-typescript)\n* [and more...](https://github.com/atom/atom-languageclient/wiki/List-of-Atom-packages-using-Atom-LanguageClient)\n\nThese debugger packages should work out of the box:\n* [Node Debugger](https://atom.io/packages/atom-ide-debugger-node)\n* [Python Debugger](https://atom.io/packages/atom-ide-debugger-python)\n* [React Native Debugger]( https://atom.io/packages/atom-ide-debugger-react-native)\n* [C/C++ GDB Debugger]( https://atom.io/packages/atom-ide-debugger-native-gdb)\n* [OCaml Debugger]( https://atom.io/packages/atom-ide-debugger-ocaml)\n\n## Language Features\n\nCheck out the documentation pages for more information about each feature!\n\n- [Busy Signal](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/busy-signal.md)\n- [Code Actions](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/code-actions.md)\n- [Code Format](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/code-format.md)\n- [Code Highlight](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/code-highlight.md)\n- [Console](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/console.md)\n- [Datatips](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/datatips.md)\n- [Definitions (plus Hyperclick)](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/definitions.md)\n- [Diagnostics](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/diagnostics.md)\n- [Find References](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/find-references.md)\n- [Outline](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/outline-view.md)\n- [Signature Help (Experimental/WIP)](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/signature-help.md)\n\n## Debugger Features\n- [Launch/Attach UI](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-launch-attach-ui.md)\n- [Breakpoints + conditional](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-breakpoints.md)\n- [Stepping (Pause, Continue, Step, Restart)](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-controls.md)\n- [Threads (Running, Focus)](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-threads.md)\n- [Stacktraces \u0026 in-memory source views](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-stacktraces.md)\n- [Scopes \u0026 editable variables views](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-scopes.md)\n- [Watch expressions](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-watch-expressions.md)\n- [Console + Repl](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/debugger-console.md)\n\nSee [Keybindings](https://github.com/facebook-atom/atom-ide-ui/blob/master/docs/keybindings.md) for a list of default keybindings.\n\n## License\n\n`atom-ide-ui` is BSD-licensed. We also provide an additional patent grant.\n","metadata":{"name":"atom-ide-ui","version":"0.13.0","description":"A collection of Atom UIs to support language services.","keywords":[],"repository":"https://github.com/facebook-atom/atom-ide-ui","license":"BSD-3-Clause","engines":{"atom":"\u003e= 1.25.0"},"main":"./index-entry.js","scripts":{"flow":"flow","lint":"eslint","lint-all":"eslint . --max-warnings 0","release-transpile":"./modules/nuclide-node-transpiler/bin/release-transpile.js","test":"npm run flow \u0026\u0026 npm run lint-all \u0026\u0026 ./scripts/test.js"},"workspaces":["modules/*"],"dependencies":{"anser":"1.4.6","classnames":"2.2.5","decoders":"1.6.1","dedent":"0.7.0","diffparser":"1.1.0","domexception":"1.0.1","dompurify":"1.0.3","escape-carriage":"1.2.0","escape-html":"1.0.3","escape-string-regexp":"1.0.5","event-kit":"2.2.0","event-target-shim":"3.0.1","fs-plus":"2.9.3","fuzzaldrin-plus":"0.4.1","glob":"7.1.1","heap":"0.2.6","idb-keyval":"2.3.0","idx":"1.2.0","immutable":"4.0.0-rc.9","invariant":"2.2.2","lodash":"4.17.10","log4js":"1.1.1","lru-cache":"4.0.2","marked":"0.3.9","mime-types":"2.1.16","mkdirp":"0.5.1","mv":"2.1.1","nuclide-prebuilt-libs":"0.5.2","nullthrows":"1.0.0","react":"16.4.1","react-dom":"16.4.1","react-virtualized":"9.18.5","redux":"3.6.0","redux-logger":"3.0.6","reselect":"3.0.1","rimraf":"2.6.2","rxjs":"5.5.5","season":"6.0.2","semver":"5.3.0","shallowequal":"0.2.2","shell-quote":"1.6.1","strip-ansi":"3.0.1","tabbable":"1.1.0","temp":"0.8.3","toml":"2.3.3","uuid":"3.0.1","vscode-debugprotocol":"1.24.0","vscode-jsonrpc":"3.3.0","vscode-uri":"1.0.1","xterm":"3.5.1"},"devDependencies":{"codecov":"2.3.0","eslint-plugin-dependencies":"2.4.0","eslint-plugin-flowtype":"2.39.1","eslint-plugin-jasmine":"2.9.1","eslint-plugin-jsx-a11y":"6.0.2","eslint-plugin-prefer-object-spread":"1.2.1","eslint-plugin-prettier":"2.3.1","eslint-plugin-react":"7.9.1","eslint-plugin-unicorn":"4.0.3","flow-bin":"0.75.0","nyc":"11.2.1","prettier":"1.13.6"}}},{"name":"hydrogen","repository":{"type":"git","url":"https://github.com/nteract/hydrogen"},"downloads":1316728,"stargazers_count":671,"releases":{"latest":"2.12.1"},"readme":"# Hydrogen \u003cimg src=\"https://cdn.rawgit.com/nteract/hydrogen/17eda245/static/animate-logo.svg\" alt=\"hydrogen animated logo\" height=\"50px\" align=\"right\" /\u003e\n\n[![slack in](https://slackin-nteract.now.sh/badge.svg)](https://slackin-nteract.now.sh)\n[![Build Status](https://travis-ci.org/nteract/hydrogen.svg?branch=master)](https://travis-ci.org/nteract/hydrogen)\n\nHydrogen is an interactive coding environment that supports Python, R, JavaScript and [other Jupyter kernels](https://github.com/jupyter/jupyter/wiki/Jupyter-kernels).\n\nCheckout our [Documentation](https://nteract.gitbooks.io/hydrogen/) and [Medium blog post](https://medium.com/nteract/hydrogen-interactive-computing-in-atom-89d291bcc4dd) to see what you can do with Hydrogen.\n\n![hero](https://cloud.githubusercontent.com/assets/13285808/20360886/7e03e524-ac03-11e6-9176-37677f226619.gif)\n\n## Contents\n\n1. [Background](#background)\n2. [Features](#features)\n3. [Plugins for Hydrogen](#plugins-for-hydrogen)\n4. [How it works](#how-it-works)\n5. [Why \"Hydrogen\"?](#why-hydrogen)\n6. [Contributing](#contributing)\n7. [Changelog](#changelog)\n8. [License](#license)\n\n## Background\n\nHydrogen was inspired by Bret Victor's ideas about the power of instantaneous feedback and the design of [Light Table](http://lighttable.com/). Running code inline and in real time is a more natural way to develop. By bringing the interactive style of Light Table to the rock-solid usability of Atom, Hydrogen makes it easy to write code the way you want to.\n\nYou also may be interested in our latest project – [nteract](https://github.com/nteract/nteract) – a desktop application that wraps up the best of the web based Jupyter notebook.\n\n## Features\n\n- execute a line, selection, or block at a time\n- rich media support for plots, images, and video\n- watch expressions let you keep track of variables and re-run snippets after every change\n- completions from the running kernel, just like autocomplete in the Chrome dev tools\n- code can be inspected to show useful information provided by the running kernel\n- one kernel per language (so you can run snippets from several files, all in the same namespace)\n- interrupt or restart the kernel if anything goes wrong\n- use a custom kernel connection (for example to run code inside Docker), read more in the \"Custom kernel connection (inside Docker)\" section\n\n## [Documentation](https://nteract.gitbooks.io/hydrogen/)\n\n- [Installation](https://nteract.gitbooks.io/hydrogen/docs/Installation.html)\n- [Usage](https://nteract.gitbooks.io/hydrogen/docs/Usage/GettingStarted.html)\n  - [Getting started](https://nteract.gitbooks.io/hydrogen/docs/Usage/GettingStarted.html)\n  - [Examples](https://nteract.gitbooks.io/hydrogen/docs/Usage/Examples.html)\n  - [Notebook Import and Export](https://nteract.gitbooks.io/hydrogen/docs/Usage/NotebookFiles.html)\n  - [Remote Kernels](https://nteract.gitbooks.io/hydrogen/docs/Usage/RemoteKernelConnection.html)\n- [Troubleshooting Guide](https://nteract.gitbooks.io/hydrogen/docs/Troubleshooting.html)\n- [Style Customization](https://nteract.gitbooks.io/hydrogen/docs/StyleCustomization.html)\n- [Plugin API](https://nteract.gitbooks.io/hydrogen/docs/PluginAPI.html)\n\n## Plugins for Hydrogen\n\nHydrogen has support for plugins. Feel free to add your own to the list:\n\n- [Hydrogen Launcher](https://github.com/lgeiger/hydrogen-launcher)\n- [hydrogen-python](https://github.com/nikitakit/hydrogen-python)\n- [Data Explorer](https://github.com/BenRussert/data-explorer)\n- [Cell Navigation](https://github.com/hoishing/cell-navigation)\n- [Hydrogen Cell Separator](https://github.com/jhabriel/hydrogen-cell-separator)\n\nIf you are interested in building a plugin take a look at our [plugin API documentation](https://nteract.gitbooks.io/hydrogen/docs/PluginAPI.html).\n\n## How it works\n\nHydrogen implements the [messaging protocol](http://jupyter-client.readthedocs.io/en/latest/messaging.html) for [Jupyter](https://jupyter.org/). Jupyter (formerly IPython) uses ZeroMQ to connect a client (like Hydrogen) to a running kernel (like IJulia or iTorch). The client sends code to be executed to the kernel, which runs it and sends back results.\n\n## Why \"Hydrogen\"?\n\nHydrogen atoms make up 90% of Jupiter by volume.\n\nPlus, it was easy to make a logo.\n\n## Contributing\n\nThanks for taking the time to contribute. Take a look at our [Contributing Guide](https://github.com/nteract/hydrogen/blob/master/CONTRIBUTING.md) to get started.\n\nThen, take a look at any issue labeled [good first issue](https://github.com/nteract/hydrogen/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) or [help wanted](https://github.com/nteract/hydrogen/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) that has not been claimed. These are great starting points.\n\n## Changelog\n\nEvery release is documented on the [GitHub Releases page](https://github.com/nteract/hydrogen/releases).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](https://github.com/nteract/hydrogen/blob/master/LICENSE.md) file for details\n\n**[⬆ back to top](#contents)**\n","metadata":{"name":"Hydrogen","main":"./lib/main","version":"2.12.1","description":"Run code interactively, inspect data, and plot. All the power of Jupyter kernels, inside your favorite text editor.","author":"nteract contributors","keywords":["execute","run","jupyter","ipython","julia","python","torch","ijulia","irkernel","itorch","plot","image"],"activationCommands":{"atom-text-editor":["hydrogen:start-local-kernel","hydrogen:connect-to-remote-kernel","hydrogen:run","hydrogen:run-and-move-down","hydrogen:run-all","hydrogen:run-all-above","hydrogen:run-cell","hydrogen:run-cell-and-move-down","hydrogen:export-notebook"],"atom-workspace":["hydrogen:import-notebook"]},"scripts":{"flow":"flow","prettier":"prettier --write \"lib/**/*.js\" \"spec/**/*.js\"","build:services-docs":"markdox lib/services/index.js -o lib/services/README.md","build:plugin-docs":"markdox lib/plugin-api/hydrogen-provider.js lib/plugin-api/hydrogen-kernel.js -o docs/PluginAPI.md","build:docs":"npm run build:plugin-docs \u0026\u0026 npm run build:services-docs"},"atomTestRunner":"atom-jasmine3-test-runner","repository":"https://github.com/nteract/hydrogen","license":"MIT","engines":{"atom":"\u003e=1.28.0 \u003c2.0.0"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"{lib,spec}/**/*.js":["prettier --write","git add"]},"dependencies":{"@babel/runtime-corejs2":"^7.0.0","@jupyterlab/services":"^0.52.0","@nteract/commutable":"^7.0.0","@nteract/markdown":"^4.0.0","@nteract/mathjax":"^4.0.0","@nteract/outputs":"^2.1.5","@nteract/plotly":"^1.48.3","@nteract/transform-vega":"^6.0.0","anser":"^1.4.8","atom-select-list":"^0.7.0","escape-carriage":"^1.2.0","escape-string-regexp":"^2.0.0","jmp":"^2.0.0","kernelspecs":"^2.0.0","lodash":"^4.14.0","mathjax-electron":"^3.0.0","mobx":"^5.1.1","mobx-react":"^6.0.0","react":"^16.8.6","react-dom":"^16.8.6","react-rangeslider":"^2.1.0","react-table":"^6.10.0","spawnteract":"^5.1.0","strip-indent":"^3.0.0","tildify":"^2.0.0","uuid":"^3.2.1","ws":"^3.3.1","xmlhttprequest":"^1.8.0"},"consumedServices":{"autocomplete.watchEditor":{"versions":{"^1.0.0":"consumeAutocompleteWatchEditor"}},"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"providedServices":{"autocomplete.provider":{"versions":{"4.0.0":"provideAutocompleteResults"}},"hydrogen.provider":{"versions":{"1.1.0":"provideHydrogen","1.2.0":"provideHydrogen"}}},"devDependencies":{"atom-jasmine3-test-runner":"^4.0.0","enzyme":"^3.1.1","enzyme-adapter-react-16":"^1.0.4","flow-bin":"^0.108.0","husky":"^3.0.0","lint-staged":"^9.0.0","markdox":"^0.1.10","mobx-react-devtools":"^6.0.0","prettier":"^1.14.3","react-test-renderer":"^16.0.0"}}},{"name":"atom-material-syntax","repository":{"type":"git","url":"https://github.com/atom-material/atom-material-syntax"},"downloads":1147812,"stargazers_count":1193,"releases":{"latest":"1.0.8"},"readme":"![](http://i.imgur.com/f58FC9u.png)\n---\n\nA syntax theme for [Atom Material UI](https://github.com/silvestreh/atom-material-ui). Inspired by Mattia Astorino's [SublimeText theme](https://github.com/equinusocio/material-theme).\n\n![screenshot](http://i.imgur.com/3YQeDps.png)\n","metadata":{"name":"atom-material-syntax","theme":"syntax","version":"1.0.8","description":"A dark syntax theme for Atom that uses Google's Material Design color palette","keywords":["syntax","theme","material","material design"],"repository":"https://github.com/silvestreh/atom-material-syntax","license":"MIT","engines":{"atom":"\u003e=1.13.0 \u003c2.0.0"}}},{"name":"japanese-menu","repository":{"type":"git","url":"https://github.com/syon/atom-japanese-menu"},"downloads":1064115,"stargazers_count":627,"releases":{"latest":"1.14.0"},"readme":"# Atom - Japanese Menu\n\nAtom のメニューバーとコンテキストメニュー、設定画面を日本語化します。\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot.png)\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot2.png)\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot3.png)\n","metadata":{"name":"japanese-menu","main":"./lib/main","version":"1.14.0","description":"メニューバーとコンテキストメニュー、設定画面を日本語化します。","repository":{"type":"git","url":"https://github.com/syon/atom-japanese-menu"},"license":"MIT","engines":{"atom":"\u003e=0.174.0 \u003c2.0.0"},"dependencies":{},"readme":"# Atom - Japanese Menu\n\nAtom のメニューバーとコンテキストメニュー、設定画面を日本語化します。\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot.png)\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot2.png)\n\n![screenshot](https://github.com/syon/atom-japanese-menu/raw/master/screenshot3.png)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/syon/atom-japanese-menu/issues"},"homepage":"https://github.com/syon/atom-japanese-menu"}},{"name":"atom-html-preview","repository":{"type":"git","url":"https://github.com/harmsk/atom-html-preview"},"downloads":1037167,"stargazers_count":697,"releases":{"latest":"0.2.6"},"readme":"# Atom HTML Preview\n\nA live preview tool for Atom Editor.\n\nInstall:\n```bash\napm install atom-html-preview\n```\n\nToggle HTML Preview:\n\nPress `CTRL-SHIFT-H` in the editor to open the preview pane.\n\n\u003c!--\n![Atom HTML Preview](https://dl.dropboxusercontent.com/u/20947008/webbox/atom/atom-html-preview.png)\n\nAn example with [Twitter Bootstrap 3 Package][1]\n\n![Atom HTML Preview with Bootstrap](https://dl.dropboxusercontent.com/u/20947008/webbox/atom/atom-bootstrap-3.gif)\n\n[1]: http://atom.io/packages/atom-bootstrap3\n--\u003e\n","metadata":{"name":"atom-html-preview","main":"./lib/atom-html-preview","version":"0.2.6","description":"A live preview tool for Atom Editor.","repository":{"type":"git","url":"https://github.com/harmsk/atom-html-preview"},"license":"MIT","engines":{"atom":"\u003e=0.174.0 \u003c2.0.0"},"dependencies":{"atom-space-pen-views":"^2.0.5"},"activationHooks":["language-html:grammar-used"],"readme":"# Atom HTML Preview\n\nA live preview tool for Atom Editor.\n\nInstall:\n```bash\napm install atom-html-preview\n```\n\nToogle HTML Preview:\n\nPress `CTRL-P` in editor to open Preview.","readmeFilename":"README.md","bugs":{"url":"https://github.com/harmsk/atom-html-preview/issues"},"homepage":"https://github.com/harmsk/atom-html-preview","_id":"atom-html-preview@0.1.3","_shasum":"1b6a3d9636c2b2411e84e1c95ab2121ea54e153e","_resolved":"file:../d-115111-11388-1t9q7wq/package.tgz","_from":"../d-115111-11388-1t9q7wq/package.tgz","_atomModuleCache":{"version":1,"dependencies":[],"extensions":{".coffee":["lib/atom-html-preview-view.coffee","lib/atom-html-preview.coffee"],".json":["package.json"]}}}},{"name":"project-manager","repository":{"type":"git","url":"https://github.com/danielbrodin/atom-project-manager"},"downloads":1013107,"stargazers_count":2211,"releases":{"latest":"3.3.8"},"readme":"# Project Manager\n[![Build status](https://travis-ci.org/danielbrodin/atom-project-manager.svg?branch=master)](https://travis-ci.org/danielbrodin/atom-project-manager/)\n[![apm](https://img.shields.io/apm/dm/project-manager.svg)](https://atom.io/packages/project-manager)\n[![apm](https://img.shields.io/apm/v/project-manager.svg)]()\n\n[![Paypal Donations](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations\u0026business=DR4XQWAZV6M2A\u0026lc=SE\u0026item_name=Project%20Manager\u0026item_number=atom%2dproject%2dmanager\u0026currency_code=EUR\u0026bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted) a :beer: if you enjoy using the [project manager](https://github.com/danielbrodin/atom-project-manager) :)\n\n![Project Manager](https://raw.github.com/danielbrodin/atom-project-manager/master/project-manager.gif)\n\n\nGet easy access to all your projects and manage them with project specific settings and options.\n\n## Install\n```\n$ apm install project-manager\n```\nYou can also open Atom and go to Preferences \u003e Install and search for `project-manager`\n\n\n## Use\n### List Projects\n`ctrl-cmd-p` (mac) / `alt-shift-P` (win \u0026 linux) or `Project Manager: List Projects` in the Command Palette.\n\nProjects can be filtered by `title`, `group` and `template` by typing `group: atom` which would give all projects with the `atom` group.\n\n\n### Save Project\n`Project Manager: Save Project` in the Command Palette and write the title you want to save the project as.\n\n### Edit Project\n`Project Manager: Edit Project` will open a page where you can edit the current project. It currently only supports certain fields.\n\n### Edit Projects\nAll projects are saved in a `.cson` file which you can easily reach by searching for `Project Manager: Edit Projects` in the Command Palette.\n\n## Project Settings\n\nsetting    | Type      | Description                                                                                                                                           | Default               \n-----------|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------\n`title`    | `string`  | Projects title. Used in the projects list                                                                                                | `''`                  \n`paths`    | `array`   | The folders that will open in the tree view. First path is the main one that counts as the project.                                                   | `[]`                  \n`settings` | `Object`  | Enables you to set project specific settings. Everything that goes in the `config.cson` file can go here. It also supports scoped settings.           | `{}`                  \n`icon`     | `string`  | Icon that shows in the projects list. It's class-based so can either be a class already provided by Atom like `icon-squirrel` or a class of your own. You can find a list of all icons on [octicons.github.com](https://octicons.github.com/). | `'icon-chevron-right'`\n`devMode`  | `boolean` | `true` if project should open in dev mode. [Look here][devMode] for more info.                                                                        | `false`               \n`group`    | `string`  | Adds a group to the projects list that can be used to group and filter projects                                                                       | `null`                \n`template` | `string`  | If you add a project in the `projects.cson` file without `paths` it will count as a template. This way you can easily share settings between projects | `null`                \n\n### Local settings file\nAll these settings can be added to a `project.cson` file in the root folder of the project. It follows the below example, but without the array.\n\n### Example\n```coffeescript\n[\n  {\n    title: 'Project Manager'\n    group: 'Atom'\n    paths: [\n      '/path/to/project-manager'\n    ]\n    devMode: true\n    settings:\n      'editor.tabLength': 4\n      'editor.showInvisibles': true\n  }\n]\n\n```\n\n## Provider\nIf you want to use the projects available through the Project Manager you can use the provided methods.\n\n```javascript\nfunction consumeProjectManager({ getProjects, getProject, saveProject, openProject } =\u003e {\n  /**\n   * Get an array containing all projects.\n   * The callback will be run each time a project is added.\n   * Returns a Disposable.\n   */\n  disposables.add( getProjects(projects =\u003e {\n    // Do something with the projects.\n  }));\n\n  /**\n   * Get the currently active project.\n   * The callback will be run whenever the active project changes.\n   * Returns a Disposable.\n   */\n  disposables.add( getProject(project =\u003e {\n    if (project) {\n      // We have an active project.\n    } else {\n      // Project is either not loaded yet, or there is no project saved.\n    }\n  }));\n\n  /**\n   * Can take either a project recieved from getProjects/getProject or\n   * just an object with the props for a new project.\n   */\n  saveProject(project);\n\n  /**\n   * Will open the project.\n   * `openInSameWindow` should be true if the project should open up in the\n   * current window.\n   */\n  openProject(project, openInSameWindow);\n});\n\n```\n\n\n## Contribute\nIf you would like to contribute to the project manager, be it new features or bugs,\nplease do the following:\n\n1. Fork the repository\n2. Create a new topic branch off the master branch that describe what it does\n3. Commit and push the branch\n4. Make a pull request describing what you have done\n5. Now it will hopefully get merged :)\n\nAll PR's should:\n- Pass the [eslint](https://atom.io/packages/linter-eslint) linter\n- Add a test when it makes sense, which should be most of the time\n\n[devMode]: https://atom.io/docs/api/v1.11.2/AtomEnvironment#instance-open\n","metadata":{"name":"project-manager","main":"./lib/project-manager","version":"3.3.8","description":"Project Manager for easy access and switching between projects in Atom.","repository":"https://github.com/danielbrodin/atom-project-manager","license":"MIT","keywords":["project","manager","settings","workflow","productivity"],"engines":{"atom":"\u003e1.4.0"},"scripts":{"test":"apm test \u0026\u0026 ./node_modules/.bin/eslint lib/**"},"dependencies":{"atom-project-util":"^4.2.0","atom-space-pen-views":"^2.0.3","change-case":"^3.0.0","etch":"^0.8.0","findit":"^2.0.0","mobx":"^2.6.0","season":"^5.4.1","tildify":"^1.2.0","underscore-plus":"^1.6.6","untildify":"^3.0.2"},"providedServices":{"project-manager":{"description":"Get access to all saved projects","versions":{"3.1.0":"provideProjects"}}},"configSchema":{"showPath":{"type":"boolean","default":true},"environmentSpecificProjects":{"type":"boolean","default":false},"prettifyTitle":{"type":"boolean","default":true,"description":"Will suggest a prettified project title on save."},"savePathsRelativeToHome":{"type":"boolean","default":false,"description":"Will save paths relative to home path if possible."},"sortBy":{"type":"string","description":"Default sorting is the order in which the projects are","default":"default","enum":["default","title","group","last modified"]},"includeGitRepositories":{"type":"boolean","default":false,"description":"Will search for directories in your `Project Home` that include `.git` and list them."},"ignoreDirectories":{"type":"string","default":"node_modules, vendor","description":"Comma separated list of directories to skip when looking for git repositories."},"alwaysOpenInSameWindow":{"type":"boolean","default":false,"description":"Will reverse `shift+enter` in the list view to open in a new window."}},"devDependencies":{"babel-eslint":"^7.0.0","eslint":"^3.19.0","eslint-config-airbnb-base":"^9.0.0","eslint-plugin-import":"^2.3.0"}}},{"name":"linter-jshint","repository":{"type":"git","url":"https://github.com/AtomLinter/linter-jshint"},"downloads":997106,"stargazers_count":1261,"releases":{"latest":"3.1.17"},"readme":"linter-jshint\n=========================\n\nThis plugin for [linter](https://github.com/atom-community/linter) provides an interface to [JSHint](http://www.jshint.com/docs/). It will lint JavaScript in files with the `.js` extension and optionally inside `\u003cspan\u003e` blocks in HTML or PHP files.\n\n## Installation\nThe Linter package must be installed in order to use this plugin. If it isn't installed, please follow the instructions [here](https://github.com/atom-community/linter#how-to--installation).\n\n### Plugin installation\n```sh\n$ apm install linter-jshint\n```\n\n## Settings\nYou can configure linter-jshint by editing `~/.atom/config.cson` (choose Open Your Config in Atom menu):\n```coffee\n'linter-jshint':\n  # Path of the `jshint` executable\n  executablePath: '/path/to/bundled/jshint'\n\n  # Lint JavaScript inside `\u003cspan\u003e` blocks in HTML or PHP files\n  lintInlineJavaScript: false\n\n  # Disable linter when no `.jshintrc` is found in project\n  disableWhenNoJshintrcFileInPath: false\n```\n\n## Contributing\nIf you would like to contribute enhancements or fixes, please do the following:\n\n1. Fork the plugin repository\n2. Hack on a separate topic branch created from the latest `master`\n3. Commit and push the topic branch\n4. Make a pull request\n5. Welcome to the club :sunglasses:\n\nPlease note that modifications should follow these coding guidelines:\n\n- Indent of 2 spaces\n- Code should pass [CoffeeLint](http://www.coffeelint.org/) with the provided `coffeelint.json`\n- Vertical whitespace helps readability, don't be afraid to use it\n\n**Thank you for helping out!**\n","metadata":{"name":"linter-jshint","main":"./lib/main.js","version":"3.1.17","description":"Linter plugin for JavaScript, using jshint","repository":{"type":"git","url":"https://github.com/AtomLinter/linter-jshint.git"},"license":"MIT","configSchema":{"executablePath":{"type":"string","default":"","description":"Path of the `jshint` node script"},"lintInlineJavaScript":{"type":"boolean","default":false,"description":"Attempts to lint JavaScript inside `\u003cscript\u003e` blocks in HTML or PHP files."},"disableWhenNoJshintrcFileInPath":{"type":"boolean","default":false,"description":"Disable the provider when no configuration file is found."},"scopes":{"type":"array","default":["source.js","source.js-semantic"],"description":"List of scopes to run JSHint on, run `Editor: Log Cursor Scope` to determine the scopes for a file."},"jshintFileName":{"type":"string","default":".jshintrc","description":"Custom name for the .jshintrc file"},"jshintignoreFilename":{"type":"string","default":".jshintignore","description":"Custom name for the .jshintignore file"}},"scripts":{"test":"apm test","lint":"eslint lib spec decls \u0026\u0026 flow check"},"package-deps":["linter:2.0.0"],"dependencies":{"atom-linter":"10.0.0","atom-package-deps":"5.1.0","jshint":"2.10.2","jshint-json":"2.0.0","minimatch":"3.0.4","shelljs":"0.8.3"},"devDependencies":{"@commitlint/cli":"8.1.0","@commitlint/config-conventional":"8.1.0","@commitlint/travis-cli":"8.1.0","@semantic-release/apm-config":"6.0.1","husky":"3.0.5","semantic-release":"15.13.24","babel-eslint":"10.0.3","eslint":"6.3.0","eslint-config-airbnb-base":"14.0.0","eslint-plugin-import":"2.18.2","flow-bin":"0.107.0","jasmine-fix":"1.3.1"},"eslintConfig":{"parser":"babel-eslint","rules":{"global-require":"off","import/no-unresolved":["error",{"ignore":["atom"]}]},"extends":"airbnb-base","globals":{"atom":true},"env":{"node":true,"browser":true}},"engines":{"atom":"\u003e=1.7.0 \u003c2.0.0"},"providedServices":{"linter":{"versions":{"2.0.0":"provideLinter"}}},"release":{"extends":"@semantic-release/apm-config"},"commitlint":{"extends":["@commitlint/config-conventional"]},"renovate":{"extends":["config:base"],"packageRules":[{"packagePatterns":["^eslint"],"groupName":"ESLint packages"}]},"husky":{"hooks":{"commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}}}},{"name":"autoclose-html","repository":{"type":"git","url":"https://github.com/mattberkowitz/autoclose-html"},"downloads":990624,"stargazers_count":1379,"releases":{"latest":"0.23.0"},"readme":"# Auto Close HTML package for Atom Text Editor\n\nWill automatically add closing tags when you complete the opening tag.\n\n# Installation\n\nInstall using\n\n`apm install autoclose-html`\n\n# Usage\n\nUnder normal circumstances ending tags will be inserted on the same line for inline elements and with `\\n\\t\\n` in between for block elements. This is determined by attaching an element of the given type to the window and checking it's calculated `display` value.\nYou can use Force Inline and Force Block preferences to override this.\n\n# Bug Reports and Contributing\n\nIf you find a bug, please feel free to file an issue. Please understand however that I have very little time to work on this anymore, so most feature requests will not be implemented.\n\nBetter than an issue, however, would be to try and fix it yourself and submit a PR.\n\nIf you are interested in helping maintain this library, please contact me. As I mentioned, I have very little time to devote to this anymore, so if someone has interest in helping to keep it maintained, I'm open to considering it.\n\n\n# Options\n\n## Force Inline\n\nElements in this comma delimited list will render their closing tags on the same line, even if they are block by default. You can set this to \"*\" to force all closing tags to render inline.\n\n## Force Block\n\nElements in this comma delimited list will render their closing tags after a tabbed line, even if they are inline by default. A value of \"*\" for Force Inline overrides all values in Force Block.\n\n## Never Close\n\nElements in this comma delimited list should *not* render a closing tag\n\n## Make Never Close Elements Self Closing\n\nWill convert elements in Never Close list from `\u003cbr\u003e` to `\u003cbr /\u003e`\n\n## Legacy/International Mode\n\nEnables the old style of completion detection using buffer events rather than keybindings.\nAtom doesn't work well currently with non-US/non-QUERTY keyboards and will not correctly\nfire events when '\u003e' is pressed and/or fire events for entirely different keys.  **Please note that\nthis mode is buggy (ie can complete after undo) and may not be compatible with new\nfeatures and bug fixes in future releases, post-0.22.0** If/when the core issues behind\nkeybindings not reporting correctly on international keyboards is solved this option will\nbe removed.\n\n\n\n# Changelog\n\n#### 0.20.0\n- HTML (Jinja Templates), Ember HTMLBars, JavaScript with JSX added to default grammars, per user requests\n- Dispose events on deactivate (should prevent double closing after an upgrade in the future, although I don't think it will help for this release)\n- Added ability to use \"*\" for Force Inline Options\n- Some Readme cleanup\n\n#### 0.21.0\n- Fixed double closing after changing grammar\n\n#### 0.22.0\n- Better way of handling events, solves rebinding problems **and** having to define grammars to apply to\n\n#### 0.23.0\n- Added legacy mode for users having problems with event handling introduced in 0.22.0\n","metadata":{"name":"autoclose-html","author":{"name":"Matt Berkowitz"},"main":"./lib/autoclose-html","version":"0.23.0","private":true,"description":"Automates closing of HTML Tags","repository":{"type":"git","url":"https://github.com/mattberkowitz/autoclose-html"},"license":"MIT","engines":{"atom":"\u003e0.50.0"},"dependencies":{},"contributors":[{"name":"Evan Hahn","email":"me@evanhahn.com","url":"http://evanhahn.com"},{"name":"Mat Silva","email":"askmatsilva@.com","url":"https://github.com/matsilva"}],"readmeFilename":"README.md","bugs":{"url":"https://github.com/mattberkowitz/autoclose-html/issues"},"homepage":"https://github.com/mattberkowitz/autoclose-html","_id":"autoclose-html@0.8.0","dist":{"shasum":"25792d1cf3395393c861bfcb919fe684f505af85"},"_resolved":"C:\\Users\\msilva\\AppData\\Local\\Temp\\d-114711-6236-8rgida\\package.tgz","_from":"C:\\Users\\msilva\\AppData\\Local\\Temp\\d-114711-6236-8rgida\\package.tgz"}},{"name":"platformio-ide","repository":{"type":"git","url":"https://github.com/platformio/platformio-atom-ide"},"downloads":938316,"stargazers_count":79,"releases":{"latest":"2.4.1"},"readme":"# PlatformIO IDE for Atom [![Build Status](https://travis-ci.org/platformio/platformio-atom-ide.svg?branch=develop)](https://travis-ci.org/platformio/platformio-atom-ide)\n\n**The next generation integrated development environment for IoT**\n\n[PlatformIO](http://platformio.org) is an open source ecosystem for IoT development.\nCross-platform build system and unified debugger. Remote unit testing and firmware updates.\n\n**Platforms**: Atmel AVR, Atmel SAM, Espressif 32, Espressif 8266, Freescale Kinetis, Infineon XMC, Intel ARC32, Lattice iCE40, Maxim 32, Microchip PIC32, Nordic nRF51, Nordic nRF52, NXP LPC, RISC-V, Samsung ARTIK, Silicon Labs EFM32, ST STM32, Teensy, TI MSP430, TI Tiva, WIZNet W7500\n\n**Frameworks**: Arduino, ARTIK SDK, CMSIS, Energia, ESP-IDF, libOpenCM3, mbed, Pumbaa, Simba, SPL, STM32Cube, WiringPi\n\n## Features\n\n* Cross-platform code builder without external dependencies to a system software:\n\n    - 500+ embedded boards\n    - 25+ development platforms\n    - 15+ frameworks\n\n* [PIO Remote](http://docs.platformio.org/page/plus/pio-remote.html)\n* [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html)\n* [Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html)\n* C/C++ Intelligent Code Completion\n* C/C++ Smart Code Linter for rapid professional development\n* Library Manager for the hundreds popular libraries\n* Multi-projects workflow with multiple panes\n* Themes support with dark and light colors\n* Serial Port Monitor\n* Built-in Terminal with PlatformIO Core tool (``pio``, ``platformio``)    \n\n## How it works\n\nPlease follow to the official documentation [PlatformIO IDE for Atom](http://docs.platformio.org/page/ide/atom.html).\n\n[![PlatformIO IDE for Atom](http://docs.platformio.org/page/_images/ide-atom-platformio.png)](http://platformio.org/platformio-ide)\n\n## License\n\nCopyright (c) 2016-present PlatformIO \u003ccontact@platformio.org\u003e\n\nThe PlatformIO IDE for Atom is licensed under the permissive Apache 2.0 license,\nso you can use it in both commercial and personal projects with confidence.\n","metadata":{"name":"platformio-ide","main":"./lib/main","version":"2.4.1","description":"Official PlatformIO IDE for IoT, Arduino, ARM mbed, Espressif (ESP8266/ESP32), STM32, PIC32, nRF51/nRF52, FPGA, CMSIS, SPL, AVR, Samsung ARTIK, libOpenCM3","keywords":["PlatformIO","IoT","debugger","unittest","embedded","arduino","mbed","flash","firmware","esp8266","esp32","avr","arm","fpga","verilog","hardware","serial","monitor"],"scripts":{"lint":"eslint --ext js lib || exit 0"},"repository":{"type":"git","url":"https://github.com/platformio/platformio-atom-ide.git"},"bugs":{"url":"https://github.com/platformio/platformio-atom-ide/issues"},"license":"Apache-2.0","engines":{"atom":"\u003e=1.13.0 \u003c2.0.0"},"activationHooks":["core:loaded-shell-environment"],"providedServices":{"builder":{"description":"PlatformIO IDE for Atom","versions":{"2.0.0":"provideBuilder"}}},"consumedServices":{"tool-bar":{"versions":{"\u003c2.0.0":"consumeToolbar"}},"platformioIDETerminal":{"versions":{"^1.0.0":"consumePlatformioIDETerminal"}},"busy-signal":{"versions":{"^1.0.0":"consumeBusy"}},"platformioIDEDebugger":{"versions":{"^1.0.0":"consumeDebugger"}}},"dependencies":{"command-join":"^3.0.0","etch":"^0.14.0","fs-plus":"^3.0.1","platformio-node-helpers":"^5.0.1","semver":"^6.2.0"},"devDependencies":{"babel-eslint":"^10.0.2","esformatter":"^0.10.0","esformatter-jsx":"^8.0.1","eslint":"^6.0.1","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx":"0.1.0"}}}]